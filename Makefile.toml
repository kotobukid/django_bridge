[config]
default_to_workspace = false

[env]
BACKEND_PORT = 8002
DJANGO_ADMIN_PORT = 8003

[tasks.server]
description = "Run Axum server"
env = { "WEB_PORT" = "${BACKEND_PORT}", "DJANGO_ADMIN_PORT" = "${DJANGO_ADMIN_PORT}" }
script = [
    "cd server",
    "cargo run --release"
]

[tasks.static]
description = "DBに保存済みのデータをRustコードとして書き出す"
script = [
    "cd static_generator",
    "cargo run --release"
]

[tasks.manage]
description = "Django manage.pyの拡張コマンドを実行"
args = ["./table_definition/manage.py", "${@}"]
command = "python"

[tasks.syncdb]
description = "Djangoのモデルの変更をRustのコードに追従させる"
command = "cargo"
env = { "CARGO_MANIFEST_DIR" = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/webapp" }
args = [
    "run",
    "--package",
    "syncdb"
]

[tasks.generate]
description = "Run npm run generate in the ./front Nuxt.js project"
cwd = "./front"
command = "npm"
args = ["run", "generate"]

[tasks.front_server]
description = "Run npm run dev in the ./front Nuxt.js project"
cwd = "./front"
command = "npm"
args = ["run", "dev"]
env = { "WEB_PORT" = "${BACKEND_PORT}" }

[tasks.trunk_serve]
description = "Leptosアプリ開発サーバーを起動"
cwd = "./wasm_front"
command = "trunk"
args = ["serve"]

[tasks.trunk_build]
description = "Leptosアプリをビルド（AIエージェントに示す）"
cwd = "./wasm_front"
command = "trunk"
args = ["build"]

[tasks.trunk_release]
cwd = "./wasm_front"
command = "trunk"
args = ["build", "--release", "--minify"]

[tasks.trunk_pages]
description = "Github Pages用にビルドする"
cwd = "./wasm_front"
command = "trunk"
args = ["build", "--release", "--minify", "--config", "Trunk-pages.toml"]