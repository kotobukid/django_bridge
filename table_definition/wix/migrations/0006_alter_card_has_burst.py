# Generated by Django 5.1.6 on 2025-03-05 06:00

from django.db import migrations, models

check_required = None


def prepare_check_group(apps, schema_editor):
    """グローバルで使うチェックグループを準備"""
    global check_required
    if check_required is not None:
        return  # 初期化済みなら何もしない

    CardType = apps.get_model('wix', 'CardType')  # CardType モデルの取得
    check_required = set()

    # 条件に該当する card_type.id をセットに追加
    for card_type in CardType.objects.all():
        if card_type.code in {"signi", "spell"}:
            check_required.add(card_type.id)


def convert_boolean_to_integer(apps, schema_editor):
    """BooleanField の値を IntegerField に変換する"""
    global check_required
    prepare_check_group(apps, schema_editor)  # 必要に応じて check_group を初期化

    Card = apps.get_model('wix', 'Card')  # Card モデルの取得

    # レコードの変更を記録
    updates = []  # 更新対象レコードを保持

    for card in Card.objects.all():
        if card.card_type in check_required:
            if card.burst_text != "":
                burst_value = 1  # True -> 1
            elif card.has_burst == "":
                burst_value = 2  # False -> 2
            else:
                continue  # None はスキップ
        else:
            burst_value = 0  # 関係ないエントリは 0

        updates.append((card.id, burst_value))

    # バルク更新
    for card_id, burst_value in updates:
        Card.objects.filter(pk=card_id).update(has_burst=burst_value)


class Migration(migrations.Migration):
    dependencies = [
        ('wix', '0005_alter_card_card_type'),
    ]

    operations = [
        migrations.AlterField(
            model_name='card',
            name='has_burst',
            field=models.IntegerField(default=0, verbose_name='バースト有無'),
        ),
        migrations.RunPython(convert_boolean_to_integer),  # データ変換処理
    ]
