//! スキルテキストレンダリングコンポーネント
//!
//! 符号化されたスキルテキストを解析し、テキストとアイコンコンポーネントを組み合わせて表示する。

use icon_encoder::{decode_skill_text, TextSegment};
use leptos::prelude::*;

/// スキルテキストレンダリングコンポーネント
///
/// 符号化されたスキルテキストを受け取り、アイコンコンポーネントと組み合わせてレンダリングする。
///
/// # Props
/// * `skill_text` - 符号化済みスキルテキスト（例："[c]：効果を発動する"）
#[component]
pub fn SkillTextRenderer(
    /// 符号化済みスキルテキスト
    skill_text: String,
) -> impl IntoView {
    let segments = decode_skill_text(&skill_text);

    view! {
        <span class="skill-text">
            {segments.into_iter().map(|segment| {
                match segment {
                    TextSegment::Text(text) => {
                        view! {
                            <span class="text-content">{text}</span>
                        }.into_any()
                    },
                    TextSegment::Icon { code, component } => {
                        render_icon_component(&component, &code)
                    }
                }
            }).collect_view()}
        </span>
    }
}

/// ライフバーストテキストレンダリングコンポーネント
///
/// 符号化されたライフバーストテキストを受け取り、アイコンコンポーネントと組み合わせてレンダリングする。
///
/// # Props
/// * `burst_text` - 符号化済みライフバーストテキスト
#[component]
pub fn BurstTextRenderer(
    /// 符号化済みライフバーストテキスト
    burst_text: String,
) -> impl IntoView {
    // ライフバーストテキストもスキルテキストと同じ処理を使用
    view! {
        <SkillTextRenderer skill_text=burst_text />
    }
}

/// アイコンコンポーネントを定義し、レンダリング関数を自動生成するマクロ
///
/// # 使用例
/// ```
/// define_icon_components! {
///     "IconCip" => IconCip(),
///     "IconAuto" => IconAuto(),
///     // ...
/// }
/// ```
macro_rules! define_icon_components {
    ($($component_name:literal => $component_func:ident()),* $(,)?) => {
        /// アイコンコンポーネントをレンダリングする（マクロで自動生成）
        ///
        /// コンポーネント名に基づいて適切なアイコンコンポーネントを返す。
        ///
        /// # Arguments
        /// * `component_name` - コンポーネント名（例："IconCip"）
        /// * `code` - アイコンコード（例："c"）
        ///
        /// # Returns
        /// アイコンコンポーネントまたはフォールバック表示
        fn render_icon_component(component_name: &str, code: &str) -> leptos::prelude::AnyView {
            match component_name {
                $(
                    $component_name => view! { <$component_func /> }.into_any(),
                )*
                // 未知のコンポーネント名の場合はフォールバック表示
                _ => view! {
                    <span class="icon-fallback bg-gray-200 text-gray-600 px-1 py-0.5 rounded text-xs" title=format!("Unknown icon: {}", component_name)>
                        {format!("[{}]", code)}
                    </span>
                }.into_any(),
            }
        }
    };
}

/// アイコンコンポーネントとその実装を一括定義するマクロ
///
/// # 使用例
/// ```
/// define_icon_with_impl! {
///     IconNewFeature, "IconNewFeature" => {
///         view! {
///             <span class="inline-block w-5 h-5 bg-purple-500 text-white text-xs font-bold rounded text-center leading-5" title="【新機能】">
///                 "新"
///             </span>
///         }
///     }
/// }
/// ```
#[allow(unused_macros)]
macro_rules! define_icon_with_impl {
    ($($component_func:ident, $component_name:literal => $impl_block:block),* $(,)?) => {
        $(
            #[component]
            fn $component_func() -> impl IntoView {
                $impl_block
            }
        )*

        // 既存のdefine_icon_components!に新しいコンポーネントを追加
        // （注意：既存のマクロ呼び出しを手動で更新する必要があります）
    };
}

// アイコンコンポーネントの定義とレンダリング関数の自動生成
define_icon_components! {
    // タイミングアイコン
    "IconCip" => IconCip(),
    "IconBondCip" => IconBondCip(),
    "IconBondAuto" => IconBondAuto(),
    "IconBondPassive" => IconBondPassive(),
    "IconBondActivated" => IconBondActivated(),
    "IconAuto" => IconAuto(),
    "IconActivated" => IconActivated(),
    "IconPassive" => IconPassive(),

    "IconOnceTurn" => IconOnceTurn(),
    "IconTwiceTurn" => IconTwiceTurn(),
    "IconOnceGame" => IconOnceGame(),

    "IconMyTurn" => IconMyTurn(),
    "IconOpponentTurn" => IconOpponentTurn(),

    "IconDown" => IconDown(),
    "IconCross" => IconCross(),


    "IconGuard" => IconGuard(),
    "IconLifeBurst2" => IconLifeBurst2(),

    "IconLifeBurst" => IconLifeBurst(),
    "IconRecollect" => IconRecollect(),
    "IconDreamTeam" => IconDreamTeam(),
    "IconTeamPiece" => IconTeamPiece(),

    "IconTeam" => IconTeam(),
    "IconTeamAuto" => IconTeamAuto(),
    "IconTeamPassive" => IconTeamPassive(),
    "IconTeamActivated" => IconTeamActivated(),
    "IconTeamCip" => IconTeamCip(),

    "IconLimitation" => IconLimitation(),
    "IconHarmony" => IconHarmony(),
    "IconRise" => IconRise(),
    "IconDuty" => IconDuty(),

    "InlineWhite" => InlineWhite(),
    "InlineBlue" => InlineBlue(),
    "InlineBlack" => InlineBlack(),
    "InlineRed" => InlineRed(),
    "InlineGreen" => InlineGreen(),
    "InlineColorless" => InlineColorless(),
    "InlineCoin" => InlineCoin(),

    "RiseIcon" => RiseIcon(),

    "WhiteZero" => WhiteZero(),
    "BlueZero" => BlueZero(),
    "BlackZero" => BlackZero(),
    "RedZero" => RedZero(),
    "GreenZero" => GreenZero(),
    "ColorlessZero" => ColorlessZero(),

    "IconDissona" => IconDissona(),
}

// アイコンコンポーネントの定義
// 実際の実装では svg_definition.rs の既存アイコンを流用したり、新しいアイコンを定義したりする

/// 【出】アイコン（Comes into play）
#[component]
fn IconCip() -> impl IntoView {
    view! {
        <svg class="inline-block" width="1rem" height="1rem" viewBox="0 0 70 64" style="vertical-align: middle; position: relative; top: -1px;" title="【出】">
            <path d="M 0.622 64 L 0.622 0 L 58.6 0 L 69.846 32 L 58.6 64 L 0.622 64 Z" style="fill: white; stroke-width: 1.074;"></path>
            <rect width="69.705" height="64" style="fill: none; stroke-width: 0.974;"></rect>
            <path d="M 3.017 61.786 L 3.017 2.214 L 56.983 2.214 L 67.451 32 L 56.983 61.786 L 3.017 61.786 Z" style="stroke-width: 1; fill: rgb(0, 98, 241);"></path>
            <path d="M 7.413 53.977 L 7.413 36.789 Q 7.413 35.933 7.927 35.419 Q 8.441 34.905 9.297 34.905 L 14.265 34.905 Q 15.121 34.905 15.635 35.419 Q 16.149 35.933 16.149 36.789 L 16.149 45.754 Q 16.149 46.611 16.663 47.125 Q 17.177 47.638 18.033 47.638 L 25.228 47.638 Q 26.084 47.638 26.598 47.125 Q 27.112 46.611 27.112 45.754 L 27.112 34.277 Q 27.112 33.421 26.598 32.907 Q 26.084 32.393 25.228 32.393 L 11.124 32.393 Q 10.268 32.393 9.754 31.879 Q 9.24 31.365 9.24 30.508 L 9.24 12.465 Q 9.24 11.608 9.754 11.094 Q 10.268 10.581 11.124 10.581 L 16.377 10.581 Q 17.234 10.581 17.748 11.094 Q 18.262 11.608 18.262 12.465 L 18.262 22.457 Q 18.262 23.314 18.776 23.828 Q 19.29 24.342 20.146 24.342 L 25.228 24.342 Q 26.084 24.342 26.598 23.828 Q 27.112 23.314 27.112 22.457 L 27.112 8.239 Q 27.112 7.383 27.626 6.869 Q 28.14 6.355 28.997 6.355 L 34.078 6.355 Q 34.935 6.355 35.449 6.869 Q 35.963 7.383 35.963 8.239 L 35.963 22.457 Q 35.963 23.314 36.477 23.828 Q 36.991 24.342 37.847 24.342 L 42.815 24.342 Q 43.671 24.342 44.185 23.828 Q 44.699 23.314 44.699 22.457 L 44.699 12.465 Q 44.699 11.608 45.213 11.094 Q 45.727 10.581 46.583 10.581 L 51.894 10.581 Q 52.75 10.581 53.264 11.094 Q 53.778 11.608 53.778 12.465 L 53.778 30.508 Q 53.778 31.365 53.264 31.879 Q 52.75 32.393 51.894 32.393 L 37.847 32.393 Q 36.991 32.393 36.477 32.907 Q 35.963 33.421 35.963 34.277 L 35.963 45.754 Q 35.963 46.611 36.477 47.125 Q 36.991 47.638 37.847 47.638 L 45.099 47.638 Q 45.955 47.638 46.469 47.125 Q 46.983 46.611 46.983 45.754 L 46.983 36.789 Q 46.983 35.933 47.497 35.419 Q 48.011 34.905 48.867 34.905 L 53.835 34.905 Q 54.692 34.905 55.205 35.419 Q 55.719 35.933 55.719 36.789 L 55.719 53.977 Q 55.719 54.833 55.205 55.347 Q 54.692 55.861 53.835 55.861 L 9.297 55.861 Q 8.441 55.861 7.927 55.347 Q 7.413 54.833 7.413 53.977 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【絆出】アイコン（Bond comes into play）
#[component]
fn IconBondCip() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【絆出】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); stroke-width: 2; fill: rgb(28, 84, 164);"></path>
            <path style="fill: rgb(236, 114, 164); stroke: rgb(203, 0, 80); stroke-width: 1;" d="M 14.951 23.155 L 14.726 23.251 L 14.501 23.155 C 6.229 18.829 4.55 12.985 5.806 9.527 C 7.063 6.07 11.255 4.998 14.726 10.217 C 18.197 4.998 22.389 6.07 23.646 9.527 C 24.902 12.985 23.223 18.829 14.951 23.155 Z"></path>
            <path d="M 27.522 22.737 L 27.522 16.687 C 27.522 16.486 27.582 16.326 27.703 16.205 C 27.824 16.084 27.984 16.024 28.185 16.024 L 29.934 16.024 C 30.135 16.024 30.295 16.084 30.416 16.205 C 30.537 16.326 30.597 16.486 30.597 16.687 L 30.597 19.843 C 30.597 20.044 30.657 20.205 30.778 20.325 C 30.899 20.446 31.059 20.506 31.26 20.506 L 33.793 20.506 C 33.994 20.506 34.154 20.446 34.275 20.325 C 34.396 20.205 34.456 20.044 34.456 19.843 L 34.456 15.803 C 34.456 15.602 34.396 15.441 34.275 15.321 C 34.154 15.2 33.994 15.14 33.793 15.14 L 28.828 15.14 C 28.627 15.14 28.467 15.08 28.346 14.959 C 28.225 14.838 28.165 14.677 28.165 14.476 L 28.165 8.125 C 28.165 7.924 28.225 7.763 28.346 7.642 C 28.467 7.521 28.627 7.461 28.828 7.461 L 30.677 7.461 C 30.878 7.461 31.039 7.521 31.16 7.642 C 31.281 7.763 31.341 7.924 31.341 8.125 L 31.341 11.642 C 31.341 11.843 31.401 12.004 31.522 12.125 C 31.643 12.246 31.803 12.306 32.004 12.306 L 33.793 12.306 C 33.994 12.306 34.154 12.246 34.275 12.125 C 34.396 12.004 34.456 11.843 34.456 11.642 L 34.456 6.637 C 34.456 6.436 34.516 6.276 34.637 6.155 C 34.758 6.034 34.919 5.974 35.12 5.974 L 36.908 5.974 C 37.109 5.974 37.27 6.034 37.391 6.155 C 37.512 6.276 37.572 6.436 37.572 6.637 L 37.572 11.642 C 37.572 11.843 37.632 12.004 37.753 12.125 C 37.874 12.246 38.034 12.306 38.235 12.306 L 39.984 12.306 C 40.185 12.306 40.345 12.246 40.466 12.125 C 40.587 12.004 40.647 11.843 40.647 11.642 L 40.647 8.125 C 40.647 7.924 40.707 7.763 40.828 7.642 C 40.949 7.521 41.109 7.461 41.31 7.461 L 43.18 7.461 C 43.381 7.461 43.541 7.521 43.662 7.642 C 43.783 7.763 43.843 7.924 43.843 8.125 L 43.843 14.476 C 43.843 14.677 43.783 14.838 43.662 14.959 C 43.541 15.08 43.381 15.14 43.18 15.14 L 38.235 15.14 C 38.034 15.14 37.874 15.2 37.753 15.321 C 37.632 15.441 37.572 15.602 37.572 15.803 L 37.572 19.843 C 37.572 20.044 37.632 20.205 37.753 20.325 C 37.874 20.446 38.034 20.506 38.235 20.506 L 40.788 20.506 C 40.989 20.506 41.149 20.446 41.27 20.325 C 41.391 20.205 41.451 20.044 41.451 19.843 L 41.451 16.687 C 41.451 16.486 41.511 16.326 41.632 16.205 C 41.753 16.084 41.913 16.024 42.114 16.024 L 43.863 16.024 C 44.064 16.024 44.225 16.084 44.345 16.205 C 44.466 16.326 44.526 16.486 44.526 16.687 L 44.526 22.737 C 44.526 22.938 44.466 23.099 44.345 23.22 C 44.225 23.341 44.064 23.401 43.863 23.401 L 28.185 23.401 C 27.984 23.401 27.824 23.341 27.703 23.22 C 27.582 23.099 27.522 22.938 27.522 22.737 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap; stroke-width: 1;"></path>
        </svg>
    }
}

/// 【絆自】アイコン（Bond Auto）
#[component]
fn IconBondAuto() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【絆自】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); stroke-width: 2; fill: rgb(245, 149, 32);"></path>
            <path style="fill: rgb(236, 114, 164); stroke: rgb(203, 0, 80); stroke-width: 1;" d="M 14.951 23.155 L 14.726 23.251 L 14.501 23.155 C 6.229 18.829 4.55 12.985 5.806 9.527 C 7.063 6.07 11.255 4.998 14.726 10.217 C 18.197 4.998 22.389 6.07 23.646 9.527 C 24.902 12.985 23.223 18.829 14.951 23.155 Z"></path>
            <path d="M 29.049 22.858 L 29.049 8.868 C 29.049 8.667 29.109 8.507 29.23 8.386 C 29.351 8.265 29.512 8.205 29.713 8.205 L 32.587 8.205 C 32.922 8.205 33.129 8.051 33.21 7.743 L 33.391 7.2 L 33.753 5.914 C 33.793 5.726 33.914 5.632 34.115 5.632 L 36.929 5.874 C 37.09 5.887 37.2 5.941 37.26 6.034 C 37.321 6.128 37.327 6.229 37.28 6.336 C 37.233 6.443 37.193 6.537 37.16 6.617 C 37.126 6.698 37.089 6.785 37.049 6.879 L 36.728 7.542 C 36.634 7.743 36.624 7.903 36.697 8.024 C 36.771 8.145 36.922 8.205 37.15 8.205 L 42.335 8.205 C 42.536 8.205 42.697 8.265 42.818 8.386 C 42.939 8.507 42.999 8.667 42.999 8.868 L 42.999 22.858 C 42.999 23.059 42.939 23.22 42.818 23.34 C 42.697 23.461 42.536 23.521 42.335 23.521 L 29.713 23.521 C 29.512 23.521 29.351 23.461 29.23 23.34 C 29.109 23.22 29.049 23.059 29.049 22.858 Z M 32.828 12.507 L 39.22 12.507 C 39.421 12.507 39.581 12.447 39.702 12.326 C 39.823 12.205 39.883 12.044 39.883 11.843 L 39.883 11.461 C 39.883 11.26 39.823 11.1 39.702 10.979 C 39.581 10.858 39.421 10.798 39.22 10.798 L 32.828 10.798 C 32.627 10.798 32.467 10.858 32.346 10.979 C 32.225 11.1 32.165 11.26 32.165 11.461 L 32.165 11.843 C 32.165 12.044 32.225 12.205 32.346 12.326 C 32.467 12.447 32.627 12.507 32.828 12.507 Z M 32.828 16.728 L 39.22 16.728 C 39.421 16.728 39.581 16.668 39.702 16.547 C 39.823 16.426 39.883 16.265 39.883 16.064 L 39.883 15.702 C 39.883 15.501 39.823 15.341 39.702 15.22 C 39.581 15.099 39.421 15.039 39.22 15.039 L 32.828 15.039 C 32.627 15.039 32.467 15.099 32.346 15.22 C 32.225 15.341 32.165 15.501 32.165 15.702 L 32.165 16.064 C 32.165 16.265 32.225 16.426 32.346 16.547 C 32.467 16.668 32.627 16.728 32.828 16.728 Z M 32.828 20.928 L 39.22 20.928 C 39.421 20.928 39.581 20.868 39.702 20.748 C 39.823 20.627 39.883 20.466 39.883 20.265 L 39.883 19.923 C 39.883 19.722 39.823 19.562 39.702 19.441 C 39.581 19.32 39.421 19.26 39.22 19.26 L 32.828 19.26 C 32.627 19.26 32.467 19.32 32.346 19.441 C 32.225 19.562 32.165 19.722 32.165 19.923 L 32.165 20.265 C 32.165 20.466 32.225 20.627 32.346 20.748 C 32.467 20.868 32.627 20.928 32.828 20.928 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap; stroke-width: 1;"></path>
        </svg>
    }
}

/// 【絆常】アイコン（Bond Passive）
#[component]
fn IconBondPassive() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【絆自】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); fill: rgb(207, 33, 31); stroke-width: 2;"></path>
            <path style="fill: rgb(236, 114, 164); stroke: rgb(203, 0, 80); stroke-width: 1;" d="M 14.951 23.155 L 14.726 23.251 L 14.501 23.155 C 6.229 18.829 4.55 12.985 5.806 9.527 C 7.063 6.07 11.255 4.998 14.726 10.217 C 18.197 4.998 22.389 6.07 23.646 9.527 C 24.902 12.985 23.223 18.829 14.951 23.155 Z"></path>
            <path d="M 27.019 12.989 L 27.019 9.411 Q 27.019 9.11 27.2 8.929 Q 27.381 8.748 27.682 8.748 L 29.954 8.748 Q 30.557 8.748 30.255 8.225 L 29.914 7.703 Q 29.833 7.602 29.773 7.512 Q 29.713 7.421 29.652 7.341 Q 29.391 6.979 29.773 6.758 L 31.542 5.833 Q 31.662 5.773 31.823 5.773 Q 31.984 5.773 32.104 5.934 L 32.888 7.019 L 33.552 8.064 Q 33.672 8.346 33.411 8.487 L 33.29 8.547 Q 32.888 8.748 33.331 8.748 L 33.853 8.748 Q 34.155 8.748 34.336 8.567 Q 34.516 8.386 34.516 8.085 L 34.516 6.376 Q 34.516 6.075 34.697 5.894 Q 34.878 5.713 35.18 5.713 L 36.848 5.713 Q 37.15 5.713 37.33 5.894 Q 37.511 6.075 37.511 6.376 L 37.511 8.085 Q 37.511 8.386 37.692 8.567 Q 37.873 8.748 38.175 8.748 L 38.878 8.748 Q 39.139 8.748 38.898 8.647 L 38.697 8.547 L 38.476 8.487 Q 38.295 8.386 38.396 8.225 Q 38.496 8.064 38.597 7.904 Q 38.697 7.743 38.838 7.512 Q 38.979 7.281 39.109 7.029 Q 39.24 6.778 39.32 6.597 Q 39.501 6.235 39.562 6.075 Q 39.763 5.652 40.185 5.813 L 41.974 6.577 Q 42.175 6.657 42.245 6.828 Q 42.315 6.999 42.245 7.14 Q 42.175 7.281 42.124 7.391 Q 42.074 7.502 41.994 7.632 Q 41.913 7.763 41.843 7.904 Q 41.773 8.044 41.692 8.185 Q 41.371 8.748 42.014 8.748 L 44.406 8.748 Q 44.707 8.748 44.888 8.929 Q 45.069 9.11 45.069 9.411 L 45.069 12.989 Q 45.069 13.29 44.888 13.471 Q 44.707 13.652 44.406 13.652 L 42.918 13.652 Q 42.617 13.652 42.436 13.471 Q 42.255 13.29 42.255 12.989 L 42.255 11.743 Q 42.255 11.441 42.074 11.26 Q 41.893 11.079 41.592 11.079 L 30.517 11.079 Q 30.215 11.079 30.034 11.26 Q 29.853 11.441 29.853 11.743 L 29.853 12.989 Q 29.853 13.29 29.672 13.471 Q 29.491 13.652 29.19 13.652 L 27.682 13.652 Q 27.381 13.652 27.2 13.471 Q 27.019 13.29 27.019 12.989 Z M 34.516 23.541 L 34.516 19.823 Q 34.516 19.521 34.336 19.341 Q 34.155 19.16 33.853 19.16 L 32.707 19.16 Q 32.406 19.16 32.225 19.341 Q 32.044 19.521 32.044 19.823 L 32.044 22.637 Q 32.044 22.938 31.863 23.119 Q 31.682 23.3 31.381 23.3 L 29.773 23.3 Q 29.471 23.3 29.29 23.119 Q 29.11 22.938 29.11 22.637 L 29.11 17.552 Q 29.11 17.25 29.29 17.069 Q 29.471 16.888 29.773 16.888 L 34.215 16.888 Q 34.516 16.888 34.516 16.577 Q 34.516 16.265 34.215 16.265 L 31.481 16.265 Q 31.18 16.265 30.999 16.084 Q 30.818 15.903 30.818 15.602 L 30.818 12.326 Q 30.818 12.024 30.999 11.843 Q 31.18 11.662 31.481 11.662 L 40.546 11.662 Q 40.848 11.662 41.029 11.843 Q 41.21 12.024 41.21 12.326 L 41.21 15.602 Q 41.21 15.903 41.029 16.084 Q 40.848 16.265 40.546 16.265 L 37.833 16.265 Q 37.511 16.265 37.511 16.577 Q 37.511 16.888 37.833 16.888 L 42.456 16.888 Q 42.757 16.888 42.938 17.069 Q 43.119 17.25 43.119 17.552 L 43.119 21.129 Q 43.119 23.039 41.551 23.361 Q 41.049 23.461 40.406 23.461 L 39.3 23.461 Q 38.838 23.461 38.778 22.999 Q 38.557 21.692 38.356 21.109 Q 38.215 20.707 38.637 20.707 L 39.421 20.707 Q 39.863 20.707 40.004 20.577 Q 40.144 20.446 40.144 20.044 L 40.144 19.602 Q 40.144 19.16 39.702 19.16 L 38.175 19.16 Q 37.873 19.16 37.692 19.341 Q 37.511 19.521 37.511 19.823 L 37.511 23.541 Q 37.511 23.843 37.33 24.024 Q 37.15 24.205 36.848 24.205 L 35.18 24.205 Q 34.878 24.205 34.697 24.024 Q 34.516 23.843 34.516 23.541 Z M 33.954 14.356 L 38.094 14.356 Q 38.476 14.356 38.476 13.964 Q 38.476 13.572 38.094 13.572 L 33.954 13.572 Q 33.552 13.572 33.552 13.964 Q 33.552 14.356 33.954 14.356 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【絆起】アイコン（Bond Activated）
#[component]
fn IconBondActivated() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【絆起】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); stroke-width: 2; fill: rgb(30, 143, 66);"></path>
            <path style="fill: rgb(236, 114, 164); stroke: rgb(203, 0, 80); stroke-width: 1;" d="M 14.951 23.155 L 14.726 23.251 L 14.501 23.155 C 6.229 18.829 4.55 12.985 5.806 9.527 C 7.063 6.07 11.255 4.998 14.726 10.217 C 18.197 4.998 22.389 6.07 23.646 9.527 C 24.902 12.985 23.223 18.829 14.951 23.155 Z"></path>
            <path d="M 37.612 23.863 Q 35.461 23.863 34.195 23.511 Q 32.929 23.16 32.084 22.737 Q 31.24 22.315 30.697 21.833 Q 30.155 21.351 29.853 21.351 Q 29.471 21.351 29.24 21.994 Q 29.009 22.637 28.748 23.18 Q 28.587 23.521 28.336 23.521 Q 28.084 23.521 27.904 23.441 Q 27.019 23.019 26.657 22.918 Q 26.095 22.697 26.396 22.084 Q 26.698 21.471 26.909 20.738 Q 27.12 20.004 27.24 19.26 Q 27.441 17.954 27.542 16.205 Q 27.542 15.863 27.733 15.672 Q 27.924 15.481 28.265 15.522 L 29.632 15.662 Q 30.135 15.702 30.135 16.205 L 30.074 17.511 Q 30.054 17.692 30.155 17.873 L 30.557 18.537 Q 30.738 18.778 30.738 18.496 L 30.738 14.858 Q 30.738 14.557 30.557 14.376 Q 30.376 14.195 30.074 14.195 L 27.723 14.195 Q 27.421 14.195 27.24 14.014 Q 27.059 13.833 27.059 13.532 L 27.059 12.466 Q 27.059 12.165 27.24 11.984 Q 27.421 11.803 27.723 11.803 L 29.974 11.803 Q 30.275 11.803 30.456 11.622 Q 30.637 11.441 30.637 11.14 L 30.637 10.919 Q 30.637 10.617 30.456 10.436 Q 30.275 10.255 29.974 10.255 L 28.326 10.255 Q 28.024 10.255 27.843 10.074 Q 27.662 9.894 27.662 9.592 L 27.662 8.587 Q 27.662 8.286 27.843 8.105 Q 28.024 7.924 28.326 7.924 L 29.974 7.924 Q 30.275 7.924 30.456 7.743 Q 30.637 7.562 30.637 7.26 L 30.637 6.477 Q 30.637 6.175 30.818 5.994 Q 30.999 5.813 31.3 5.813 L 32.768 5.813 Q 33.069 5.813 33.25 5.994 Q 33.431 6.175 33.431 6.477 L 33.431 7.26 Q 33.431 7.562 33.612 7.743 Q 33.793 7.924 34.094 7.924 L 34.979 7.924 Q 35.28 7.924 35.461 8.105 Q 35.642 8.286 35.642 8.587 L 35.642 9.592 Q 35.642 9.894 35.461 10.074 Q 35.28 10.255 34.979 10.255 L 34.094 10.255 Q 33.793 10.255 33.612 10.436 Q 33.431 10.617 33.431 10.919 L 33.431 11.14 Q 33.431 11.441 33.612 11.622 Q 33.793 11.803 34.094 11.803 L 35.361 11.803 Q 35.662 11.803 35.843 11.984 Q 36.024 12.165 36.024 12.466 L 36.024 13.532 Q 36.024 13.833 35.843 14.014 Q 35.662 14.195 35.361 14.195 L 34.094 14.195 Q 33.793 14.195 33.612 14.376 Q 33.431 14.557 33.431 14.858 L 33.431 15.039 Q 33.431 15.341 33.612 15.522 Q 33.793 15.702 34.094 15.702 L 35.22 15.702 Q 35.521 15.702 35.702 15.883 Q 35.883 16.064 35.883 16.366 L 35.883 17.612 Q 35.883 17.913 35.702 18.094 Q 35.521 18.275 35.22 18.275 L 34.094 18.275 Q 33.793 18.275 33.612 18.456 Q 33.431 18.637 33.431 18.939 L 33.431 20.265 Q 33.431 20.727 33.873 20.868 Q 35.421 21.27 37.19 21.27 Q 42.818 21.27 44.908 20.949 Q 45.33 20.908 45.21 21.31 Q 44.868 22.396 44.828 22.818 Q 44.788 23.24 44.767 23.361 Q 44.707 23.863 44.225 23.863 Z M 38.918 20.265 Q 37.873 20.265 37.491 20.064 Q 36.727 19.642 36.727 18.717 L 36.727 12.306 Q 36.727 12.004 36.908 11.823 Q 37.089 11.642 37.391 11.642 L 40.808 11.642 Q 41.109 11.642 41.29 11.461 Q 41.471 11.28 41.471 10.979 L 41.471 9.914 Q 41.471 9.612 41.29 9.431 Q 41.109 9.25 40.808 9.25 L 37.31 9.25 Q 37.009 9.25 36.828 9.069 Q 36.647 8.889 36.647 8.587 L 36.647 7.421 Q 36.647 7.12 36.828 6.939 Q 37.009 6.758 37.31 6.758 L 43.662 6.758 Q 43.963 6.758 44.144 6.939 Q 44.325 7.12 44.325 7.421 L 44.325 13.471 Q 44.325 13.773 44.144 13.954 Q 43.963 14.135 43.662 14.135 L 40.185 14.135 Q 39.883 14.135 39.702 14.316 Q 39.521 14.496 39.521 14.798 L 39.521 17.049 Q 39.521 17.331 39.662 17.421 Q 39.803 17.511 40.165 17.511 L 41.531 17.511 Q 42.195 17.511 42.396 17.15 Q 42.556 16.908 42.657 16.145 Q 42.697 15.723 43.099 15.883 Q 43.3 15.964 43.521 16.054 Q 43.742 16.145 43.984 16.215 Q 44.225 16.285 44.486 16.366 L 44.928 16.466 Q 45.37 16.607 45.29 17.029 Q 45.029 18.778 44.506 19.421 Q 43.823 20.265 42.275 20.265 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【自】アイコン（Auto）
#[component]
fn IconAuto() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 70 64" style="vertical-align: middle; position: relative; top: -1px;" title="【常】">
          <path d="M 0.622 64 L 0.622 0 L 58.6 0 L 69.846 32 L 58.6 64 L 0.622 64 Z" style="fill: white; stroke-width: 1.074;"></path>
          <rect width="69.705" height="64" style="fill: none; stroke-width: 0.974;"></rect>
          <path d="M 3.017 61.786 L 3.017 2.214 L 56.983 2.214 L 67.451 32 L 56.983 61.786 L 3.017 61.786 Z" style="stroke-width: 1; fill: rgb(255, 0, 0);"></path>
          <path d="M 9.483 26.873 L 9.483 17.759 Q 9.483 16.991 9.944 16.531 Q 10.405 16.07 11.173 16.07 L 16.959 16.07 Q 18.495 16.07 17.727 14.739 L 16.856 13.407 Q 16.651 13.151 16.498 12.921 Q 16.344 12.691 16.191 12.486 Q 15.525 11.564 16.498 11.001 L 21.003 8.646 Q 21.311 8.492 21.72 8.492 Q 22.13 8.492 22.437 8.902 L 24.434 11.667 L 26.123 14.329 Q 26.431 15.046 25.765 15.404 L 25.458 15.558 Q 24.434 16.07 25.56 16.07 L 26.891 16.07 Q 27.659 16.07 28.12 15.609 Q 28.581 15.148 28.581 14.38 L 28.581 10.028 Q 28.581 9.26 29.042 8.799 Q 29.503 8.339 30.271 8.339 L 34.52 8.339 Q 35.288 8.339 35.749 8.799 Q 36.21 9.26 36.21 10.028 L 36.21 14.38 Q 36.21 15.148 36.671 15.609 Q 37.131 16.07 37.899 16.07 L 39.691 16.07 Q 40.357 16.07 39.743 15.814 L 39.231 15.558 L 38.667 15.404 Q 38.207 15.148 38.463 14.739 Q 38.719 14.329 38.975 13.919 Q 39.231 13.51 39.589 12.921 Q 39.947 12.332 40.28 11.692 Q 40.613 11.052 40.818 10.591 Q 41.279 9.67 41.432 9.26 Q 41.944 8.185 43.019 8.595 L 47.576 10.54 Q 48.088 10.745 48.267 11.18 Q 48.447 11.615 48.267 11.974 Q 48.088 12.332 47.96 12.614 Q 47.832 12.895 47.627 13.228 Q 47.423 13.561 47.243 13.919 Q 47.064 14.278 46.859 14.636 Q 46.04 16.07 47.679 16.07 L 53.771 16.07 Q 54.539 16.07 55 16.531 Q 55.461 16.991 55.461 17.759 L 55.461 26.873 Q 55.461 27.641 55 28.102 Q 54.539 28.563 53.771 28.563 L 49.983 28.563 Q 49.215 28.563 48.754 28.102 Q 48.293 27.641 48.293 26.873 L 48.293 23.699 Q 48.293 22.931 47.832 22.47 Q 47.371 22.009 46.603 22.009 L 18.392 22.009 Q 17.624 22.009 17.163 22.47 Q 16.703 22.931 16.703 23.699 L 16.703 26.873 Q 16.703 27.641 16.242 28.102 Q 15.781 28.563 15.013 28.563 L 11.173 28.563 Q 10.405 28.563 9.944 28.102 Q 9.483 27.641 9.483 26.873 Z M 28.581 53.753 L 28.581 44.281 Q 28.581 43.513 28.12 43.052 Q 27.659 42.591 26.891 42.591 L 23.973 42.591 Q 23.205 42.591 22.744 43.052 Q 22.283 43.513 22.283 44.281 L 22.283 51.449 Q 22.283 52.217 21.823 52.678 Q 21.362 53.139 20.594 53.139 L 16.498 53.139 Q 15.73 53.139 15.269 52.678 Q 14.808 52.217 14.808 51.449 L 14.808 38.495 Q 14.808 37.727 15.269 37.267 Q 15.73 36.806 16.498 36.806 L 27.813 36.806 Q 28.581 36.806 28.581 36.012 Q 28.581 35.219 27.813 35.219 L 20.85 35.219 Q 20.082 35.219 19.621 34.758 Q 19.16 34.297 19.16 33.529 L 19.16 25.183 Q 19.16 24.415 19.621 23.955 Q 20.082 23.494 20.85 23.494 L 43.941 23.494 Q 44.709 23.494 45.17 23.955 Q 45.631 24.415 45.631 25.183 L 45.631 33.529 Q 45.631 34.297 45.17 34.758 Q 44.709 35.219 43.941 35.219 L 37.029 35.219 Q 36.21 35.219 36.21 36.012 Q 36.21 36.806 37.029 36.806 L 48.805 36.806 Q 49.573 36.806 50.034 37.267 Q 50.495 37.727 50.495 38.495 L 50.495 47.609 Q 50.495 52.473 46.501 53.292 Q 45.221 53.548 43.583 53.548 L 40.767 53.548 Q 39.589 53.548 39.435 52.371 Q 38.872 49.043 38.36 47.558 Q 38.002 46.534 39.077 46.534 L 41.074 46.534 Q 42.2 46.534 42.559 46.201 Q 42.917 45.868 42.917 44.844 L 42.917 43.718 Q 42.917 42.591 41.791 42.591 L 37.899 42.591 Q 37.131 42.591 36.671 43.052 Q 36.21 43.513 36.21 44.281 L 36.21 53.753 Q 36.21 54.521 35.749 54.982 Q 35.288 55.443 34.52 55.443 L 30.271 55.443 Q 29.503 55.443 29.042 54.982 Q 28.581 54.521 28.581 53.753 Z M 27.147 30.355 L 37.695 30.355 Q 38.667 30.355 38.667 29.356 Q 38.667 28.358 37.695 28.358 L 27.147 28.358 Q 26.123 28.358 26.123 29.356 Q 26.123 30.355 27.147 30.355 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【起】アイコン（Activated）
#[component]
fn IconActivated() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 74 64" style="vertical-align: middle; position: relative; top: -1px;" title="【起】">
            <path d="M 0.622 64 L 0.622 0 L 58.6 0 L 69.846 32 L 58.6 64 L 0.622 64 Z" style="fill: white; stroke-width: 1.074;"></path>
            <rect width="69.705" height="64" style="fill: none; stroke-width: 0.974;"></rect>
            <path d="M 3.017 61.786 L 3.017 2.214 L 56.983 2.214 L 67.451 32 L 56.983 61.786 L 3.017 61.786 Z" style="stroke-width: 1; fill: rgb(0, 142, 33);"></path>
            <path d="M 36.068 54.341 Q 30.579 54.341 27.347 53.444 Q 24.115 52.546 21.96 51.469 Q 19.806 50.391 18.42 49.16 Q 17.035 47.929 16.266 47.929 Q 15.291 47.929 14.701 49.57 Q 14.111 51.212 13.444 52.597 Q 13.034 53.469 12.393 53.469 Q 11.751 53.469 11.29 53.264 Q 9.033 52.187 8.109 51.93 Q 6.673 51.366 7.442 49.801 Q 8.212 48.237 8.75 46.364 Q 9.289 44.492 9.597 42.594 Q 10.11 39.259 10.366 34.796 Q 10.366 33.924 10.854 33.437 Q 11.341 32.949 12.213 33.052 L 15.702 33.411 Q 16.984 33.514 16.984 34.796 L 16.83 38.131 Q 16.779 38.592 17.035 39.054 L 18.061 40.747 Q 18.523 41.362 18.523 40.644 L 18.523 31.359 Q 18.523 30.589 18.061 30.128 Q 17.6 29.666 16.83 29.666 L 10.828 29.666 Q 10.059 29.666 9.597 29.204 Q 9.135 28.743 9.135 27.973 L 9.135 25.254 Q 9.135 24.485 9.597 24.023 Q 10.059 23.561 10.828 23.561 L 16.574 23.561 Q 17.343 23.561 17.805 23.1 Q 18.267 22.638 18.267 21.868 L 18.267 21.304 Q 18.267 20.535 17.805 20.073 Q 17.343 19.611 16.574 19.611 L 12.367 19.611 Q 11.598 19.611 11.136 19.15 Q 10.674 18.688 10.674 17.918 L 10.674 15.353 Q 10.674 14.584 11.136 14.122 Q 11.598 13.66 12.367 13.66 L 16.574 13.66 Q 17.343 13.66 17.805 13.199 Q 18.267 12.737 18.267 11.968 L 18.267 9.967 Q 18.267 9.197 18.728 8.736 Q 19.19 8.274 19.959 8.274 L 23.704 8.274 Q 24.474 8.274 24.936 8.736 Q 25.397 9.197 25.397 9.967 L 25.397 11.968 Q 25.397 12.737 25.859 13.199 Q 26.321 13.66 27.09 13.66 L 29.347 13.66 Q 30.117 13.66 30.579 14.122 Q 31.04 14.584 31.04 15.353 L 31.04 17.918 Q 31.04 18.688 30.579 19.15 Q 30.117 19.611 29.347 19.611 L 27.09 19.611 Q 26.321 19.611 25.859 20.073 Q 25.397 20.535 25.397 21.304 L 25.397 21.868 Q 25.397 22.638 25.859 23.1 Q 26.321 23.561 27.09 23.561 L 30.322 23.561 Q 31.092 23.561 31.553 24.023 Q 32.015 24.485 32.015 25.254 L 32.015 27.973 Q 32.015 28.743 31.553 29.204 Q 31.092 29.666 30.322 29.666 L 27.09 29.666 Q 26.321 29.666 25.859 30.128 Q 25.397 30.589 25.397 31.359 L 25.397 31.821 Q 25.397 32.59 25.859 33.052 Q 26.321 33.514 27.09 33.514 L 29.963 33.514 Q 30.732 33.514 31.194 33.975 Q 31.656 34.437 31.656 35.206 L 31.656 38.387 Q 31.656 39.157 31.194 39.618 Q 30.732 40.08 29.963 40.08 L 27.09 40.08 Q 26.321 40.08 25.859 40.542 Q 25.397 41.003 25.397 41.773 L 25.397 45.159 Q 25.397 46.339 26.526 46.698 Q 30.476 47.724 34.99 47.724 Q 49.354 47.724 54.69 46.903 Q 55.767 46.8 55.459 47.826 Q 54.587 50.596 54.484 51.674 Q 54.382 52.751 54.331 53.059 Q 54.177 54.341 52.945 54.341 Z M 39.402 45.159 Q 36.735 45.159 35.76 44.646 Q 33.81 43.568 33.81 41.209 L 33.81 24.844 Q 33.81 24.074 34.272 23.613 Q 34.734 23.151 35.503 23.151 L 44.224 23.151 Q 44.994 23.151 45.456 22.689 Q 45.917 22.228 45.917 21.458 L 45.917 18.739 Q 45.917 17.97 45.456 17.508 Q 44.994 17.046 44.224 17.046 L 35.298 17.046 Q 34.529 17.046 34.067 16.585 Q 33.605 16.123 33.605 15.353 L 33.605 12.378 Q 33.605 11.608 34.067 11.147 Q 34.529 10.685 35.298 10.685 L 51.509 10.685 Q 52.279 10.685 52.74 11.147 Q 53.202 11.608 53.202 12.378 L 53.202 27.819 Q 53.202 28.589 52.74 29.05 Q 52.279 29.512 51.509 29.512 L 42.634 29.512 Q 41.865 29.512 41.403 29.974 Q 40.941 30.436 40.941 31.205 L 40.941 36.951 Q 40.941 37.669 41.3 37.9 Q 41.659 38.131 42.583 38.131 L 46.071 38.131 Q 47.764 38.131 48.277 37.207 Q 48.688 36.592 48.944 34.642 Q 49.047 33.565 50.073 33.975 Q 50.586 34.18 51.15 34.411 Q 51.714 34.642 52.33 34.822 Q 52.945 35.001 53.612 35.206 L 54.741 35.463 Q 55.87 35.822 55.664 36.899 Q 54.997 41.362 53.664 43.004 Q 51.919 45.159 47.969 45.159 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【常】アイコン（Passive）
#[component]
fn IconPassive() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 24 24" style="vertical-align: middle; position: relative; top: -1px;" title="【自】">
            <path d="M 0.399 23.986 L 0.399 -0.036 L 19.831 -0.036 L 23.6 11.975 L 19.831 23.986 L 0.399 23.986 Z" style="fill: white; stroke-width: 1.074;"></path>
            <rect x="0.319" y="-0.036" width="23.362" height="24.072" style="fill: none; stroke-width: 0.974;"></rect>
            <path d="M 1.33 23.203 L 1.33 0.797 L 19.416 0.797 L 22.926 12 L 19.416 23.203 L 1.33 23.203 Z" style="stroke-width: 1; fill: color(srgb 100% 67.5% 0%);"></path>
            <path d="M 3.897 19.979 L 3.897 5.294 Q 3.897 4.977 4.087 4.787 Q 4.277 4.597 4.594 4.597 L 7.611 4.597 Q 8.138 4.597 8.265 4.112 L 8.455 3.542 L 8.835 2.192 Q 8.898 1.896 9.214 1.896 L 12.168 2.15 Q 12.422 2.171 12.517 2.318 Q 12.612 2.466 12.538 2.635 Q 12.464 2.804 12.411 2.93 Q 12.358 3.057 12.295 3.205 L 11.957 3.901 Q 11.81 4.217 11.926 4.407 Q 12.042 4.597 12.401 4.597 L 17.844 4.597 Q 18.161 4.597 18.351 4.787 Q 18.541 4.977 18.541 5.294 L 18.541 19.979 Q 18.541 20.296 18.351 20.485 Q 18.161 20.675 17.844 20.675 L 4.594 20.675 Q 4.277 20.675 4.087 20.485 Q 3.897 20.296 3.897 19.979 Z M 7.864 9.113 L 14.574 9.113 Q 14.89 9.113 15.08 8.923 Q 15.27 8.733 15.27 8.416 L 15.27 8.015 Q 15.27 7.699 15.08 7.509 Q 14.89 7.319 14.574 7.319 L 7.864 7.319 Q 7.548 7.319 7.358 7.509 Q 7.168 7.699 7.168 8.015 L 7.168 8.416 Q 7.168 8.733 7.358 8.923 Q 7.548 9.113 7.864 9.113 Z M 7.864 13.544 L 14.574 13.544 Q 14.89 13.544 15.08 13.354 Q 15.27 13.164 15.27 12.847 L 15.27 12.467 Q 15.27 12.151 15.08 11.961 Q 14.89 11.771 14.574 11.771 L 7.864 11.771 Q 7.548 11.771 7.358 11.961 Q 7.168 12.151 7.168 12.467 L 7.168 12.847 Q 7.168 13.164 7.358 13.354 Q 7.548 13.544 7.864 13.544 Z M 7.864 17.953 L 14.574 17.953 Q 14.89 17.953 15.08 17.764 Q 15.27 17.574 15.27 17.257 L 15.27 16.898 Q 15.27 16.582 15.08 16.392 Q 14.89 16.202 14.574 16.202 L 7.864 16.202 Q 7.548 16.202 7.358 16.392 Q 7.168 16.582 7.168 16.898 L 7.168 17.257 Q 7.168 17.574 7.358 17.764 Q 7.548 17.953 7.864 17.953 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【リコレクト】アイコン
#[component]
fn IconRecollect() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 118 24" style="vertical-align: middle; position: relative; top: -1px;" title="【リコレクト】">
            <rect x="0" y="0" width="110" height="24" style="stroke: rgb(0, 0, 0); stroke-width: 2px; fill: rgb(255, 255, 255);"></rect>
            <path d="M 4.281 21.076 L 4.281 15.398 L 9.176 12 L 4.281 8.602 L 4.281 2.924 L 15.456 2.924 L 15.456 8.602 L 10.562 12 L 15.456 15.398 L 15.456 21.076 L 4.281 21.076 Z" style="stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255);"></path>
            <path d="M 27.105 2.272 Q 27.105 1.88 27.366 1.698 Q 27.549 1.567 27.862 1.567 L 30.289 1.567 Q 30.759 1.567 31.033 1.854 Q 31.307 2.141 31.307 2.585 L 31.307 9.006 Q 31.307 13.86 29.428 16.992 Q 27.471 20.202 23.321 22.238 Q 23.112 22.343 22.812 22.343 Q 22.512 22.343 22.303 22.029 Q 22.146 21.821 22.068 21.703 Q 21.99 21.586 21.859 21.39 Q 21.729 21.194 21.533 20.92 Q 21.337 20.646 21.168 20.463 Q 20.998 20.281 20.893 20.163 Q 20.789 20.046 20.685 19.941 Q 20.424 19.68 20.424 19.419 Q 20.424 19.054 20.893 18.845 Q 24.339 17.358 25.8 15.009 Q 27.236 12.764 27.236 9.006 L 27.236 6.187 L 27.131 2.924 Z M 19.902 13.416 L 19.902 11.85 Q 19.902 11.746 19.745 5.639 Q 19.641 2.898 19.641 2.898 Q 19.641 2.585 19.836 2.376 Q 20.032 2.167 20.398 2.167 L 22.825 2.167 Q 23.164 2.167 23.373 2.324 Q 23.66 2.533 23.66 2.976 L 23.66 4.542 Q 23.66 4.803 23.817 10.519 Q 23.869 11.746 23.895 12.268 Q 23.921 12.79 23.921 12.947 Q 23.921 13.103 23.934 13.208 Q 23.947 13.312 23.947 13.364 Q 23.947 13.782 23.66 13.991 Q 23.451 14.173 23.086 14.173 L 20.685 14.199 Q 20.345 14.199 20.124 13.978 Q 19.902 13.756 19.902 13.416 Z M 35.167 6.891 Q 35.167 6.422 35.441 6.174 Q 35.715 5.926 36.159 5.926 L 37.385 5.952 Q 39.03 6.004 40.517 6.004 Q 42.083 6.004 46.129 5.952 Q 47.46 5.9 48.726 5.874 Q 49.992 5.847 50.018 5.847 Q 50.461 5.847 50.722 6.122 Q 50.983 6.396 50.983 6.865 L 50.983 17.279 Q 50.983 17.749 50.709 18.023 Q 50.435 18.297 49.731 18.297 L 48.165 18.297 Q 47.225 18.297 46.181 18.323 Q 45.137 18.349 44.067 18.362 Q 42.997 18.375 41.77 18.402 Q 40.543 18.428 39.134 18.48 Q 36.524 18.584 36.185 18.584 Q 35.845 18.584 35.558 18.336 Q 35.271 18.088 35.245 17.645 Q 35.141 15.531 35.141 15.478 Q 35.141 15.035 35.402 14.761 Q 35.663 14.487 36.106 14.487 Q 36.159 14.487 36.498 14.487 Q 37.959 14.487 40.517 14.513 L 42.162 14.513 Q 42.657 14.513 46.311 14.434 Q 46.546 14.434 46.69 14.304 Q 46.833 14.173 46.833 13.938 L 46.833 10.284 Q 46.833 10.023 46.69 9.88 Q 46.546 9.736 46.285 9.736 L 44.876 9.736 L 42.292 9.762 Q 41.613 9.789 40.804 9.789 Q 39.839 9.789 38.051 9.88 Q 36.263 9.971 36.211 9.971 Q 35.819 9.971 35.545 9.71 Q 35.271 9.449 35.245 9.006 Q 35.245 9.006 35.206 7.962 Q 35.167 6.918 35.167 6.891 Z M 53.747 10.467 Q 53.747 7.361 53.616 5.143 Q 53.616 5.091 53.616 5.038 Q 53.616 4.621 53.89 4.347 Q 54.164 4.073 54.66 4.073 L 56.67 4.073 Q 57.192 4.073 57.453 4.36 Q 57.714 4.647 57.714 5.091 L 57.688 6.552 Q 57.635 8.17 57.635 10.284 L 57.635 14.095 Q 57.635 14.382 57.753 14.513 Q 57.87 14.643 58.027 14.643 Q 58.184 14.643 58.366 14.591 Q 63.847 12.164 66.849 10.154 Q 68.154 9.293 69.302 8.301 Q 69.563 8.118 69.785 8.118 Q 70.007 8.118 70.137 8.275 Q 70.216 8.405 70.242 8.627 Q 70.268 8.849 70.268 9.006 Q 70.268 9.162 70.32 9.475 Q 70.424 10.311 70.555 10.859 L 70.555 10.885 Q 70.633 11.355 70.685 11.589 Q 70.738 11.824 70.738 11.929 Q 70.738 12.346 70.346 12.633 Q 65.883 15.974 58.862 18.897 Q 57.479 19.498 56.2 19.889 Q 56.017 19.941 55.887 19.941 Q 55.547 19.941 55.286 19.733 L 54.086 18.819 Q 53.616 18.506 53.616 18.01 Q 53.616 17.958 53.642 17.697 Q 53.72 17.044 53.72 16 Q 53.72 14.956 53.747 14.147 Z M 82.114 9.006 Q 82.114 8.849 81.853 8.849 L 77.938 9.058 Q 77.703 9.058 77.546 9.24 Q 75.51 11.746 72.979 13.625 Q 72.77 13.808 72.444 13.808 Q 72.117 13.808 71.935 13.599 Q 71.909 13.547 71.856 13.495 Q 71.804 13.469 71.778 13.443 L 71.595 13.234 Q 70.63 12.268 70.134 11.903 Q 69.768 11.642 69.768 11.355 Q 69.768 11.067 70.108 10.859 Q 72.222 9.501 74.153 7.205 Q 76.059 4.882 77.05 2.585 Q 77.337 1.932 77.912 1.932 Q 78.12 1.932 78.329 2.011 L 80.339 2.742 Q 80.73 2.872 80.861 3.185 Q 80.913 3.342 80.913 3.498 Q 80.913 3.733 80.744 4.099 Q 80.574 4.464 80.404 4.803 Q 80.235 5.143 80.235 5.247 Q 80.261 5.273 80.313 5.273 Q 80.313 5.273 80.417 5.273 Q 83.21 5.273 84.933 4.986 L 84.959 4.986 Q 85.324 4.986 85.559 5.117 L 86.994 5.9 Q 87.543 6.213 87.543 6.735 Q 87.543 6.891 87.49 7.074 Q 85.768 11.981 81.905 15.974 Q 78.538 19.419 73.292 22.029 Q 73.109 22.108 72.796 22.108 Q 72.405 22.108 72.117 21.638 Q 71.726 20.959 70.604 19.576 Q 70.369 19.341 70.369 19.08 Q 70.369 18.715 70.812 18.558 Q 76.137 16.47 79.843 12.294 Q 81.096 10.911 82.009 9.319 Q 82.114 9.11 82.114 9.006 Z M 93.673 21.038 L 93.673 3.316 Q 93.673 2.872 93.947 2.585 Q 94.221 2.298 94.691 2.298 L 96.674 2.298 Q 97.118 2.298 97.405 2.585 Q 97.692 2.872 97.692 3.316 L 97.692 8.718 Q 97.692 8.823 97.692 8.901 Q 97.718 8.875 97.953 8.562 Q 98.266 8.118 98.658 8.118 Q 99.049 8.118 99.284 8.275 Q 99.519 8.431 99.741 8.575 Q 99.963 8.718 100.38 9.006 Q 101.529 9.736 102.755 10.493 Q 104.06 11.276 105.418 11.877 Q 105.835 12.085 105.835 12.451 Q 105.835 12.686 105.653 12.921 Q 105.522 13.103 105.17 13.547 Q 104.817 13.991 104.165 15.113 Q 103.904 15.557 103.512 15.557 Q 103.199 15.557 103.016 15.426 Q 102.834 15.296 102.638 15.191 Q 102.442 15.087 102.155 14.904 Q 100.38 13.808 98.057 12.216 Q 97.901 12.085 97.823 12.085 Q 97.744 12.085 97.718 12.151 Q 97.692 12.216 97.692 12.399 L 97.692 21.038 Q 97.692 21.481 97.405 21.768 Q 97.118 22.056 96.674 22.056 L 94.691 22.056 Q 94.221 22.056 93.947 21.768 Q 93.673 21.481 93.673 21.038 Z" style="fill: rgb(51, 51, 51); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【使用条件】【ドリームチーム】アイコン
#[component]
fn IconDreamTeam() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 196 26" style="vertical-align: middle; position: relative; top: -1px;" title="【使用条件】【ドリームチーム】">
            <defs>
                <linearGradient id="gradient-dreamteam1">
                    <stop offset="0" style="stop-color: rgb(0, 126, 232);"></stop>
                    <stop offset="0.483" style="stop-color: rgb(255, 255, 255);"></stop>
                    <stop offset="1" style="stop-color: rgb(255, 58, 58);"></stop>
                </linearGradient>
                <linearGradient id="gradient-dreamteam22" bx:pinned="true">
                    <stop offset="0" style="stop-color: rgb(3, 181, 232);"></stop>
                    <stop offset="1" style="stop-color: rgb(239, 114, 169);"></stop>
                </linearGradient>
                <linearGradient id="gradient-dreamteam2-0" href="#gradient-dreamteam1" gradientTransform="matrix(-0.947803, 0, 0, -0.947804, 0.978275, 0.402281)"></linearGradient>
                <linearGradient id="gradient-dreamteam22-0" href="#gradient-dreamteam22" gradientUnits="userSpaceOnUse" x1="127.733" y1="1" x2="127.733" y2="25" gradientTransform="matrix(0.001183, 0.999999, -4.828044, 0.005709, 189.658123, -115.036561)"></linearGradient>
            </defs>
            <rect width="65.615" height="24" style="stroke: rgb(255, 255, 255);" rx="12" ry="12" y="1"></rect>
            <rect x="68.76" width="117.947" height="24" style="stroke: rgb(255, 255, 255); fill: url(#gradient-dreamteam22-0);" rx="12" ry="12" y="1"></rect>
            <path d="M 9.992 19.126 Q 9.964 19.056 9.937 18.987 Q 9.533 18.181 9.269 17.958 Q 9.075 17.75 9.353 17.68 Q 10.59 17.374 11.16 16.985 Q 11.34 16.874 11.354 16.693 Q 11.368 16.513 11.25 16.387 Q 11.132 16.262 11.049 16.179 Q 10.965 16.096 10.798 15.873 L 10.548 15.54 Q 10.437 15.387 10.465 15.213 Q 10.493 15.039 10.659 14.928 L 10.784 14.845 Q 11.215 14.525 10.673 14.525 L 10.131 14.525 Q 9.923 14.525 9.798 14.4 Q 9.672 14.275 9.672 14.066 L 9.672 10.55 Q 9.672 10.341 9.798 10.216 Q 9.923 10.091 10.131 10.091 L 12.494 10.091 Q 12.814 10.091 12.814 9.771 Q 12.814 9.451 12.494 9.451 L 9.992 9.451 Q 9.784 9.451 9.659 9.326 Q 9.533 9.201 9.533 8.993 L 9.533 8.145 Q 9.533 7.936 9.659 7.811 Q 9.784 7.686 9.992 7.686 L 12.355 7.686 Q 12.564 7.686 12.689 7.561 Q 12.814 7.436 12.814 7.227 L 12.814 7.061 Q 12.814 6.852 12.939 6.727 Q 13.064 6.602 13.273 6.602 L 14.315 6.602 Q 14.524 6.602 14.649 6.727 Q 14.774 6.852 14.774 7.061 L 14.774 7.227 Q 14.774 7.436 14.899 7.561 Q 15.024 7.686 15.232 7.686 L 17.79 7.686 Q 17.999 7.686 18.124 7.811 Q 18.249 7.936 18.249 8.145 L 18.249 8.993 Q 18.249 9.201 18.124 9.326 Q 17.999 9.451 17.79 9.451 L 15.093 9.451 Q 14.774 9.451 14.774 9.771 Q 14.774 10.091 15.093 10.091 L 17.47 10.091 Q 17.679 10.091 17.804 10.216 Q 17.929 10.341 17.929 10.55 L 17.929 14.066 Q 17.929 14.275 17.804 14.4 Q 17.679 14.525 17.47 14.525 L 15.135 14.525 Q 14.954 14.525 14.829 14.636 Q 14.704 14.747 14.676 14.9 Q 14.649 15.053 14.614 15.185 Q 14.579 15.317 14.551 15.456 L 14.385 15.915 Q 14.232 16.346 14.607 16.526 Q 16.414 17.277 18.374 17.444 Q 18.694 17.458 18.485 17.722 Q 18.138 18.153 17.915 18.737 Q 17.832 18.889 17.79 19.056 Q 17.693 19.376 17.373 19.334 Q 14.996 18.889 13.356 17.986 Q 13.217 17.93 13.085 17.93 Q 12.953 17.93 12.814 18.042 Q 11.883 18.792 10.395 19.32 Q 10.131 19.404 9.992 19.126 Z M 7.018 18.862 L 7.018 13.482 Q 7.018 13.232 6.879 13.441 Q 6.795 13.524 6.767 13.58 Q 6.74 13.635 6.726 13.649 L 6.573 13.844 Q 6.42 14.025 6.267 13.816 Q 5.919 13.371 5.405 13.038 Q 5.058 12.774 5.336 12.454 Q 6.142 11.37 6.649 10.146 Q 7.157 8.923 7.532 7.644 Q 7.601 7.297 7.65 7.095 Q 7.699 6.894 7.852 6.776 Q 8.004 6.658 8.241 6.713 L 9.214 6.922 Q 9.408 6.949 9.506 7.095 Q 9.603 7.241 9.52 7.589 Q 9.297 8.59 9.005 9.34 Q 8.977 9.451 8.977 9.507 L 8.977 18.862 Q 8.977 19.07 8.852 19.195 Q 8.727 19.32 8.519 19.32 L 7.476 19.32 Q 7.268 19.32 7.143 19.195 Q 7.018 19.07 7.018 18.862 Z M 15.232 12.801 L 15.552 12.801 Q 15.761 12.801 15.886 12.676 Q 16.011 12.551 16.011 12.343 L 16.011 12.259 Q 16.011 12.051 15.886 11.926 Q 15.761 11.801 15.552 11.801 L 15.232 11.801 Q 15.024 11.801 14.899 11.926 Q 14.774 12.051 14.774 12.259 L 14.774 12.343 Q 14.774 12.551 14.899 12.676 Q 15.024 12.801 15.232 12.801 Z M 12.049 12.801 L 12.355 12.801 Q 12.564 12.801 12.689 12.676 Q 12.814 12.551 12.814 12.343 L 12.814 12.259 Q 12.814 12.051 12.689 11.926 Q 12.564 11.801 12.355 11.801 L 12.049 11.801 Q 11.841 11.801 11.716 11.926 Q 11.591 12.051 11.591 12.259 L 11.591 12.343 Q 11.591 12.551 11.716 12.676 Q 11.841 12.801 12.049 12.801 Z M 12.633 14.998 Q 12.786 14.525 12.383 14.525 L 12.161 14.525 Q 11.924 14.525 12.077 14.706 L 12.397 15.053 Q 12.564 15.22 12.633 14.998 Z M 21.458 18.987 Q 21.333 19.209 21.138 19.209 Q 20.943 19.209 20.749 19.098 Q 20.401 18.889 19.748 18.625 Q 19.303 18.431 19.539 18 Q 20.512 16.207 20.665 13.76 Q 20.721 13.01 20.721 12.259 L 20.721 7.436 Q 20.721 7.227 20.846 7.102 Q 20.971 6.977 21.18 6.977 L 30.979 6.977 Q 31.188 6.977 31.313 7.102 Q 31.438 7.227 31.438 7.436 L 31.438 17.625 Q 31.438 18.973 30.215 19.195 Q 29.839 19.265 29.395 19.265 L 28.658 19.265 Q 28.352 19.265 28.296 18.931 Q 28.185 18.014 28.032 17.499 Q 27.963 17.194 28.255 17.194 L 28.839 17.194 Q 29.13 17.194 29.235 17.117 Q 29.339 17.041 29.339 16.735 L 29.339 15.373 Q 29.339 15.164 29.214 15.039 Q 29.089 14.914 28.88 14.914 L 27.518 14.914 Q 27.31 14.914 27.184 15.039 Q 27.059 15.164 27.059 15.373 L 27.059 18.32 Q 27.059 18.528 26.934 18.653 Q 26.809 18.778 26.601 18.778 L 25.475 18.778 Q 25.266 18.778 25.141 18.653 Q 25.016 18.528 25.016 18.32 L 25.016 15.373 Q 25.016 15.164 24.891 15.039 Q 24.766 14.914 24.557 14.914 L 23.112 14.914 Q 22.931 14.914 22.806 15.025 Q 22.681 15.137 22.653 15.317 Q 22.389 17.263 21.458 18.987 Z M 27.518 10.035 L 28.88 10.035 Q 29.089 10.035 29.214 9.91 Q 29.339 9.785 29.339 9.577 L 29.339 9.243 Q 29.339 9.034 29.214 8.909 Q 29.089 8.784 28.88 8.784 L 27.518 8.784 Q 27.31 8.784 27.184 8.909 Q 27.059 9.034 27.059 9.243 L 27.059 9.577 Q 27.059 9.785 27.184 9.91 Q 27.31 10.035 27.518 10.035 Z M 23.306 10.035 L 24.557 10.035 Q 24.766 10.035 24.891 9.91 Q 25.016 9.785 25.016 9.577 L 25.016 9.243 Q 25.016 9.034 24.891 8.909 Q 24.766 8.784 24.557 8.784 L 23.306 8.784 Q 23.098 8.784 22.973 8.909 Q 22.848 9.034 22.848 9.243 L 22.848 9.577 Q 22.848 9.785 22.973 9.91 Q 23.098 10.035 23.306 10.035 Z M 27.518 13.149 L 28.88 13.149 Q 29.089 13.149 29.214 13.024 Q 29.339 12.899 29.339 12.69 L 29.339 12.315 Q 29.339 12.106 29.214 11.981 Q 29.089 11.856 28.88 11.856 L 27.518 11.856 Q 27.31 11.856 27.184 11.981 Q 27.059 12.106 27.059 12.315 L 27.059 12.69 Q 27.059 12.899 27.184 13.024 Q 27.31 13.149 27.518 13.149 Z M 23.056 13.149 L 24.557 13.149 Q 24.766 13.149 24.891 13.024 Q 25.016 12.899 25.016 12.69 L 25.016 12.315 Q 25.016 12.106 24.891 11.981 Q 24.766 11.856 24.557 11.856 L 23.056 11.856 Q 22.848 11.856 22.848 12.051 L 22.848 12.704 L 22.834 12.926 Q 22.834 13.149 23.056 13.149 Z M 34.424 13.552 Q 34.244 13.58 34.105 13.489 Q 33.966 13.399 33.924 13.26 Q 33.799 12.718 33.736 12.579 Q 33.674 12.44 33.646 12.343 Q 33.493 11.953 33.882 11.912 Q 35.759 11.731 37.232 11.231 Q 37.58 11.119 37.614 10.911 Q 37.649 10.702 37.371 10.466 Q 37.218 10.313 37.128 10.223 Q 37.038 10.133 37.01 10.112 Q 36.982 10.091 36.892 10 Q 36.801 9.91 36.648 9.91 Q 36.495 9.91 36.259 10.049 Q 34.925 10.828 34.619 10.73 Q 34.466 10.689 34.383 10.563 Q 34.299 10.438 34.244 10.341 Q 34.049 10.035 33.813 9.743 Q 33.576 9.451 34 9.271 Q 34.424 9.09 34.939 8.819 Q 35.453 8.548 35.939 8.2 Q 37.024 7.45 37.594 6.671 Q 37.844 6.366 38.15 6.477 L 39.178 6.838 Q 39.567 6.991 39.331 7.311 Q 39.206 7.464 39.255 7.561 Q 39.303 7.658 39.498 7.658 L 43.71 7.658 Q 43.89 7.658 44.029 7.797 L 44.168 7.922 Q 44.279 8.048 44.286 8.207 Q 44.293 8.367 44.182 8.492 Q 43.195 9.66 42.278 10.397 Q 41.986 10.647 42.021 10.862 Q 42.055 11.078 42.417 11.189 Q 43.988 11.662 45.711 11.773 Q 46.156 11.828 45.961 12.231 Q 45.711 12.774 45.6 13.079 Q 45.433 13.594 45.072 13.538 Q 42.111 13.191 39.943 12.148 Q 39.859 12.106 39.748 12.106 Q 39.637 12.106 39.526 12.148 Q 37.441 13.163 34.424 13.552 Z M 39.053 9.59 Q 39.053 9.59 39.15 9.66 Q 39.248 9.729 39.352 9.799 Q 39.456 9.868 39.56 9.931 Q 39.665 9.994 39.831 9.994 Q 39.998 9.994 40.485 9.632 L 40.791 9.396 Q 40.93 9.299 40.909 9.236 Q 40.888 9.173 40.707 9.173 L 39.317 9.173 Q 38.956 9.173 38.907 9.312 Q 38.858 9.451 39.053 9.59 Z M 38.775 18.834 L 38.775 17.499 Q 38.775 17.027 38.497 17.027 Q 38.358 17.027 38.122 17.194 Q 36.482 18.445 34.897 19.126 Q 34.716 19.195 34.556 19.133 Q 34.397 19.07 34.32 18.931 Q 34.244 18.792 34.174 18.681 Q 33.952 18.292 33.695 17.951 Q 33.437 17.611 33.882 17.458 Q 35.231 16.985 36.871 15.957 Q 37.177 15.762 37.135 15.637 Q 37.093 15.512 36.732 15.512 L 34.313 15.512 Q 34.105 15.512 33.98 15.387 Q 33.854 15.262 33.854 15.053 L 33.854 14.358 Q 33.854 14.15 33.98 14.025 Q 34.105 13.899 34.313 13.899 L 38.316 13.899 Q 38.525 13.899 38.65 13.774 Q 38.775 13.649 38.775 13.441 L 38.775 13.177 Q 38.775 12.968 38.9 12.843 Q 39.025 12.718 39.234 12.718 L 40.304 12.718 Q 40.513 12.718 40.638 12.843 Q 40.763 12.968 40.763 13.177 L 40.763 13.441 Q 40.763 13.649 40.888 13.774 Q 41.013 13.899 41.221 13.899 L 45.197 13.899 Q 45.405 13.899 45.53 14.025 Q 45.656 14.15 45.656 14.358 L 45.656 15.053 Q 45.656 15.262 45.53 15.387 Q 45.405 15.512 45.197 15.512 L 42.806 15.512 Q 42.445 15.512 42.41 15.63 Q 42.375 15.748 42.681 15.943 Q 44.14 16.832 45.836 17.458 Q 46.156 17.541 45.934 17.819 Q 45.405 18.514 45.169 19.001 Q 45.016 19.293 44.738 19.167 Q 43.251 18.584 41.416 17.208 Q 41.194 17.027 41.041 17.027 Q 40.763 17.027 40.763 17.513 L 40.763 18.834 Q 40.763 19.042 40.638 19.167 Q 40.513 19.293 40.304 19.293 L 39.234 19.293 Q 39.025 19.293 38.9 19.167 Q 38.775 19.042 38.775 18.834 Z M 48.809 18.82 L 48.809 13.51 Q 48.809 13.302 48.684 13.455 L 48.433 13.774 Q 48.308 13.927 48.128 13.747 Q 47.808 13.427 47.155 13.065 Q 46.96 12.954 46.925 12.794 Q 46.891 12.635 47.043 12.468 Q 48.892 10.146 49.768 7.005 Q 49.823 6.797 49.976 6.699 Q 50.129 6.602 50.338 6.658 L 51.366 6.908 Q 51.561 6.963 51.651 7.109 Q 51.742 7.255 51.63 7.644 Q 51.408 8.548 50.796 9.757 Q 50.755 9.841 50.755 9.952 L 50.755 10.939 Q 50.755 11.3 50.873 11.3 Q 50.991 11.3 51.116 11.022 Q 51.881 9.563 52.339 7.658 Q 52.381 7.45 52.534 7.346 Q 52.687 7.241 52.895 7.297 L 54.063 7.561 Q 54.383 7.617 54.327 7.964 Q 54.313 8.048 54.299 8.131 Q 54.285 8.214 54.258 8.298 L 54.174 8.645 Q 54.132 8.798 54.202 8.888 Q 54.271 8.979 54.424 8.979 L 54.452 8.979 Q 54.619 8.979 54.723 8.875 Q 54.827 8.77 54.827 8.604 L 54.827 7.13 Q 54.827 6.922 54.953 6.797 Q 55.078 6.671 55.286 6.671 L 56.482 6.671 Q 56.69 6.671 56.815 6.797 Q 56.94 6.922 56.94 7.13 L 56.94 8.52 Q 56.94 8.729 57.065 8.854 Q 57.19 8.979 57.399 8.979 L 59.289 8.979 Q 59.498 8.979 59.623 9.104 Q 59.748 9.229 59.748 9.438 L 59.748 10.438 Q 59.748 10.647 59.623 10.772 Q 59.498 10.897 59.289 10.897 L 57.399 10.897 Q 57.19 10.897 57.065 11.022 Q 56.94 11.147 56.94 11.356 L 56.94 12.398 Q 56.94 12.607 57.065 12.732 Q 57.19 12.857 57.399 12.857 L 59.665 12.857 Q 59.873 12.857 59.998 12.982 Q 60.123 13.107 60.123 13.316 L 60.123 14.344 Q 60.123 14.553 59.998 14.678 Q 59.873 14.803 59.665 14.803 L 57.399 14.803 Q 57.19 14.803 57.065 14.928 Q 56.94 15.053 56.94 15.262 L 56.94 18.806 Q 56.94 19.015 56.815 19.14 Q 56.69 19.265 56.482 19.265 L 55.286 19.265 Q 55.078 19.265 54.953 19.14 Q 54.827 19.015 54.827 18.806 L 54.827 15.262 Q 54.827 15.053 54.702 14.928 Q 54.577 14.803 54.369 14.803 L 51.672 14.803 Q 51.464 14.803 51.339 14.678 Q 51.213 14.553 51.213 14.344 L 51.213 13.316 Q 51.213 13.107 51.339 12.982 Q 51.464 12.857 51.672 12.857 L 54.369 12.857 Q 54.577 12.857 54.702 12.732 Q 54.827 12.607 54.827 12.398 L 54.827 11.356 Q 54.827 11.147 54.702 11.022 Q 54.577 10.897 54.369 10.897 L 53.715 10.897 Q 53.41 10.897 53.298 11.175 Q 53.076 11.731 52.77 12.231 Q 52.631 12.454 52.464 12.454 Q 52.298 12.454 52.173 12.391 Q 52.047 12.329 51.922 12.273 Q 51.797 12.218 51.624 12.134 Q 51.45 12.051 51.234 11.988 Q 51.019 11.926 50.887 12.023 Q 50.755 12.12 50.755 12.343 L 50.755 18.82 Q 50.755 19.028 50.63 19.154 Q 50.505 19.279 50.296 19.279 L 49.267 19.279 Q 49.059 19.279 48.934 19.154 Q 48.809 19.028 48.809 18.82 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <path d="M 99.11 9.535 Q 98.943 9.66 98.721 9.66 Q 98.499 9.66 98.346 9.438 Q 98.193 9.187 97.97 8.923 L 97.692 8.604 Q 97.526 8.409 97.526 8.214 Q 97.526 7.978 97.762 7.797 L 97.984 7.631 Q 98.109 7.533 98.297 7.533 Q 98.485 7.533 98.582 7.672 Q 98.874 8.02 98.888 8.02 L 98.916 8.034 L 99.152 8.339 Q 99.208 8.381 99.27 8.471 Q 99.333 8.562 99.374 8.617 Q 99.416 8.673 99.486 8.763 Q 99.555 8.854 99.555 8.979 Q 99.555 9.215 99.36 9.368 Z M 92.327 17.791 L 92.327 8.353 Q 92.327 8.103 92.473 7.957 Q 92.619 7.811 92.869 7.811 L 93.926 7.811 Q 94.162 7.811 94.315 7.957 Q 94.468 8.103 94.468 8.353 L 94.468 11.231 Q 94.468 11.286 94.468 11.328 Q 94.482 11.314 94.607 11.147 Q 94.773 10.911 94.982 10.911 Q 95.19 10.911 95.316 10.994 Q 95.441 11.078 95.559 11.154 Q 95.677 11.231 95.899 11.384 Q 96.511 11.773 97.164 12.176 Q 97.859 12.593 98.582 12.913 Q 98.804 13.024 98.804 13.218 Q 98.804 13.343 98.693 13.469 Q 98.638 13.538 98.596 13.594 Q 98.554 13.649 98.429 13.802 Q 98.221 14.066 97.901 14.622 Q 97.762 14.872 97.567 14.872 Q 97.401 14.872 97.289 14.789 Q 96.052 14.052 94.662 13.093 Q 94.579 13.024 94.537 13.024 Q 94.495 13.024 94.482 13.058 Q 94.468 13.093 94.468 13.191 L 94.468 17.791 Q 94.468 18.028 94.315 18.181 Q 94.162 18.333 93.926 18.333 L 92.869 18.333 Q 92.619 18.333 92.473 18.181 Q 92.327 18.028 92.327 17.791 Z M 97.887 10.48 Q 97.72 10.605 97.498 10.605 Q 97.275 10.605 97.123 10.383 Q 96.9 10.035 96.733 9.827 L 96.469 9.535 Q 96.302 9.34 96.302 9.146 Q 96.302 8.909 96.539 8.729 L 96.747 8.562 Q 96.886 8.465 97.067 8.465 Q 97.248 8.465 97.359 8.59 Q 97.428 8.673 97.47 8.729 Q 97.484 8.743 97.581 8.84 L 98.054 9.424 Q 98.109 9.507 98.151 9.563 Q 98.193 9.618 98.255 9.709 Q 98.318 9.799 98.318 9.924 Q 98.318 10.146 98.123 10.299 Z M 108.644 7.811 Q 108.644 7.603 108.783 7.505 Q 108.88 7.436 109.047 7.436 L 110.339 7.436 Q 110.59 7.436 110.736 7.589 Q 110.882 7.742 110.882 7.978 L 110.882 11.397 Q 110.882 13.983 109.881 15.651 Q 108.838 17.36 106.628 18.445 Q 106.517 18.5 106.357 18.5 Q 106.197 18.5 106.086 18.333 Q 106.003 18.222 105.961 18.16 Q 105.919 18.097 105.85 17.993 Q 105.78 17.889 105.676 17.743 Q 105.572 17.597 105.481 17.499 Q 105.391 17.402 105.335 17.34 Q 105.28 17.277 105.224 17.221 Q 105.085 17.082 105.085 16.943 Q 105.085 16.749 105.335 16.638 Q 107.17 15.845 107.949 14.594 Q 108.713 13.399 108.713 11.397 L 108.713 9.896 L 108.658 8.159 Z M 104.807 13.747 L 104.807 12.913 Q 104.807 12.857 104.724 9.604 Q 104.668 8.145 104.668 8.145 Q 104.668 7.978 104.772 7.867 Q 104.877 7.756 105.071 7.756 L 106.364 7.756 Q 106.545 7.756 106.656 7.839 Q 106.809 7.95 106.809 8.187 L 106.809 9.021 Q 106.809 9.16 106.892 12.204 Q 106.92 12.857 106.934 13.135 Q 106.948 13.413 106.948 13.496 Q 106.948 13.58 106.955 13.635 Q 106.962 13.691 106.962 13.719 Q 106.962 13.941 106.809 14.052 Q 106.698 14.15 106.503 14.15 L 105.224 14.164 Q 105.044 14.164 104.925 14.045 Q 104.807 13.927 104.807 13.747 Z M 126.92 13.677 Q 126.92 13.844 126.851 13.941 Q 126.753 14.08 126.545 14.08 L 125.905 14.052 Q 124.71 14.011 122.75 14.011 L 120.888 14.011 Q 117.802 14.011 116.829 14.094 Q 116.801 14.094 116.787 14.094 Q 116.592 14.094 116.495 13.955 Q 116.426 13.858 116.426 13.705 L 116.426 13.399 L 116.412 12.676 L 116.412 12.384 Q 116.412 12.357 116.412 12.343 Q 116.412 12.176 116.509 12.072 Q 116.606 11.967 116.773 11.967 L 117.287 11.981 Q 117.871 12.009 118.733 12.009 L 120.582 12.023 L 121.082 12.023 L 122.069 12.037 L 122.569 12.037 Q 124.682 12.037 125.947 11.995 L 126.559 11.981 Q 126.712 11.981 126.816 12.079 Q 126.92 12.176 126.92 12.343 Q 126.92 12.357 126.92 12.384 Z M 134.382 14.455 Q 134.382 14.622 134.619 14.622 Q 134.702 14.622 135.126 14.574 Q 135.55 14.525 135.828 14.497 Q 136.106 14.469 136.363 14.435 Q 136.62 14.4 136.822 14.379 Q 137.023 14.358 137.051 14.289 Q 137.051 14.275 137.051 14.247 Q 137.051 14.191 136.982 14.08 Q 136.634 13.635 136.44 13.427 Q 136.245 13.218 136.245 13.017 Q 136.245 12.815 136.481 12.662 L 137.274 12.148 Q 137.385 12.065 137.579 12.065 Q 137.774 12.065 137.913 12.19 Q 139.275 13.413 140.804 15.79 Q 140.901 15.943 140.901 16.096 Q 140.901 16.165 140.874 16.235 Q 140.804 16.457 140.582 16.568 Q 140.137 16.804 139.706 17.166 Q 139.539 17.291 139.296 17.291 Q 139.053 17.291 138.886 16.985 Q 138.789 16.818 138.691 16.645 Q 138.594 16.471 138.455 16.276 Q 138.386 16.151 138.26 16.151 Q 138.233 16.151 132.937 16.874 Q 131.102 17.152 131.046 17.159 Q 130.991 17.166 130.949 17.166 Q 130.796 17.166 130.671 17.082 Q 130.504 16.985 130.449 16.763 L 130.115 15.526 Q 130.101 15.456 130.101 15.387 Q 130.101 15.192 130.24 15.081 Q 130.337 15.011 130.518 14.998 Q 130.643 14.998 130.88 14.97 L 131.769 14.9 Q 131.922 14.9 131.992 14.761 Q 132.728 13.288 133.729 10.661 Q 134.16 9.535 134.285 9.146 Q 134.41 8.756 134.466 8.617 Q 134.591 8.228 134.952 8.228 Q 135.036 8.228 135.119 8.242 L 136.412 8.604 Q 136.662 8.673 136.745 8.854 Q 136.787 8.951 136.787 9.041 Q 136.787 9.132 136.731 9.243 Q 136.676 9.354 136.627 9.458 Q 136.579 9.563 136.44 9.855 Q 136.301 10.146 135.995 10.814 L 134.438 14.233 Q 134.382 14.358 134.382 14.455 Z M 153.646 11.509 Q 153.66 11.509 154.41 11.453 Q 154.591 11.453 154.737 11.592 Q 154.883 11.731 154.883 11.953 L 154.883 12.982 Q 154.883 13.218 154.723 13.371 Q 154.563 13.524 154.369 13.524 L 154.132 13.524 Q 154.021 13.524 153.896 13.51 L 151.185 13.51 Q 151.019 13.51 150.921 13.573 Q 150.824 13.635 150.81 13.774 Q 150.449 16.374 148.1 17.597 Q 147.377 17.958 146.529 18.236 Q 146.459 18.25 146.369 18.25 Q 146.279 18.25 146.181 18.208 Q 146.029 18.125 145.959 17.986 Q 145.876 17.833 145.764 17.604 Q 145.653 17.374 145.528 17.18 Q 145.32 16.902 145.243 16.791 Q 145.167 16.679 145.167 16.582 Q 145.167 16.374 145.431 16.318 Q 146.724 15.998 147.419 15.512 Q 148.294 14.9 148.572 13.858 Q 148.614 13.705 148.544 13.628 Q 148.475 13.552 148.239 13.552 Q 147.641 13.552 146.334 13.601 Q 145.028 13.649 144.889 13.649 L 144.569 13.663 Q 144.402 13.663 144.249 13.524 Q 144.096 13.385 144.083 13.149 Q 144.013 12.245 144.013 12.218 Q 144.013 11.981 144.166 11.828 Q 144.319 11.675 144.555 11.675 Q 144.583 11.675 144.597 11.675 L 145.069 11.675 Q 145.417 11.689 145.848 11.689 Q 146.334 11.689 148.433 11.662 Q 148.558 11.662 148.635 11.585 Q 148.711 11.509 148.711 11.384 L 148.711 10.786 Q 148.711 10.633 148.635 10.563 Q 148.558 10.494 148.447 10.494 Q 148.419 10.494 148.392 10.508 Q 147.377 10.647 146.529 10.661 Q 146.501 10.661 146.487 10.661 Q 146.32 10.661 146.202 10.55 Q 146.084 10.438 146.056 10.32 Q 146.029 10.202 146.022 10.133 Q 146.015 10.063 145.973 9.938 Q 145.82 9.451 145.764 9.312 L 145.681 9.104 Q 145.625 9.007 145.625 8.923 Q 145.625 8.784 145.764 8.715 Q 145.834 8.673 145.945 8.673 Q 148.489 8.673 150.713 8.187 Q 151.491 7.992 152.172 7.742 Q 152.27 7.7 152.374 7.7 Q 152.478 7.7 152.562 7.728 Q 152.756 7.797 152.853 8.006 L 153.243 8.854 Q 153.34 9.076 153.257 9.278 Q 153.173 9.479 152.937 9.563 Q 151.853 9.882 151.116 10.049 Q 150.977 10.077 150.928 10.153 Q 150.88 10.23 150.88 10.341 L 150.88 11.328 Q 150.88 11.467 150.956 11.536 Q 151.033 11.606 151.144 11.606 Q 151.158 11.606 151.172 11.606 L 151.172 11.606 Q 151.867 11.578 152.555 11.557 Q 153.243 11.536 153.646 11.509 Z M 168.614 13.677 Q 168.614 13.844 168.544 13.941 Q 168.447 14.08 168.239 14.08 L 167.599 14.052 Q 166.404 14.011 164.444 14.011 L 162.581 14.011 Q 159.496 14.011 158.523 14.094 Q 158.495 14.094 158.481 14.094 Q 158.286 14.094 158.189 13.955 Q 158.119 13.858 158.119 13.705 L 158.119 13.399 L 158.106 12.676 L 158.106 12.384 Q 158.106 12.357 158.106 12.343 Q 158.106 12.176 158.203 12.072 Q 158.3 11.967 158.467 11.967 L 158.981 11.981 Q 159.565 12.009 160.427 12.009 L 162.276 12.023 L 162.776 12.023 L 163.763 12.037 L 164.263 12.037 Q 166.376 12.037 167.641 11.995 L 168.253 11.981 Q 168.405 11.981 168.51 12.079 Q 168.614 12.176 168.614 12.343 Q 168.614 12.357 168.614 12.384 Z M 176.076 14.455 Q 176.076 14.622 176.313 14.622 Q 176.396 14.622 176.82 14.574 Q 177.244 14.525 177.522 14.497 Q 177.8 14.469 178.057 14.435 Q 178.314 14.4 178.516 14.379 Q 178.717 14.358 178.745 14.289 Q 178.745 14.275 178.745 14.247 Q 178.745 14.191 178.676 14.08 Q 178.328 13.635 178.133 13.427 Q 177.939 13.218 177.939 13.017 Q 177.939 12.815 178.175 12.662 L 178.967 12.148 Q 179.079 12.065 179.273 12.065 Q 179.468 12.065 179.607 12.19 Q 180.969 13.413 182.498 15.79 Q 182.595 15.943 182.595 16.096 Q 182.595 16.165 182.568 16.235 Q 182.498 16.457 182.276 16.568 Q 181.831 16.804 181.4 17.166 Q 181.233 17.291 180.99 17.291 Q 180.747 17.291 180.58 16.985 Q 180.483 16.818 180.385 16.645 Q 180.288 16.471 180.149 16.276 Q 180.079 16.151 179.954 16.151 Q 179.927 16.151 174.631 16.874 Q 172.796 17.152 172.74 17.159 Q 172.685 17.166 172.643 17.166 Q 172.49 17.166 172.365 17.082 Q 172.198 16.985 172.143 16.763 L 171.809 15.526 Q 171.795 15.456 171.795 15.387 Q 171.795 15.192 171.934 15.081 Q 172.031 15.011 172.212 14.998 Q 172.337 14.998 172.573 14.97 L 173.463 14.9 Q 173.616 14.9 173.685 14.761 Q 174.422 13.288 175.423 10.661 Q 175.854 9.535 175.979 9.146 Q 176.104 8.756 176.16 8.617 Q 176.285 8.228 176.646 8.228 Q 176.73 8.228 176.813 8.242 L 178.106 8.604 Q 178.356 8.673 178.439 8.854 Q 178.481 8.951 178.481 9.041 Q 178.481 9.132 178.425 9.243 Q 178.37 9.354 178.321 9.458 Q 178.272 9.563 178.133 9.855 Q 177.994 10.146 177.689 10.814 L 176.132 14.233 Q 176.076 14.358 176.076 14.455 Z" style="fill: rgb(255, 255, 255); paint-order: stroke; stroke: url(#gradient-1); text-wrap-mode: nowrap;"></path>
            <circle style="stroke: rgb(255, 255, 255); fill: rgb(255, 255, 255);" cx="81.015" cy="13" r="7.414"></circle>
            <path d="M 87.07 13 C 87.07 16.343 84.36 19.055 81.015 19.055 C 77.672 19.055 74.96 16.343 74.96 13 C 74.96 9.655 77.672 6.945 81.015 6.945 C 84.36 6.945 87.07 9.655 87.07 13 Z M 76.415 15.693 L 85.616 15.693 L 81.015 7.726 L 76.415 15.693 Z" style="stroke: rgb(0, 0, 0); stroke-width: 0.038; fill: url(#gradient-dreamteam2-0);"></path>
        </svg>
    }
}

/// 【使用条件】【チーム】アイコン
#[component]
fn IconTeamPiece() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 146 26" style="vertical-align: middle; position: relative; top: -1px;" title="【使用条件】【チーム】">
            <defs>
                <linearGradient id="gradient-team1">
                    <stop offset="0" style="stop-color: rgb(0, 126, 232);"></stop>
                    <stop offset="0.483" style="stop-color: rgb(255, 255, 255);"></stop>
                    <stop offset="1" style="stop-color: rgb(255, 58, 58);"></stop>
                </linearGradient>
                <linearGradient id="gradient-team2" bx:pinned="true">
                    <stop offset="0" style="stop-color: rgb(3, 181, 232);"></stop>
                    <stop offset="1" style="stop-color: rgb(239, 114, 169);"></stop>
                </linearGradient>
                <linearGradient id="gradient-2-1" gradientUnits="userSpaceOnUse" x1="250" y1="19.254" x2="250" y2="480.746" gradientTransform="matrix(0, 0.028092, -0.028092, 0, 69.38349, -20.864636)" href="#gradient-team1"></linearGradient>
                <linearGradient id="gradient-team2-0" href="#gradient-team1" gradientTransform="matrix(-0.947803, 0, 0, -0.947804, 0.978275, 0.402281)"></linearGradient>
                <linearGradient id="gradient-team22-0" href="#gradient-team2" gradientUnits="userSpaceOnUse" x1="127.733" y1="1" x2="127.733" y2="25" gradientTransform="matrix(0.000686, 0.999999, -2.798763, 0.005709, 140.138129, -115.036562)"></linearGradient>
                <linearGradient gradientUnits="userSpaceOnUse" x1="136.564" y1="6.1" x2="136.564" y2="19.971" id="gradient-team2" gradientTransform="matrix(0.007052, -0.999976, 6.538734, 0.046115, 55.451077, 148.483874)">
                    <stop offset="0" style="stop-color: rgb(239, 114, 169);"></stop>
                    <stop offset="1" style="stop-color: rgb(9, 180, 231);"></stop>
                </linearGradient>
            </defs>
            <rect width="65.615" height="24" style="stroke: rgb(255, 255, 255);" rx="12" ry="12" y="1" x="1.295"></rect>
            <rect x="70.055" width="68.373" height="24" style="stroke: rgb(255, 255, 255); fill: url(#gradient-team22-0); stroke-width: 0.58;" rx="12" ry="12" y="1"></rect>
            <path d="M 11.287 19.126 C 11.268 19.079 11.25 19.033 11.232 18.987 C 10.963 18.45 10.74 18.107 10.564 17.958 C 10.435 17.819 10.463 17.727 10.648 17.68 C 11.473 17.476 12.075 17.244 12.455 16.985 C 12.575 16.911 12.64 16.814 12.649 16.693 C 12.658 16.573 12.624 16.471 12.545 16.387 C 12.466 16.304 12.399 16.234 12.344 16.179 C 12.288 16.124 12.204 16.022 12.093 15.873 L 11.843 15.54 C 11.769 15.438 11.741 15.329 11.76 15.213 C 11.779 15.097 11.843 15.002 11.954 14.928 L 12.079 14.845 C 12.366 14.632 12.329 14.525 11.968 14.525 L 11.426 14.525 C 11.287 14.525 11.176 14.483 11.093 14.4 C 11.009 14.317 10.967 14.205 10.967 14.066 L 10.967 10.55 C 10.967 10.411 11.009 10.299 11.093 10.216 C 11.176 10.133 11.287 10.091 11.426 10.091 L 13.789 10.091 C 14.002 10.091 14.109 9.984 14.109 9.771 C 14.109 9.558 14.002 9.451 13.789 9.451 L 11.287 9.451 C 11.148 9.451 11.037 9.409 10.954 9.326 C 10.87 9.243 10.828 9.132 10.828 8.993 L 10.828 8.145 C 10.828 8.006 10.87 7.894 10.954 7.811 C 11.037 7.728 11.148 7.686 11.287 7.686 L 13.65 7.686 C 13.789 7.686 13.901 7.644 13.984 7.561 C 14.067 7.478 14.109 7.366 14.109 7.227 L 14.109 7.061 C 14.109 6.922 14.151 6.81 14.234 6.727 C 14.317 6.644 14.429 6.602 14.568 6.602 L 15.61 6.602 C 15.749 6.602 15.861 6.644 15.944 6.727 C 16.027 6.81 16.069 6.922 16.069 7.061 L 16.069 7.227 C 16.069 7.366 16.111 7.478 16.194 7.561 C 16.277 7.644 16.388 7.686 16.527 7.686 L 19.085 7.686 C 19.224 7.686 19.336 7.728 19.419 7.811 C 19.502 7.894 19.544 8.006 19.544 8.145 L 19.544 8.993 C 19.544 9.132 19.502 9.243 19.419 9.326 C 19.336 9.409 19.224 9.451 19.085 9.451 L 16.388 9.451 C 16.175 9.451 16.069 9.558 16.069 9.771 C 16.069 9.984 16.175 10.091 16.388 10.091 L 18.765 10.091 C 18.904 10.091 19.016 10.133 19.099 10.216 C 19.182 10.299 19.224 10.411 19.224 10.55 L 19.224 14.066 C 19.224 14.205 19.182 14.317 19.099 14.4 C 19.016 14.483 18.904 14.525 18.765 14.525 L 16.43 14.525 C 16.309 14.525 16.207 14.562 16.124 14.636 C 16.041 14.71 15.99 14.798 15.971 14.9 C 15.953 15.002 15.932 15.097 15.909 15.185 C 15.886 15.273 15.865 15.363 15.846 15.456 L 15.68 15.915 C 15.578 16.202 15.652 16.406 15.902 16.526 C 17.107 17.027 18.362 17.333 19.669 17.444 C 19.882 17.453 19.919 17.546 19.78 17.722 C 19.549 18.009 19.359 18.348 19.21 18.737 C 19.155 18.838 19.113 18.945 19.085 19.056 C 19.02 19.269 18.881 19.362 18.668 19.334 C 17.083 19.037 15.744 18.588 14.651 17.986 C 14.558 17.949 14.468 17.93 14.38 17.93 C 14.292 17.93 14.202 17.967 14.109 18.042 C 13.488 18.542 12.682 18.968 11.69 19.32 C 11.514 19.376 11.38 19.311 11.287 19.126 Z M 8.313 18.862 L 8.313 13.482 C 8.313 13.315 8.267 13.302 8.174 13.441 C 8.118 13.496 8.081 13.543 8.062 13.58 C 8.044 13.617 8.03 13.64 8.021 13.649 L 7.868 13.844 C 7.766 13.965 7.664 13.955 7.562 13.816 C 7.33 13.519 7.043 13.26 6.7 13.038 C 6.469 12.862 6.446 12.667 6.631 12.454 C 7.168 11.731 7.606 10.962 7.944 10.146 C 8.283 9.331 8.577 8.497 8.827 7.644 C 8.873 7.413 8.912 7.23 8.945 7.095 C 8.978 6.961 9.045 6.855 9.147 6.776 C 9.248 6.697 9.378 6.676 9.536 6.713 L 10.509 6.922 C 10.638 6.94 10.736 6.998 10.801 7.095 C 10.866 7.192 10.87 7.357 10.815 7.589 C 10.666 8.256 10.495 8.84 10.3 9.34 C 10.281 9.414 10.272 9.47 10.272 9.507 L 10.272 18.862 C 10.272 19.001 10.23 19.112 10.147 19.195 C 10.064 19.278 9.953 19.32 9.814 19.32 L 8.771 19.32 C 8.632 19.32 8.521 19.278 8.438 19.195 C 8.355 19.112 8.313 19.001 8.313 18.862 Z M 16.527 12.801 L 16.847 12.801 C 16.986 12.801 17.098 12.759 17.181 12.676 C 17.264 12.593 17.306 12.482 17.306 12.343 L 17.306 12.259 C 17.306 12.12 17.264 12.009 17.181 11.926 C 17.098 11.843 16.986 11.801 16.847 11.801 L 16.527 11.801 C 16.388 11.801 16.277 11.843 16.194 11.926 C 16.111 12.009 16.069 12.12 16.069 12.259 L 16.069 12.343 C 16.069 12.482 16.111 12.593 16.194 12.676 C 16.277 12.759 16.388 12.801 16.527 12.801 Z M 13.344 12.801 L 13.65 12.801 C 13.789 12.801 13.901 12.759 13.984 12.676 C 14.067 12.593 14.109 12.482 14.109 12.343 L 14.109 12.259 C 14.109 12.12 14.067 12.009 13.984 11.926 C 13.901 11.843 13.789 11.801 13.65 11.801 L 13.344 11.801 C 13.205 11.801 13.094 11.843 13.011 11.926 C 12.928 12.009 12.886 12.12 12.886 12.259 L 12.886 12.343 C 12.886 12.482 12.928 12.593 13.011 12.676 C 13.094 12.759 13.205 12.801 13.344 12.801 Z M 13.928 14.998 C 14.03 14.683 13.947 14.525 13.678 14.525 L 13.456 14.525 C 13.298 14.525 13.27 14.585 13.372 14.706 L 13.692 15.053 C 13.803 15.164 13.882 15.146 13.928 14.998 Z M 22.753 18.987 C 22.67 19.135 22.563 19.209 22.433 19.209 C 22.303 19.209 22.173 19.172 22.044 19.098 C 21.812 18.959 21.478 18.801 21.043 18.625 C 20.746 18.496 20.677 18.287 20.834 18 C 21.483 16.805 21.858 15.391 21.96 13.76 C 21.997 13.26 22.016 12.76 22.016 12.259 L 22.016 7.436 C 22.016 7.297 22.058 7.185 22.141 7.102 C 22.224 7.019 22.336 6.977 22.475 6.977 L 32.274 6.977 C 32.413 6.977 32.525 7.019 32.608 7.102 C 32.691 7.185 32.733 7.297 32.733 7.436 L 32.733 17.625 C 32.733 18.524 32.325 19.047 31.51 19.195 C 31.259 19.242 30.986 19.265 30.69 19.265 L 29.953 19.265 C 29.749 19.265 29.628 19.154 29.591 18.931 C 29.517 18.32 29.429 17.842 29.327 17.499 C 29.281 17.296 29.355 17.194 29.55 17.194 L 30.134 17.194 C 30.328 17.194 30.46 17.168 30.53 17.117 C 30.599 17.066 30.634 16.939 30.634 16.735 L 30.634 15.373 C 30.634 15.234 30.592 15.122 30.509 15.039 C 30.426 14.956 30.314 14.914 30.175 14.914 L 28.813 14.914 C 28.674 14.914 28.563 14.956 28.479 15.039 C 28.396 15.122 28.354 15.234 28.354 15.373 L 28.354 18.32 C 28.354 18.459 28.312 18.57 28.229 18.653 C 28.146 18.736 28.035 18.778 27.896 18.778 L 26.77 18.778 C 26.631 18.778 26.519 18.736 26.436 18.653 C 26.353 18.57 26.311 18.459 26.311 18.32 L 26.311 15.373 C 26.311 15.234 26.269 15.122 26.186 15.039 C 26.103 14.956 25.991 14.914 25.852 14.914 L 24.407 14.914 C 24.286 14.914 24.184 14.951 24.101 15.025 C 24.018 15.1 23.967 15.197 23.948 15.317 C 23.772 16.614 23.374 17.838 22.753 18.987 Z M 28.813 10.035 L 30.175 10.035 C 30.314 10.035 30.426 9.993 30.509 9.91 C 30.592 9.827 30.634 9.716 30.634 9.577 L 30.634 9.243 C 30.634 9.104 30.592 8.992 30.509 8.909 C 30.426 8.826 30.314 8.784 30.175 8.784 L 28.813 8.784 C 28.674 8.784 28.563 8.826 28.479 8.909 C 28.396 8.992 28.354 9.104 28.354 9.243 L 28.354 9.577 C 28.354 9.716 28.396 9.827 28.479 9.91 C 28.563 9.993 28.674 10.035 28.813 10.035 Z M 24.601 10.035 L 25.852 10.035 C 25.991 10.035 26.103 9.993 26.186 9.91 C 26.269 9.827 26.311 9.716 26.311 9.577 L 26.311 9.243 C 26.311 9.104 26.269 8.992 26.186 8.909 C 26.103 8.826 25.991 8.784 25.852 8.784 L 24.601 8.784 C 24.462 8.784 24.351 8.826 24.268 8.909 C 24.185 8.992 24.143 9.104 24.143 9.243 L 24.143 9.577 C 24.143 9.716 24.185 9.827 24.268 9.91 C 24.351 9.993 24.462 10.035 24.601 10.035 Z M 28.813 13.149 L 30.175 13.149 C 30.314 13.149 30.426 13.107 30.509 13.024 C 30.592 12.941 30.634 12.829 30.634 12.69 L 30.634 12.315 C 30.634 12.176 30.592 12.064 30.509 11.981 C 30.426 11.898 30.314 11.856 30.175 11.856 L 28.813 11.856 C 28.674 11.856 28.563 11.898 28.479 11.981 C 28.396 12.064 28.354 12.176 28.354 12.315 L 28.354 12.69 C 28.354 12.829 28.396 12.941 28.479 13.024 C 28.563 13.107 28.674 13.149 28.813 13.149 Z M 24.351 13.149 L 25.852 13.149 C 25.991 13.149 26.103 13.107 26.186 13.024 C 26.269 12.941 26.311 12.829 26.311 12.69 L 26.311 12.315 C 26.311 12.176 26.269 12.064 26.186 11.981 C 26.103 11.898 25.991 11.856 25.852 11.856 L 24.351 11.856 C 24.212 11.856 24.143 11.921 24.143 12.051 L 24.143 12.704 L 24.129 12.926 C 24.129 13.075 24.203 13.149 24.351 13.149 Z M 35.719 13.552 C 35.599 13.571 35.493 13.55 35.4 13.489 C 35.307 13.429 35.247 13.353 35.219 13.26 C 35.136 12.899 35.073 12.672 35.031 12.579 C 34.99 12.486 34.96 12.408 34.941 12.343 C 34.839 12.083 34.918 11.939 35.177 11.912 C 36.428 11.791 37.545 11.564 38.527 11.231 C 38.759 11.156 38.886 11.05 38.909 10.911 C 38.932 10.772 38.851 10.623 38.666 10.466 C 38.564 10.364 38.483 10.283 38.423 10.223 C 38.363 10.163 38.324 10.126 38.305 10.112 C 38.286 10.098 38.247 10.061 38.187 10 C 38.126 9.94 38.045 9.91 37.943 9.91 C 37.841 9.91 37.711 9.956 37.554 10.049 C 36.665 10.568 36.118 10.795 35.914 10.73 C 35.812 10.703 35.733 10.647 35.678 10.563 C 35.622 10.48 35.576 10.406 35.539 10.341 C 35.409 10.137 35.265 9.938 35.108 9.743 C 34.95 9.548 35.012 9.391 35.295 9.271 C 35.578 9.15 35.891 9 36.234 8.819 C 36.577 8.638 36.91 8.432 37.234 8.2 C 37.957 7.7 38.509 7.19 38.889 6.671 C 39.056 6.468 39.241 6.403 39.445 6.477 L 40.473 6.838 C 40.732 6.94 40.783 7.098 40.626 7.311 C 40.543 7.413 40.517 7.496 40.55 7.561 C 40.582 7.626 40.663 7.658 40.793 7.658 L 45.005 7.658 C 45.125 7.658 45.231 7.704 45.324 7.797 L 45.463 7.922 C 45.537 8.006 45.576 8.101 45.581 8.207 C 45.586 8.314 45.551 8.409 45.477 8.492 C 44.819 9.271 44.184 9.906 43.573 10.397 C 43.378 10.564 43.293 10.719 43.316 10.862 C 43.339 11.006 43.471 11.115 43.712 11.189 C 44.759 11.504 45.857 11.699 47.006 11.773 C 47.303 11.81 47.386 11.962 47.256 12.231 C 47.089 12.593 46.969 12.876 46.895 13.079 C 46.784 13.422 46.608 13.575 46.367 13.538 C 44.393 13.307 42.683 12.843 41.238 12.148 C 41.182 12.12 41.117 12.106 41.043 12.106 C 40.969 12.106 40.895 12.12 40.821 12.148 C 39.431 12.825 37.73 13.293 35.719 13.552 Z M 40.348 9.59 C 40.348 9.59 40.38 9.613 40.445 9.66 C 40.51 9.706 40.578 9.752 40.647 9.799 C 40.716 9.845 40.786 9.889 40.855 9.931 C 40.925 9.973 41.015 9.994 41.126 9.994 C 41.237 9.994 41.455 9.873 41.78 9.632 L 42.086 9.396 C 42.179 9.331 42.218 9.278 42.204 9.236 C 42.19 9.194 42.123 9.173 42.002 9.173 L 40.612 9.173 C 40.371 9.173 40.235 9.219 40.202 9.312 C 40.169 9.405 40.218 9.497 40.348 9.59 Z M 40.07 18.834 L 40.07 17.499 C 40.07 17.184 39.977 17.027 39.792 17.027 C 39.699 17.027 39.574 17.083 39.417 17.194 C 38.324 18.028 37.249 18.672 36.192 19.126 C 36.071 19.172 35.958 19.174 35.851 19.133 C 35.745 19.091 35.666 19.024 35.615 18.931 C 35.564 18.838 35.516 18.755 35.469 18.681 C 35.321 18.422 35.161 18.178 34.99 17.951 C 34.818 17.724 34.88 17.56 35.177 17.458 C 36.076 17.143 37.073 16.642 38.166 15.957 C 38.37 15.827 38.458 15.72 38.43 15.637 C 38.402 15.554 38.268 15.512 38.027 15.512 L 35.608 15.512 C 35.469 15.512 35.358 15.47 35.275 15.387 C 35.191 15.304 35.149 15.192 35.149 15.053 L 35.149 14.358 C 35.149 14.219 35.191 14.108 35.275 14.025 C 35.358 13.941 35.469 13.899 35.608 13.899 L 39.611 13.899 C 39.75 13.899 39.862 13.857 39.945 13.774 C 40.028 13.691 40.07 13.58 40.07 13.441 L 40.07 13.177 C 40.07 13.038 40.112 12.926 40.195 12.843 C 40.278 12.76 40.39 12.718 40.529 12.718 L 41.599 12.718 C 41.738 12.718 41.85 12.76 41.933 12.843 C 42.016 12.926 42.058 13.038 42.058 13.177 L 42.058 13.441 C 42.058 13.58 42.1 13.691 42.183 13.774 C 42.266 13.857 42.377 13.899 42.516 13.899 L 46.492 13.899 C 46.631 13.899 46.742 13.941 46.825 14.025 C 46.909 14.108 46.951 14.219 46.951 14.358 L 46.951 15.053 C 46.951 15.192 46.909 15.304 46.825 15.387 C 46.742 15.47 46.631 15.512 46.492 15.512 L 44.101 15.512 C 43.86 15.512 43.728 15.551 43.705 15.63 C 43.682 15.709 43.772 15.813 43.976 15.943 C 44.949 16.536 46 17.041 47.131 17.458 C 47.344 17.513 47.377 17.634 47.229 17.819 C 46.876 18.282 46.621 18.676 46.464 19.001 C 46.362 19.196 46.218 19.251 46.033 19.167 C 45.042 18.778 43.934 18.125 42.711 17.208 C 42.563 17.087 42.438 17.027 42.336 17.027 C 42.151 17.027 42.058 17.189 42.058 17.513 L 42.058 18.834 C 42.058 18.973 42.016 19.084 41.933 19.167 C 41.85 19.251 41.738 19.293 41.599 19.293 L 40.529 19.293 C 40.39 19.293 40.278 19.251 40.195 19.167 C 40.112 19.084 40.07 18.973 40.07 18.834 Z M 50.104 18.82 L 50.104 13.51 C 50.104 13.371 50.062 13.353 49.979 13.455 L 49.728 13.774 C 49.645 13.876 49.543 13.867 49.423 13.747 C 49.21 13.534 48.885 13.306 48.45 13.065 C 48.32 12.991 48.243 12.901 48.22 12.794 C 48.197 12.688 48.237 12.579 48.338 12.468 C 49.571 10.92 50.479 9.099 51.063 7.005 C 51.1 6.866 51.169 6.764 51.271 6.699 C 51.373 6.634 51.494 6.621 51.633 6.658 L 52.661 6.908 C 52.791 6.945 52.886 7.012 52.946 7.109 C 53.007 7.206 53 7.385 52.925 7.644 C 52.777 8.247 52.499 8.951 52.091 9.757 C 52.064 9.813 52.05 9.878 52.05 9.952 L 52.05 10.939 C 52.05 11.18 52.089 11.3 52.168 11.3 C 52.247 11.3 52.328 11.207 52.411 11.022 C 52.921 10.049 53.329 8.928 53.634 7.658 C 53.662 7.519 53.727 7.415 53.829 7.346 C 53.931 7.276 54.051 7.26 54.19 7.297 L 55.358 7.561 C 55.571 7.598 55.659 7.733 55.622 7.964 C 55.613 8.02 55.603 8.076 55.594 8.131 C 55.585 8.186 55.571 8.242 55.553 8.298 L 55.469 8.645 C 55.441 8.747 55.45 8.828 55.497 8.888 C 55.543 8.949 55.617 8.979 55.719 8.979 L 55.747 8.979 C 55.858 8.979 55.949 8.944 56.018 8.875 C 56.087 8.805 56.122 8.715 56.122 8.604 L 56.122 7.13 C 56.122 6.991 56.164 6.88 56.248 6.797 C 56.331 6.713 56.442 6.671 56.581 6.671 L 57.777 6.671 C 57.916 6.671 58.027 6.713 58.11 6.797 C 58.193 6.88 58.235 6.991 58.235 7.13 L 58.235 8.52 C 58.235 8.659 58.277 8.771 58.36 8.854 C 58.443 8.937 58.555 8.979 58.694 8.979 L 60.584 8.979 C 60.723 8.979 60.835 9.021 60.918 9.104 C 61.001 9.187 61.043 9.299 61.043 9.438 L 61.043 10.438 C 61.043 10.577 61.001 10.689 60.918 10.772 C 60.835 10.855 60.723 10.897 60.584 10.897 L 58.694 10.897 C 58.555 10.897 58.443 10.939 58.36 11.022 C 58.277 11.105 58.235 11.217 58.235 11.356 L 58.235 12.398 C 58.235 12.537 58.277 12.649 58.36 12.732 C 58.443 12.815 58.555 12.857 58.694 12.857 L 60.96 12.857 C 61.099 12.857 61.21 12.899 61.293 12.982 C 61.376 13.065 61.418 13.177 61.418 13.316 L 61.418 14.344 C 61.418 14.483 61.376 14.595 61.293 14.678 C 61.21 14.761 61.099 14.803 60.96 14.803 L 58.694 14.803 C 58.555 14.803 58.443 14.845 58.36 14.928 C 58.277 15.011 58.235 15.123 58.235 15.262 L 58.235 18.806 C 58.235 18.945 58.193 19.057 58.11 19.14 C 58.027 19.223 57.916 19.265 57.777 19.265 L 56.581 19.265 C 56.442 19.265 56.331 19.223 56.248 19.14 C 56.164 19.057 56.122 18.945 56.122 18.806 L 56.122 15.262 C 56.122 15.123 56.08 15.011 55.997 14.928 C 55.914 14.845 55.803 14.803 55.664 14.803 L 52.967 14.803 C 52.828 14.803 52.717 14.761 52.634 14.678 C 52.55 14.595 52.508 14.483 52.508 14.344 L 52.508 13.316 C 52.508 13.177 52.55 13.065 52.634 12.982 C 52.717 12.899 52.828 12.857 52.967 12.857 L 55.664 12.857 C 55.803 12.857 55.914 12.815 55.997 12.732 C 56.08 12.649 56.122 12.537 56.122 12.398 L 56.122 11.356 C 56.122 11.217 56.08 11.105 55.997 11.022 C 55.914 10.939 55.803 10.897 55.664 10.897 L 55.01 10.897 C 54.807 10.897 54.668 10.99 54.593 11.175 C 54.445 11.546 54.269 11.898 54.065 12.231 C 53.972 12.38 53.87 12.454 53.759 12.454 C 53.648 12.454 53.551 12.433 53.468 12.391 C 53.384 12.35 53.3 12.31 53.217 12.273 C 53.134 12.236 53.034 12.19 52.919 12.134 C 52.803 12.079 52.673 12.03 52.529 11.988 C 52.386 11.947 52.27 11.958 52.182 12.023 C 52.094 12.088 52.05 12.194 52.05 12.343 L 52.05 18.82 C 52.05 18.959 52.008 19.07 51.925 19.154 C 51.842 19.237 51.73 19.279 51.591 19.279 L 50.562 19.279 C 50.423 19.279 50.312 19.237 50.229 19.154 C 50.146 19.07 50.104 18.959 50.104 18.82 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <circle style="stroke: rgb(255, 255, 255); fill: rgb(255, 255, 255);" cx="82.31" cy="13" r="7.414"></circle>
            <path d="M 88.365 13 C 88.365 16.343 85.655 19.055 82.31 19.055 C 78.967 19.055 76.255 16.343 76.255 13 C 76.255 9.655 78.967 6.945 82.31 6.945 C 85.655 6.945 88.365 9.655 88.365 13 Z M 77.71 15.693 L 86.911 15.693 L 82.31 7.726 L 77.71 15.693 Z" style="stroke: rgb(0, 0, 0); stroke-width: 0.038; fill: url(#gradient-team2-0);"></path>
            <path d="M 103.18 11.424 Q 103.194 11.424 103.944 11.368 Q 104.125 11.368 104.271 11.507 Q 104.417 11.646 104.417 11.868 L 104.417 12.897 Q 104.417 13.133 104.257 13.286 Q 104.097 13.439 103.903 13.439 L 103.666 13.439 Q 103.555 13.439 103.43 13.425 L 100.72 13.425 Q 100.553 13.425 100.455 13.488 Q 100.358 13.55 100.344 13.689 Q 99.983 16.289 97.634 17.512 Q 96.911 17.873 96.063 18.151 Q 95.994 18.165 95.903 18.165 Q 95.813 18.165 95.716 18.123 Q 95.563 18.04 95.493 17.901 Q 95.41 17.748 95.299 17.519 Q 95.187 17.289 95.062 17.095 Q 94.854 16.817 94.777 16.706 Q 94.701 16.594 94.701 16.497 Q 94.701 16.289 94.965 16.233 Q 96.258 15.913 96.953 15.427 Q 97.828 14.815 98.106 13.773 Q 98.148 13.62 98.079 13.543 Q 98.009 13.467 97.773 13.467 Q 97.175 13.467 95.868 13.516 Q 94.562 13.564 94.423 13.564 L 94.103 13.578 Q 93.936 13.578 93.783 13.439 Q 93.631 13.3 93.617 13.064 Q 93.547 12.16 93.547 12.133 Q 93.547 11.896 93.7 11.743 Q 93.853 11.59 94.089 11.59 Q 94.117 11.59 94.131 11.59 L 94.604 11.59 Q 94.951 11.604 95.382 11.604 Q 95.868 11.604 97.967 11.577 Q 98.092 11.577 98.169 11.5 Q 98.245 11.424 98.245 11.299 L 98.245 10.701 Q 98.245 10.548 98.169 10.478 Q 98.092 10.409 97.981 10.409 Q 97.953 10.409 97.926 10.423 Q 96.911 10.562 96.063 10.576 Q 96.035 10.576 96.021 10.576 Q 95.855 10.576 95.736 10.465 Q 95.618 10.353 95.59 10.235 Q 95.563 10.117 95.556 10.048 Q 95.549 9.978 95.507 9.853 Q 95.354 9.366 95.299 9.227 L 95.215 9.019 Q 95.16 8.922 95.16 8.838 Q 95.16 8.699 95.299 8.63 Q 95.368 8.588 95.479 8.588 Q 98.023 8.588 100.247 8.102 Q 101.025 7.907 101.706 7.657 Q 101.804 7.615 101.908 7.615 Q 102.012 7.615 102.096 7.643 Q 102.29 7.712 102.388 7.921 L 102.777 8.769 Q 102.874 8.991 102.791 9.193 Q 102.707 9.394 102.471 9.478 Q 101.387 9.797 100.65 9.964 Q 100.511 9.992 100.462 10.068 Q 100.414 10.145 100.414 10.256 L 100.414 11.243 Q 100.414 11.382 100.49 11.451 Q 100.567 11.521 100.678 11.521 Q 100.692 11.521 100.706 11.521 L 100.706 11.521 Q 101.401 11.493 102.089 11.472 Q 102.777 11.451 103.18 11.424 Z M 118.148 13.592 Q 118.148 13.759 118.079 13.856 Q 117.981 13.995 117.773 13.995 L 117.134 13.967 Q 115.938 13.926 113.978 13.926 L 112.116 13.926 Q 109.03 13.926 108.057 14.009 Q 108.029 14.009 108.015 14.009 Q 107.821 14.009 107.723 13.87 Q 107.654 13.773 107.654 13.62 L 107.654 13.314 L 107.64 12.591 L 107.64 12.299 Q 107.64 12.272 107.64 12.258 Q 107.64 12.091 107.737 11.987 Q 107.834 11.882 108.001 11.882 L 108.516 11.896 Q 109.099 11.924 109.961 11.924 L 111.81 11.938 L 112.31 11.938 L 113.297 11.952 L 113.798 11.952 Q 115.91 11.952 117.175 11.91 L 117.787 11.896 Q 117.94 11.896 118.044 11.994 Q 118.148 12.091 118.148 12.258 Q 118.148 12.272 118.148 12.299 Z M 125.611 14.37 Q 125.611 14.537 125.847 14.537 Q 125.93 14.537 126.354 14.489 Q 126.778 14.44 127.056 14.412 Q 127.334 14.384 127.591 14.35 Q 127.848 14.315 128.05 14.294 Q 128.252 14.273 128.279 14.204 Q 128.279 14.19 128.279 14.162 Q 128.279 14.106 128.21 13.995 Q 127.862 13.55 127.668 13.342 Q 127.473 13.133 127.473 12.932 Q 127.473 12.73 127.709 12.577 L 128.502 12.063 Q 128.613 11.98 128.808 11.98 Q 129.002 11.98 129.141 12.105 Q 130.503 13.328 132.032 15.705 Q 132.13 15.858 132.13 16.011 Q 132.13 16.08 132.102 16.15 Q 132.032 16.372 131.81 16.483 Q 131.365 16.72 130.934 17.081 Q 130.767 17.206 130.524 17.206 Q 130.281 17.206 130.114 16.9 Q 130.017 16.733 129.92 16.56 Q 129.822 16.386 129.683 16.191 Q 129.614 16.066 129.489 16.066 Q 129.461 16.066 124.165 16.789 Q 122.33 17.067 122.275 17.074 Q 122.219 17.081 122.177 17.081 Q 122.024 17.081 121.899 16.998 Q 121.732 16.9 121.677 16.678 L 121.343 15.441 Q 121.329 15.371 121.329 15.302 Q 121.329 15.107 121.468 14.996 Q 121.566 14.926 121.746 14.913 Q 121.871 14.913 122.108 14.885 L 122.997 14.815 Q 123.15 14.815 123.22 14.676 Q 123.956 13.203 124.957 10.576 Q 125.388 9.45 125.513 9.061 Q 125.638 8.671 125.694 8.532 Q 125.819 8.143 126.18 8.143 Q 126.264 8.143 126.347 8.157 L 127.64 8.519 Q 127.89 8.588 127.974 8.769 Q 128.015 8.866 128.015 8.956 Q 128.015 9.047 127.96 9.158 Q 127.904 9.269 127.855 9.373 Q 127.807 9.478 127.668 9.77 Q 127.529 10.061 127.223 10.729 L 125.666 14.148 Q 125.611 14.273 125.611 14.37 Z" style="fill: rgb(255, 255, 255); paint-order: stroke; stroke: url(#gradient-team2); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【チーム】アイコン
#[component]
fn IconTeam() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 70 26" style="vertical-align: middle; position: relative; top: -1px;" title="【チーム】">
            <defs>
                <linearGradient gradientUnits="userSpaceOnUse" x1="127.734" y1="1" x2="127.734" y2="25" id="gradient-team10" gradientTransform="matrix(0, 4.718915, -2.703448, 0, 70.491801, -590.46167)">
                    <stop offset="0" style="stop-color: rgb(3, 181, 232);"></stop>
                    <stop offset="1" style="stop-color: rgb(239, 114, 169);"></stop>
                </linearGradient>
                <linearGradient gradientUnits="userSpaceOnUse" x1="136.564" y1="6.1" x2="136.564" y2="19.971" id="gradient-team11" gradientTransform="matrix(0.007052, -0.999976, 6.538734, 0.046115, -13.742021, 148.568176)">
                    <stop offset="0" style="stop-color: rgb(239, 114, 169);"></stop>
                    <stop offset="1" style="stop-color: rgb(9, 180, 231);"></stop>
                </linearGradient>
            </defs>
            <rect x="1.215" width="67.571" height="24" style="fill: url(#gradient-team10); stroke: rgb(255, 255, 255);" rx="12" ry="12" y="1"></rect>
            <path d="M 33.986 11.509 Q 34 11.509 34.75 11.453 Q 34.931 11.453 35.077 11.592 Q 35.223 11.731 35.223 11.953 L 35.223 12.982 Q 35.223 13.218 35.063 13.371 Q 34.903 13.524 34.709 13.524 L 34.472 13.524 Q 34.361 13.524 34.236 13.51 L 31.526 13.51 Q 31.359 13.51 31.261 13.573 Q 31.164 13.635 31.15 13.774 Q 30.789 16.374 28.44 17.597 Q 27.717 17.958 26.869 18.236 Q 26.8 18.25 26.709 18.25 Q 26.619 18.25 26.522 18.208 Q 26.369 18.125 26.299 17.986 Q 26.216 17.833 26.105 17.604 Q 25.993 17.374 25.868 17.18 Q 25.66 16.902 25.583 16.791 Q 25.507 16.679 25.507 16.582 Q 25.507 16.374 25.771 16.318 Q 27.064 15.998 27.759 15.512 Q 28.634 14.9 28.912 13.858 Q 28.954 13.705 28.885 13.628 Q 28.815 13.552 28.579 13.552 Q 27.981 13.552 26.674 13.601 Q 25.368 13.649 25.229 13.649 L 24.909 13.663 Q 24.742 13.663 24.589 13.524 Q 24.437 13.385 24.423 13.149 Q 24.353 12.245 24.353 12.218 Q 24.353 11.981 24.506 11.828 Q 24.659 11.675 24.895 11.675 Q 24.923 11.675 24.937 11.675 L 25.41 11.675 Q 25.757 11.689 26.188 11.689 Q 26.674 11.689 28.773 11.662 Q 28.898 11.662 28.975 11.585 Q 29.051 11.509 29.051 11.384 L 29.051 10.786 Q 29.051 10.633 28.975 10.563 Q 28.898 10.494 28.787 10.494 Q 28.759 10.494 28.732 10.508 Q 27.717 10.647 26.869 10.661 Q 26.841 10.661 26.827 10.661 Q 26.661 10.661 26.542 10.55 Q 26.424 10.438 26.396 10.32 Q 26.369 10.202 26.362 10.133 Q 26.355 10.063 26.313 9.938 Q 26.16 9.451 26.105 9.312 L 26.021 9.104 Q 25.966 9.007 25.966 8.923 Q 25.966 8.784 26.105 8.715 Q 26.174 8.673 26.285 8.673 Q 28.829 8.673 31.053 8.187 Q 31.831 7.992 32.512 7.742 Q 32.61 7.7 32.714 7.7 Q 32.818 7.7 32.902 7.728 Q 33.096 7.797 33.194 8.006 L 33.583 8.854 Q 33.68 9.076 33.597 9.278 Q 33.513 9.479 33.277 9.563 Q 32.193 9.882 31.456 10.049 Q 31.317 10.077 31.268 10.153 Q 31.22 10.23 31.22 10.341 L 31.22 11.328 Q 31.22 11.467 31.296 11.536 Q 31.373 11.606 31.484 11.606 Q 31.498 11.606 31.512 11.606 L 31.512 11.606 Q 32.207 11.578 32.895 11.557 Q 33.583 11.536 33.986 11.509 Z M 48.949 13.677 Q 48.949 13.844 48.88 13.941 Q 48.783 14.08 48.574 14.08 L 47.935 14.052 Q 46.739 14.011 44.779 14.011 L 42.917 14.011 Q 39.831 14.011 38.858 14.094 Q 38.83 14.094 38.816 14.094 Q 38.622 14.094 38.524 13.955 Q 38.455 13.858 38.455 13.705 L 38.455 13.399 L 38.441 12.676 L 38.441 12.384 Q 38.441 12.357 38.441 12.343 Q 38.441 12.176 38.538 12.072 Q 38.636 11.967 38.802 11.967 L 39.317 11.981 Q 39.901 12.009 40.762 12.009 L 42.611 12.023 L 43.111 12.023 L 44.098 12.037 L 44.599 12.037 Q 46.712 12.037 47.976 11.995 L 48.588 11.981 Q 48.741 11.981 48.845 12.079 Q 48.949 12.176 48.949 12.343 Q 48.949 12.357 48.949 12.384 Z M 56.411 14.455 Q 56.411 14.622 56.647 14.622 Q 56.731 14.622 57.154 14.574 Q 57.578 14.525 57.856 14.497 Q 58.134 14.469 58.392 14.435 Q 58.649 14.4 58.85 14.379 Q 59.052 14.358 59.08 14.289 Q 59.08 14.275 59.08 14.247 Q 59.08 14.191 59.01 14.08 Q 58.663 13.635 58.468 13.427 Q 58.273 13.218 58.273 13.017 Q 58.273 12.815 58.51 12.662 L 59.302 12.148 Q 59.413 12.065 59.608 12.065 Q 59.802 12.065 59.941 12.19 Q 61.304 13.413 62.833 15.79 Q 62.93 15.943 62.93 16.096 Q 62.93 16.165 62.902 16.235 Q 62.833 16.457 62.61 16.568 Q 62.165 16.804 61.735 17.166 Q 61.568 17.291 61.324 17.291 Q 61.081 17.291 60.914 16.985 Q 60.817 16.818 60.72 16.645 Q 60.623 16.471 60.484 16.276 Q 60.414 16.151 60.289 16.151 Q 60.261 16.151 54.965 16.874 Q 53.13 17.152 53.075 17.159 Q 53.019 17.166 52.978 17.166 Q 52.825 17.166 52.7 17.082 Q 52.533 16.985 52.477 16.763 L 52.144 15.526 Q 52.13 15.456 52.13 15.387 Q 52.13 15.192 52.269 15.081 Q 52.366 15.011 52.547 14.998 Q 52.672 14.998 52.908 14.97 L 53.798 14.9 Q 53.951 14.9 54.02 14.761 Q 54.757 13.288 55.758 10.661 Q 56.188 9.535 56.314 9.146 Q 56.439 8.756 56.494 8.617 Q 56.619 8.228 56.981 8.228 Q 57.064 8.228 57.148 8.242 L 58.44 8.604 Q 58.69 8.673 58.774 8.854 Q 58.816 8.951 58.816 9.041 Q 58.816 9.132 58.76 9.243 Q 58.704 9.354 58.656 9.458 Q 58.607 9.563 58.468 9.855 Q 58.329 10.146 58.023 10.814 L 56.466 14.233 Q 56.411 14.358 56.411 14.455 Z" style="fill: rgb(255, 255, 255); paint-order: stroke; stroke: url(#gradient-team11); text-wrap-mode: nowrap;"></path>
            <circle style="stroke: rgb(255, 255, 255); fill: rgb(255, 131, 184);" cx="13.47" cy="13" r="7.414"></circle>
            <circle style="stroke-width: 1; stroke: rgb(255, 255, 255); fill: rgb(169, 255, 243);" cx="13.47" cy="13" r="4.205"></circle>
            <path d="M 13.426 10.309 L 16.296 14.584 L 10.555 14.584 L 13.426 10.309 Z" style="fill: rgb(255, 255, 255);"></path>
        </svg>
    }
}

/// 【チーム常】アイコン
#[component]
fn IconTeamAuto() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【チーム常】">

            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); fill: rgb(207, 33, 31); stroke-width: 2;"></path>
            <path d="M 27.019 13.03 L 27.019 9.452 C 27.019 9.251 27.079 9.091 27.2 8.97 C 27.321 8.849 27.481 8.789 27.682 8.789 L 29.954 8.789 C 30.356 8.789 30.456 8.615 30.255 8.266 L 29.914 7.744 C 29.86 7.677 29.813 7.613 29.773 7.553 C 29.733 7.492 29.693 7.435 29.652 7.382 C 29.478 7.141 29.518 6.946 29.773 6.799 L 31.542 5.874 C 31.622 5.834 31.716 5.814 31.823 5.814 C 31.93 5.814 32.024 5.868 32.104 5.975 L 32.888 7.06 L 33.552 8.105 C 33.632 8.293 33.585 8.434 33.411 8.528 L 33.29 8.588 C 33.022 8.722 33.036 8.789 33.331 8.789 L 33.853 8.789 C 34.054 8.789 34.215 8.729 34.336 8.608 C 34.456 8.487 34.516 8.327 34.516 8.126 L 34.516 6.417 C 34.516 6.216 34.576 6.056 34.697 5.935 C 34.818 5.814 34.979 5.754 35.18 5.754 L 36.848 5.754 C 37.049 5.754 37.21 5.814 37.33 5.935 C 37.451 6.056 37.511 6.216 37.511 6.417 L 37.511 8.126 C 37.511 8.327 37.571 8.487 37.692 8.608 C 37.813 8.729 37.974 8.789 38.175 8.789 L 38.878 8.789 C 39.052 8.789 39.059 8.755 38.898 8.688 L 38.697 8.588 L 38.476 8.528 C 38.355 8.461 38.329 8.373 38.396 8.266 C 38.463 8.159 38.53 8.052 38.597 7.945 C 38.664 7.838 38.744 7.707 38.838 7.553 C 38.932 7.399 39.022 7.238 39.109 7.07 C 39.196 6.903 39.267 6.759 39.32 6.638 C 39.441 6.397 39.521 6.223 39.562 6.116 C 39.696 5.834 39.904 5.747 40.185 5.854 L 41.974 6.618 C 42.108 6.671 42.198 6.755 42.245 6.869 C 42.292 6.983 42.292 7.087 42.245 7.181 C 42.198 7.275 42.158 7.359 42.124 7.432 C 42.091 7.506 42.047 7.586 41.994 7.673 C 41.94 7.76 41.89 7.851 41.843 7.945 C 41.796 8.038 41.746 8.132 41.692 8.226 C 41.478 8.601 41.585 8.789 42.014 8.789 L 44.406 8.789 C 44.607 8.789 44.767 8.849 44.888 8.97 C 45.009 9.091 45.069 9.251 45.069 9.452 L 45.069 13.03 C 45.069 13.231 45.009 13.391 44.888 13.512 C 44.767 13.633 44.607 13.693 44.406 13.693 L 42.918 13.693 C 42.717 13.693 42.557 13.633 42.436 13.512 C 42.315 13.391 42.255 13.231 42.255 13.03 L 42.255 11.784 C 42.255 11.583 42.195 11.422 42.074 11.301 C 41.953 11.18 41.793 11.12 41.592 11.12 L 30.517 11.12 C 30.316 11.12 30.155 11.18 30.034 11.301 C 29.913 11.422 29.853 11.583 29.853 11.784 L 29.853 13.03 C 29.853 13.231 29.793 13.391 29.672 13.512 C 29.551 13.633 29.391 13.693 29.19 13.693 L 27.682 13.693 C 27.481 13.693 27.321 13.633 27.2 13.512 C 27.079 13.391 27.019 13.231 27.019 13.03 Z M 34.516 23.582 L 34.516 19.864 C 34.516 19.663 34.456 19.502 34.336 19.382 C 34.215 19.261 34.054 19.201 33.853 19.201 L 32.707 19.201 C 32.506 19.201 32.346 19.261 32.225 19.382 C 32.104 19.502 32.044 19.663 32.044 19.864 L 32.044 22.678 C 32.044 22.879 31.984 23.039 31.863 23.16 C 31.742 23.281 31.582 23.341 31.381 23.341 L 29.773 23.341 C 29.572 23.341 29.411 23.281 29.29 23.16 C 29.17 23.039 29.11 22.879 29.11 22.678 L 29.11 17.593 C 29.11 17.392 29.17 17.231 29.29 17.11 C 29.411 16.989 29.572 16.929 29.773 16.929 L 34.215 16.929 C 34.416 16.929 34.516 16.825 34.516 16.618 C 34.516 16.41 34.416 16.306 34.215 16.306 L 31.481 16.306 C 31.28 16.306 31.12 16.246 30.999 16.125 C 30.878 16.004 30.818 15.844 30.818 15.643 L 30.818 12.367 C 30.818 12.166 30.878 12.005 30.999 11.884 C 31.12 11.763 31.28 11.703 31.481 11.703 L 40.546 11.703 C 40.747 11.703 40.908 11.763 41.029 11.884 C 41.15 12.005 41.21 12.166 41.21 12.367 L 41.21 15.643 C 41.21 15.844 41.15 16.004 41.029 16.125 C 40.908 16.246 40.747 16.306 40.546 16.306 L 37.833 16.306 C 37.618 16.306 37.511 16.41 37.511 16.618 C 37.511 16.825 37.618 16.929 37.833 16.929 L 42.456 16.929 C 42.657 16.929 42.817 16.989 42.938 17.11 C 43.059 17.231 43.119 17.392 43.119 17.593 L 43.119 21.17 C 43.119 22.443 42.596 23.187 41.551 23.402 C 41.216 23.469 40.835 23.502 40.406 23.502 L 39.3 23.502 C 38.992 23.502 38.818 23.348 38.778 23.04 C 38.631 22.169 38.49 21.539 38.356 21.15 C 38.262 20.882 38.356 20.748 38.637 20.748 L 39.421 20.748 C 39.716 20.748 39.91 20.705 40.004 20.618 C 40.097 20.531 40.144 20.353 40.144 20.085 L 40.144 19.643 C 40.144 19.348 39.997 19.201 39.702 19.201 L 38.175 19.201 C 37.974 19.201 37.813 19.261 37.692 19.382 C 37.571 19.502 37.511 19.663 37.511 19.864 L 37.511 23.582 C 37.511 23.783 37.451 23.944 37.33 24.065 C 37.21 24.186 37.049 24.246 36.848 24.246 L 35.18 24.246 C 34.979 24.246 34.818 24.186 34.697 24.065 C 34.576 23.944 34.516 23.783 34.516 23.582 Z M 33.954 14.397 L 38.094 14.397 C 38.349 14.397 38.476 14.266 38.476 14.005 C 38.476 13.744 38.349 13.613 38.094 13.613 L 33.954 13.613 C 33.686 13.613 33.552 13.744 33.552 14.005 C 33.552 14.266 33.686 14.397 33.954 14.397 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <circle style="fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="9.059"></circle>
            <circle style="stroke-width: 1; fill: rgb(207, 33, 31);" cx="15.443" cy="15" r="6.924"></circle>
            <circle style="stroke-width: 1; fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="4.592"></circle>
            <path d="M 15.443 11.345 L 18.997 17.056 L 11.889 17.056 L 15.443 11.345 Z" style="fill: rgb(207, 33, 31);"></path>
        </svg>
    }
}

/// 【チーム起】アイコン
#[component]
fn IconTeamActivated() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【チーム起】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); stroke-width: 2; fill: rgb(30, 143, 66);"></path>
            <path d="M 37.612 23.863 C 36.178 23.863 35.039 23.745 34.195 23.511 C 33.351 23.277 32.647 23.019 32.084 22.737 C 31.521 22.455 31.059 22.154 30.697 21.833 C 30.335 21.511 30.054 21.351 29.853 21.351 C 29.598 21.351 29.394 21.565 29.24 21.994 C 29.086 22.422 28.922 22.818 28.748 23.18 C 28.64 23.407 28.503 23.521 28.336 23.521 C 28.168 23.521 28.024 23.494 27.904 23.441 C 27.314 23.159 26.898 22.985 26.657 22.918 C 26.282 22.77 26.195 22.492 26.396 22.084 C 26.597 21.675 26.768 21.226 26.909 20.738 C 27.049 20.248 27.16 19.756 27.24 19.26 C 27.374 18.389 27.474 17.371 27.542 16.205 C 27.542 15.977 27.605 15.799 27.733 15.672 C 27.86 15.544 28.037 15.494 28.265 15.522 L 29.632 15.662 C 29.967 15.688 30.135 15.869 30.135 16.205 L 30.074 17.511 C 30.06 17.631 30.087 17.752 30.155 17.873 L 30.557 18.537 C 30.677 18.697 30.738 18.684 30.738 18.496 L 30.738 14.858 C 30.738 14.657 30.677 14.496 30.557 14.376 C 30.436 14.255 30.275 14.195 30.074 14.195 L 27.723 14.195 C 27.521 14.195 27.36 14.134 27.24 14.014 C 27.119 13.893 27.059 13.732 27.059 13.532 L 27.059 12.466 C 27.059 12.265 27.119 12.104 27.24 11.984 C 27.36 11.863 27.521 11.803 27.723 11.803 L 29.974 11.803 C 30.174 11.803 30.335 11.742 30.456 11.622 C 30.576 11.501 30.637 11.34 30.637 11.14 L 30.637 10.919 C 30.637 10.717 30.576 10.556 30.456 10.436 C 30.335 10.315 30.174 10.255 29.974 10.255 L 28.326 10.255 C 28.124 10.255 27.963 10.194 27.843 10.074 C 27.722 9.954 27.662 9.793 27.662 9.592 L 27.662 8.587 C 27.662 8.386 27.722 8.225 27.843 8.105 C 27.963 7.984 28.124 7.924 28.326 7.924 L 29.974 7.924 C 30.174 7.924 30.335 7.863 30.456 7.743 C 30.576 7.622 30.637 7.461 30.637 7.26 L 30.637 6.477 C 30.637 6.275 30.697 6.114 30.818 5.994 C 30.938 5.873 31.099 5.813 31.3 5.813 L 32.768 5.813 C 32.968 5.813 33.129 5.873 33.25 5.994 C 33.37 6.114 33.431 6.275 33.431 6.477 L 33.431 7.26 C 33.431 7.461 33.491 7.622 33.612 7.743 C 33.732 7.863 33.893 7.924 34.094 7.924 L 34.979 7.924 C 35.179 7.924 35.34 7.984 35.461 8.105 C 35.581 8.225 35.642 8.386 35.642 8.587 L 35.642 9.592 C 35.642 9.793 35.581 9.954 35.461 10.074 C 35.34 10.194 35.179 10.255 34.979 10.255 L 34.094 10.255 C 33.893 10.255 33.732 10.315 33.612 10.436 C 33.491 10.556 33.431 10.717 33.431 10.919 L 33.431 11.14 C 33.431 11.34 33.491 11.501 33.612 11.622 C 33.732 11.742 33.893 11.803 34.094 11.803 L 35.361 11.803 C 35.561 11.803 35.722 11.863 35.843 11.984 C 35.963 12.104 36.024 12.265 36.024 12.466 L 36.024 13.532 C 36.024 13.732 35.963 13.893 35.843 14.014 C 35.722 14.134 35.561 14.195 35.361 14.195 L 34.094 14.195 C 33.893 14.195 33.732 14.255 33.612 14.376 C 33.491 14.496 33.431 14.657 33.431 14.858 L 33.431 15.039 C 33.431 15.24 33.491 15.401 33.612 15.522 C 33.732 15.642 33.893 15.702 34.094 15.702 L 35.22 15.702 C 35.42 15.702 35.581 15.762 35.702 15.883 C 35.822 16.003 35.883 16.164 35.883 16.366 L 35.883 17.612 C 35.883 17.812 35.822 17.973 35.702 18.094 C 35.581 18.214 35.42 18.275 35.22 18.275 L 34.094 18.275 C 33.893 18.275 33.732 18.335 33.612 18.456 C 33.491 18.576 33.431 18.737 33.431 18.939 L 33.431 20.265 C 33.431 20.573 33.578 20.774 33.873 20.868 C 34.905 21.136 36.01 21.27 37.19 21.27 C 40.942 21.27 43.514 21.163 44.908 20.949 C 45.189 20.921 45.29 21.042 45.21 21.31 C 44.982 22.034 44.854 22.536 44.828 22.818 C 44.801 23.099 44.781 23.28 44.767 23.361 C 44.727 23.695 44.546 23.863 44.225 23.863 L 37.612 23.863 Z M 38.918 20.265 C 38.221 20.265 37.745 20.198 37.491 20.064 C 36.981 19.782 36.727 19.333 36.727 18.717 L 36.727 12.306 C 36.727 12.104 36.787 11.943 36.908 11.823 C 37.028 11.702 37.189 11.642 37.391 11.642 L 40.808 11.642 C 41.008 11.642 41.169 11.581 41.29 11.461 C 41.41 11.34 41.471 11.179 41.471 10.979 L 41.471 9.914 C 41.471 9.712 41.41 9.551 41.29 9.431 C 41.169 9.31 41.008 9.25 40.808 9.25 L 37.31 9.25 C 37.109 9.25 36.948 9.189 36.828 9.069 C 36.707 8.949 36.647 8.788 36.647 8.587 L 36.647 7.421 C 36.647 7.22 36.707 7.059 36.828 6.939 C 36.948 6.818 37.109 6.758 37.31 6.758 L 43.662 6.758 C 43.862 6.758 44.023 6.818 44.144 6.939 C 44.264 7.059 44.325 7.22 44.325 7.421 L 44.325 13.471 C 44.325 13.672 44.264 13.833 44.144 13.954 C 44.023 14.074 43.862 14.135 43.662 14.135 L 40.185 14.135 C 39.983 14.135 39.822 14.195 39.702 14.316 C 39.581 14.436 39.521 14.596 39.521 14.798 L 39.521 17.049 C 39.521 17.237 39.568 17.361 39.662 17.421 C 39.756 17.481 39.923 17.511 40.165 17.511 L 41.531 17.511 C 41.973 17.511 42.262 17.39 42.396 17.15 C 42.502 16.988 42.589 16.653 42.657 16.145 C 42.683 15.863 42.831 15.776 43.099 15.883 C 43.233 15.937 43.373 15.994 43.521 16.054 C 43.668 16.114 43.822 16.168 43.984 16.215 C 44.144 16.261 44.312 16.312 44.486 16.366 L 44.928 16.466 C 45.222 16.56 45.343 16.747 45.29 17.029 C 45.116 18.195 44.854 18.992 44.506 19.421 C 44.05 19.983 43.307 20.265 42.275 20.265 L 38.918 20.265 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <circle style="fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="9.059"></circle>
            <circle style="stroke-width: 1; fill: rgb(30, 143, 66);" cx="15.443" cy="15" r="6.924"></circle>
            <circle style="stroke-width: 1; fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="4.592"></circle>
            <path d="M 15.443 11.345 L 18.997 17.056 L 11.889 17.056 L 15.443 11.345 Z" style="fill: rgb(30, 143, 66);"></path>
        </svg>
    }
}

/// 【チーム出】アイコン
#[component]
fn IconTeamCip() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【チーム出】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); stroke-width: 2; fill: rgb(28, 84, 164);"></path>
            <path d="M 27.522 22.737 L 27.522 16.687 Q 27.522 16.386 27.703 16.205 Q 27.884 16.024 28.185 16.024 L 29.934 16.024 Q 30.235 16.024 30.416 16.205 Q 30.597 16.386 30.597 16.687 L 30.597 19.843 Q 30.597 20.145 30.778 20.325 Q 30.959 20.506 31.26 20.506 L 33.793 20.506 Q 34.094 20.506 34.275 20.325 Q 34.456 20.145 34.456 19.843 L 34.456 15.803 Q 34.456 15.501 34.275 15.321 Q 34.094 15.14 33.793 15.14 L 28.828 15.14 Q 28.527 15.14 28.346 14.959 Q 28.165 14.778 28.165 14.476 L 28.165 8.125 Q 28.165 7.823 28.346 7.642 Q 28.527 7.461 28.828 7.461 L 30.677 7.461 Q 30.979 7.461 31.16 7.642 Q 31.341 7.823 31.341 8.125 L 31.341 11.642 Q 31.341 11.944 31.522 12.125 Q 31.703 12.306 32.004 12.306 L 33.793 12.306 Q 34.094 12.306 34.275 12.125 Q 34.456 11.944 34.456 11.642 L 34.456 6.637 Q 34.456 6.336 34.637 6.155 Q 34.818 5.974 35.12 5.974 L 36.908 5.974 Q 37.21 5.974 37.391 6.155 Q 37.572 6.336 37.572 6.637 L 37.572 11.642 Q 37.572 11.944 37.753 12.125 Q 37.934 12.306 38.235 12.306 L 39.984 12.306 Q 40.285 12.306 40.466 12.125 Q 40.647 11.944 40.647 11.642 L 40.647 8.125 Q 40.647 7.823 40.828 7.642 Q 41.009 7.461 41.31 7.461 L 43.18 7.461 Q 43.481 7.461 43.662 7.642 Q 43.843 7.823 43.843 8.125 L 43.843 14.476 Q 43.843 14.778 43.662 14.959 Q 43.481 15.14 43.18 15.14 L 38.235 15.14 Q 37.934 15.14 37.753 15.321 Q 37.572 15.501 37.572 15.803 L 37.572 19.843 Q 37.572 20.145 37.753 20.325 Q 37.934 20.506 38.235 20.506 L 40.788 20.506 Q 41.089 20.506 41.27 20.325 Q 41.451 20.145 41.451 19.843 L 41.451 16.687 Q 41.451 16.386 41.632 16.205 Q 41.813 16.024 42.114 16.024 L 43.863 16.024 Q 44.165 16.024 44.345 16.205 Q 44.526 16.386 44.526 16.687 L 44.526 22.737 Q 44.526 23.039 44.345 23.22 Q 44.165 23.401 43.863 23.401 L 28.185 23.401 Q 27.884 23.401 27.703 23.22 Q 27.522 23.039 27.522 22.737 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <circle style="fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="9.059"></circle>
            <circle style="stroke-width: 1; fill: rgb(28, 84, 164);" cx="15.443" cy="15" r="6.924"></circle>
            <circle style="stroke-width: 1; fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="4.592"></circle>
            <path d="M 15.443 11.345 L 18.997 17.056 L 11.889 17.056 L 15.443 11.345 Z" style="fill: rgb(28, 84, 164);"></path>
        </svg>
    }
}
/// 【チーム自】アイコン
#[component]
fn IconTeamPassive() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 60 30" style="vertical-align: middle; position: relative; top: -1px;" title="【チーム自】">
            <path d="M 1.519 1.597 L 49.254 1.597 L 58.481 15 L 49.254 28.403 L 1.519 28.403 L 1.519 1.597 Z" style="stroke: rgb(255, 255, 255); stroke-width: 2; fill: rgb(245, 149, 32);"></path>
            <path d="M 29.049 22.858 L 29.049 8.869 Q 29.049 8.567 29.23 8.386 Q 29.411 8.205 29.713 8.205 L 32.587 8.205 Q 33.089 8.205 33.21 7.743 L 33.391 7.2 L 33.753 5.914 Q 33.813 5.632 34.115 5.632 L 36.929 5.874 Q 37.17 5.894 37.26 6.034 Q 37.351 6.175 37.28 6.336 Q 37.21 6.497 37.16 6.617 Q 37.109 6.738 37.049 6.879 L 36.728 7.542 Q 36.587 7.843 36.697 8.024 Q 36.808 8.205 37.15 8.205 L 42.335 8.205 Q 42.637 8.205 42.818 8.386 Q 42.999 8.567 42.999 8.869 L 42.999 22.858 Q 42.999 23.16 42.818 23.341 Q 42.637 23.521 42.335 23.521 L 29.713 23.521 Q 29.411 23.521 29.23 23.341 Q 29.049 23.16 29.049 22.858 Z M 32.828 12.507 L 39.22 12.507 Q 39.521 12.507 39.702 12.326 Q 39.883 12.145 39.883 11.843 L 39.883 11.461 Q 39.883 11.16 39.702 10.979 Q 39.521 10.798 39.22 10.798 L 32.828 10.798 Q 32.527 10.798 32.346 10.979 Q 32.165 11.16 32.165 11.461 L 32.165 11.843 Q 32.165 12.145 32.346 12.326 Q 32.527 12.507 32.828 12.507 Z M 32.828 16.728 L 39.22 16.728 Q 39.521 16.728 39.702 16.547 Q 39.883 16.366 39.883 16.064 L 39.883 15.703 Q 39.883 15.401 39.702 15.22 Q 39.521 15.039 39.22 15.039 L 32.828 15.039 Q 32.527 15.039 32.346 15.22 Q 32.165 15.401 32.165 15.703 L 32.165 16.064 Q 32.165 16.366 32.346 16.547 Q 32.527 16.728 32.828 16.728 Z M 32.828 20.929 L 39.22 20.929 Q 39.521 20.929 39.702 20.748 Q 39.883 20.567 39.883 20.265 L 39.883 19.924 Q 39.883 19.622 39.702 19.441 Q 39.521 19.26 39.22 19.26 L 32.828 19.26 Q 32.527 19.26 32.346 19.441 Q 32.165 19.622 32.165 19.924 L 32.165 20.265 Q 32.165 20.567 32.346 20.748 Q 32.527 20.929 32.828 20.929 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <circle style="fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="9.059"></circle>
            <circle style="stroke-width: 1; fill: rgb(245, 149, 32);" cx="15.443" cy="15" r="6.924"></circle>
            <circle style="stroke-width: 1; fill: rgb(255, 255, 255);" cx="15.443" cy="15" r="4.592"></circle>
            <path d="M 15.443 11.345 L 18.997 17.056 L 11.889 17.056 L 15.443 11.345 Z" style="fill: rgb(245, 149, 32);"></path>
        </svg>
    }
}

/// 【使用条件】アイコン
#[component]
fn IconLimitation() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 68 26" style="vertical-align: middle; position: relative; top: -1px;" title="【使用条件】">
          <rect width="65.615" height="24" style="stroke: rgb(255, 255, 255);" rx="12" ry="12" y="1" x="1.192" transform="matrix(1, 0, 0, 1, 0, 1.4210854715202004e-14)"/>
          <path d="M 11.324 19.233 C 11.305 19.186 11.287 19.14 11.269 19.094 C 11 18.557 10.777 18.214 10.601 18.065 C 10.472 17.926 10.5 17.834 10.685 17.787 C 11.51 17.583 12.112 17.351 12.492 17.092 C 12.612 17.018 12.677 16.921 12.686 16.8 C 12.695 16.68 12.661 16.578 12.582 16.494 C 12.503 16.411 12.436 16.341 12.381 16.286 C 12.325 16.231 12.241 16.129 12.13 15.98 L 11.88 15.647 C 11.806 15.545 11.778 15.436 11.797 15.32 C 11.816 15.204 11.88 15.109 11.991 15.035 L 12.116 14.952 C 12.403 14.739 12.366 14.632 12.005 14.632 L 11.463 14.632 C 11.324 14.632 11.213 14.59 11.13 14.507 C 11.046 14.424 11.004 14.312 11.004 14.173 L 11.004 10.657 C 11.004 10.518 11.046 10.406 11.13 10.323 C 11.213 10.24 11.324 10.198 11.463 10.198 L 13.826 10.198 C 14.039 10.198 14.146 10.091 14.146 9.878 C 14.146 9.665 14.039 9.558 13.826 9.558 L 11.324 9.558 C 11.185 9.558 11.074 9.516 10.991 9.433 C 10.907 9.35 10.865 9.239 10.865 9.1 L 10.865 8.252 C 10.865 8.113 10.907 8.001 10.991 7.918 C 11.074 7.835 11.185 7.793 11.324 7.793 L 13.687 7.793 C 13.826 7.793 13.938 7.751 14.021 7.668 C 14.104 7.585 14.146 7.473 14.146 7.334 L 14.146 7.168 C 14.146 7.029 14.188 6.917 14.271 6.834 C 14.354 6.751 14.466 6.709 14.605 6.709 L 15.647 6.709 C 15.786 6.709 15.898 6.751 15.981 6.834 C 16.064 6.917 16.106 7.029 16.106 7.168 L 16.106 7.334 C 16.106 7.473 16.148 7.585 16.231 7.668 C 16.314 7.751 16.425 7.793 16.564 7.793 L 19.122 7.793 C 19.261 7.793 19.373 7.835 19.456 7.918 C 19.539 8.001 19.581 8.113 19.581 8.252 L 19.581 9.1 C 19.581 9.239 19.539 9.35 19.456 9.433 C 19.373 9.516 19.261 9.558 19.122 9.558 L 16.425 9.558 C 16.212 9.558 16.106 9.665 16.106 9.878 C 16.106 10.091 16.212 10.198 16.425 10.198 L 18.802 10.198 C 18.941 10.198 19.053 10.24 19.136 10.323 C 19.219 10.406 19.261 10.518 19.261 10.657 L 19.261 14.173 C 19.261 14.312 19.219 14.424 19.136 14.507 C 19.053 14.59 18.941 14.632 18.802 14.632 L 16.467 14.632 C 16.346 14.632 16.244 14.669 16.161 14.743 C 16.078 14.817 16.027 14.905 16.008 15.007 C 15.99 15.109 15.969 15.204 15.946 15.292 C 15.923 15.38 15.902 15.47 15.883 15.563 L 15.717 16.022 C 15.615 16.309 15.689 16.513 15.939 16.633 C 17.144 17.134 18.399 17.44 19.706 17.551 C 19.919 17.56 19.956 17.653 19.817 17.829 C 19.586 18.116 19.396 18.455 19.247 18.844 C 19.192 18.945 19.15 19.052 19.122 19.163 C 19.057 19.376 18.918 19.469 18.705 19.441 C 17.12 19.144 15.781 18.695 14.688 18.093 C 14.595 18.056 14.505 18.037 14.417 18.037 C 14.329 18.037 14.239 18.074 14.146 18.149 C 13.525 18.649 12.719 19.075 11.727 19.427 C 11.551 19.483 11.417 19.418 11.324 19.233 Z M 8.35 18.969 L 8.35 13.589 C 8.35 13.422 8.304 13.409 8.211 13.548 C 8.155 13.603 8.118 13.65 8.099 13.687 C 8.081 13.724 8.067 13.747 8.058 13.756 L 7.905 13.951 C 7.803 14.072 7.701 14.062 7.599 13.923 C 7.367 13.626 7.08 13.367 6.737 13.145 C 6.506 12.969 6.483 12.774 6.668 12.561 C 7.205 11.838 7.643 11.069 7.981 10.253 C 8.32 9.438 8.614 8.604 8.864 7.751 C 8.91 7.52 8.949 7.337 8.982 7.202 C 9.015 7.068 9.082 6.962 9.184 6.883 C 9.285 6.804 9.415 6.783 9.573 6.82 L 10.546 7.029 C 10.675 7.047 10.773 7.105 10.838 7.202 C 10.903 7.299 10.907 7.464 10.852 7.696 C 10.703 8.363 10.532 8.947 10.337 9.447 C 10.318 9.521 10.309 9.577 10.309 9.614 L 10.309 18.969 C 10.309 19.108 10.267 19.219 10.184 19.302 C 10.101 19.385 9.99 19.427 9.851 19.427 L 8.808 19.427 C 8.669 19.427 8.558 19.385 8.475 19.302 C 8.392 19.219 8.35 19.108 8.35 18.969 Z M 16.564 12.908 L 16.884 12.908 C 17.023 12.908 17.135 12.866 17.218 12.783 C 17.301 12.7 17.343 12.589 17.343 12.45 L 17.343 12.366 C 17.343 12.227 17.301 12.116 17.218 12.033 C 17.135 11.95 17.023 11.908 16.884 11.908 L 16.564 11.908 C 16.425 11.908 16.314 11.95 16.231 12.033 C 16.148 12.116 16.106 12.227 16.106 12.366 L 16.106 12.45 C 16.106 12.589 16.148 12.7 16.231 12.783 C 16.314 12.866 16.425 12.908 16.564 12.908 Z M 13.381 12.908 L 13.687 12.908 C 13.826 12.908 13.938 12.866 14.021 12.783 C 14.104 12.7 14.146 12.589 14.146 12.45 L 14.146 12.366 C 14.146 12.227 14.104 12.116 14.021 12.033 C 13.938 11.95 13.826 11.908 13.687 11.908 L 13.381 11.908 C 13.242 11.908 13.131 11.95 13.048 12.033 C 12.965 12.116 12.923 12.227 12.923 12.366 L 12.923 12.45 C 12.923 12.589 12.965 12.7 13.048 12.783 C 13.131 12.866 13.242 12.908 13.381 12.908 Z M 13.965 15.105 C 14.067 14.79 13.984 14.632 13.715 14.632 L 13.493 14.632 C 13.335 14.632 13.307 14.692 13.409 14.813 L 13.729 15.16 C 13.84 15.271 13.919 15.253 13.965 15.105 Z M 22.79 19.094 C 22.707 19.242 22.6 19.316 22.47 19.316 C 22.34 19.316 22.21 19.279 22.081 19.205 C 21.849 19.066 21.515 18.908 21.08 18.732 C 20.783 18.603 20.714 18.394 20.871 18.107 C 21.52 16.912 21.895 15.498 21.997 13.867 C 22.034 13.367 22.053 12.867 22.053 12.366 L 22.053 7.543 C 22.053 7.404 22.095 7.292 22.178 7.209 C 22.261 7.126 22.373 7.084 22.512 7.084 L 32.311 7.084 C 32.45 7.084 32.562 7.126 32.645 7.209 C 32.728 7.292 32.77 7.404 32.77 7.543 L 32.77 17.732 C 32.77 18.631 32.362 19.154 31.547 19.302 C 31.296 19.349 31.023 19.372 30.727 19.372 L 29.99 19.372 C 29.786 19.372 29.665 19.261 29.628 19.038 C 29.554 18.427 29.466 17.949 29.364 17.606 C 29.318 17.403 29.392 17.301 29.587 17.301 L 30.171 17.301 C 30.365 17.301 30.497 17.275 30.567 17.224 C 30.636 17.173 30.671 17.046 30.671 16.842 L 30.671 15.48 C 30.671 15.341 30.629 15.229 30.546 15.146 C 30.463 15.063 30.351 15.021 30.212 15.021 L 28.85 15.021 C 28.711 15.021 28.6 15.063 28.516 15.146 C 28.433 15.229 28.391 15.341 28.391 15.48 L 28.391 18.427 C 28.391 18.566 28.349 18.677 28.266 18.76 C 28.183 18.843 28.072 18.885 27.933 18.885 L 26.807 18.885 C 26.668 18.885 26.556 18.843 26.473 18.76 C 26.39 18.677 26.348 18.566 26.348 18.427 L 26.348 15.48 C 26.348 15.341 26.306 15.229 26.223 15.146 C 26.14 15.063 26.028 15.021 25.889 15.021 L 24.444 15.021 C 24.323 15.021 24.221 15.058 24.138 15.132 C 24.055 15.207 24.004 15.304 23.985 15.424 C 23.809 16.721 23.411 17.945 22.79 19.094 Z M 28.85 10.142 L 30.212 10.142 C 30.351 10.142 30.463 10.1 30.546 10.017 C 30.629 9.934 30.671 9.823 30.671 9.684 L 30.671 9.35 C 30.671 9.211 30.629 9.099 30.546 9.016 C 30.463 8.933 30.351 8.891 30.212 8.891 L 28.85 8.891 C 28.711 8.891 28.6 8.933 28.516 9.016 C 28.433 9.099 28.391 9.211 28.391 9.35 L 28.391 9.684 C 28.391 9.823 28.433 9.934 28.516 10.017 C 28.6 10.1 28.711 10.142 28.85 10.142 Z M 24.638 10.142 L 25.889 10.142 C 26.028 10.142 26.14 10.1 26.223 10.017 C 26.306 9.934 26.348 9.823 26.348 9.684 L 26.348 9.35 C 26.348 9.211 26.306 9.099 26.223 9.016 C 26.14 8.933 26.028 8.891 25.889 8.891 L 24.638 8.891 C 24.499 8.891 24.388 8.933 24.305 9.016 C 24.222 9.099 24.18 9.211 24.18 9.35 L 24.18 9.684 C 24.18 9.823 24.222 9.934 24.305 10.017 C 24.388 10.1 24.499 10.142 24.638 10.142 Z M 28.85 13.256 L 30.212 13.256 C 30.351 13.256 30.463 13.214 30.546 13.131 C 30.629 13.048 30.671 12.936 30.671 12.797 L 30.671 12.422 C 30.671 12.283 30.629 12.171 30.546 12.088 C 30.463 12.005 30.351 11.963 30.212 11.963 L 28.85 11.963 C 28.711 11.963 28.6 12.005 28.516 12.088 C 28.433 12.171 28.391 12.283 28.391 12.422 L 28.391 12.797 C 28.391 12.936 28.433 13.048 28.516 13.131 C 28.6 13.214 28.711 13.256 28.85 13.256 Z M 24.388 13.256 L 25.889 13.256 C 26.028 13.256 26.14 13.214 26.223 13.131 C 26.306 13.048 26.348 12.936 26.348 12.797 L 26.348 12.422 C 26.348 12.283 26.306 12.171 26.223 12.088 C 26.14 12.005 26.028 11.963 25.889 11.963 L 24.388 11.963 C 24.249 11.963 24.18 12.028 24.18 12.158 L 24.18 12.811 L 24.166 13.033 C 24.166 13.182 24.24 13.256 24.388 13.256 Z M 35.756 13.659 C 35.636 13.678 35.53 13.657 35.437 13.596 C 35.344 13.536 35.284 13.46 35.256 13.367 C 35.173 13.006 35.11 12.779 35.068 12.686 C 35.027 12.593 34.997 12.515 34.978 12.45 C 34.876 12.19 34.955 12.046 35.214 12.019 C 36.465 11.898 37.582 11.671 38.564 11.338 C 38.796 11.263 38.923 11.157 38.946 11.018 C 38.969 10.879 38.888 10.73 38.703 10.573 C 38.601 10.471 38.52 10.39 38.46 10.33 C 38.4 10.27 38.361 10.233 38.342 10.219 C 38.323 10.205 38.284 10.168 38.224 10.107 C 38.163 10.047 38.082 10.017 37.98 10.017 C 37.878 10.017 37.748 10.063 37.591 10.156 C 36.702 10.675 36.155 10.902 35.951 10.837 C 35.849 10.81 35.77 10.754 35.715 10.67 C 35.659 10.587 35.613 10.513 35.576 10.448 C 35.446 10.244 35.302 10.045 35.145 9.85 C 34.987 9.655 35.049 9.498 35.332 9.378 C 35.615 9.257 35.928 9.107 36.271 8.926 C 36.614 8.745 36.947 8.539 37.271 8.307 C 37.994 7.807 38.546 7.297 38.926 6.778 C 39.093 6.575 39.278 6.51 39.482 6.584 L 40.51 6.945 C 40.769 7.047 40.82 7.205 40.663 7.418 C 40.58 7.52 40.554 7.603 40.587 7.668 C 40.619 7.733 40.7 7.765 40.83 7.765 L 45.042 7.765 C 45.162 7.765 45.268 7.811 45.361 7.904 L 45.5 8.029 C 45.574 8.113 45.613 8.208 45.618 8.314 C 45.623 8.421 45.588 8.516 45.514 8.599 C 44.856 9.378 44.221 10.013 43.61 10.504 C 43.415 10.671 43.33 10.826 43.353 10.969 C 43.376 11.113 43.508 11.222 43.749 11.296 C 44.796 11.611 45.894 11.806 47.043 11.88 C 47.34 11.917 47.423 12.069 47.293 12.338 C 47.126 12.7 47.006 12.983 46.932 13.186 C 46.821 13.529 46.645 13.682 46.404 13.645 C 44.43 13.414 42.72 12.95 41.275 12.255 C 41.219 12.227 41.154 12.213 41.08 12.213 C 41.006 12.213 40.932 12.227 40.858 12.255 C 39.468 12.932 37.767 13.4 35.756 13.659 Z M 40.385 9.697 C 40.385 9.697 40.417 9.72 40.482 9.767 C 40.547 9.813 40.615 9.859 40.684 9.906 C 40.753 9.952 40.823 9.996 40.892 10.038 C 40.962 10.08 41.052 10.101 41.163 10.101 C 41.274 10.101 41.492 9.98 41.817 9.739 L 42.123 9.503 C 42.216 9.438 42.255 9.385 42.241 9.343 C 42.227 9.301 42.16 9.28 42.039 9.28 L 40.649 9.28 C 40.408 9.28 40.272 9.326 40.239 9.419 C 40.206 9.512 40.255 9.604 40.385 9.697 Z M 40.107 18.941 L 40.107 17.606 C 40.107 17.291 40.014 17.134 39.829 17.134 C 39.736 17.134 39.611 17.19 39.454 17.301 C 38.361 18.135 37.286 18.779 36.229 19.233 C 36.108 19.279 35.995 19.281 35.888 19.24 C 35.782 19.198 35.703 19.131 35.652 19.038 C 35.601 18.945 35.553 18.862 35.506 18.788 C 35.358 18.529 35.198 18.285 35.027 18.058 C 34.855 17.831 34.917 17.667 35.214 17.565 C 36.113 17.25 37.11 16.749 38.203 16.064 C 38.407 15.934 38.495 15.827 38.467 15.744 C 38.439 15.661 38.305 15.619 38.064 15.619 L 35.645 15.619 C 35.506 15.619 35.395 15.577 35.312 15.494 C 35.228 15.411 35.186 15.299 35.186 15.16 L 35.186 14.465 C 35.186 14.326 35.228 14.215 35.312 14.132 C 35.395 14.048 35.506 14.006 35.645 14.006 L 39.648 14.006 C 39.787 14.006 39.899 13.964 39.982 13.881 C 40.065 13.798 40.107 13.687 40.107 13.548 L 40.107 13.284 C 40.107 13.145 40.149 13.033 40.232 12.95 C 40.315 12.867 40.427 12.825 40.566 12.825 L 41.636 12.825 C 41.775 12.825 41.887 12.867 41.97 12.95 C 42.053 13.033 42.095 13.145 42.095 13.284 L 42.095 13.548 C 42.095 13.687 42.137 13.798 42.22 13.881 C 42.303 13.964 42.414 14.006 42.553 14.006 L 46.529 14.006 C 46.668 14.006 46.779 14.048 46.862 14.132 C 46.946 14.215 46.988 14.326 46.988 14.465 L 46.988 15.16 C 46.988 15.299 46.946 15.411 46.862 15.494 C 46.779 15.577 46.668 15.619 46.529 15.619 L 44.138 15.619 C 43.897 15.619 43.765 15.658 43.742 15.737 C 43.719 15.816 43.809 15.92 44.013 16.05 C 44.986 16.643 46.037 17.148 47.168 17.565 C 47.381 17.62 47.414 17.741 47.266 17.926 C 46.913 18.389 46.658 18.783 46.501 19.108 C 46.399 19.303 46.255 19.358 46.07 19.274 C 45.079 18.885 43.971 18.232 42.748 17.315 C 42.6 17.194 42.475 17.134 42.373 17.134 C 42.188 17.134 42.095 17.296 42.095 17.62 L 42.095 18.941 C 42.095 19.08 42.053 19.191 41.97 19.274 C 41.887 19.358 41.775 19.4 41.636 19.4 L 40.566 19.4 C 40.427 19.4 40.315 19.358 40.232 19.274 C 40.149 19.191 40.107 19.08 40.107 18.941 Z M 50.141 18.927 L 50.141 13.617 C 50.141 13.478 50.099 13.46 50.016 13.562 L 49.765 13.881 C 49.682 13.983 49.58 13.974 49.46 13.854 C 49.247 13.641 48.922 13.413 48.487 13.172 C 48.357 13.098 48.28 13.008 48.257 12.901 C 48.234 12.795 48.274 12.686 48.375 12.575 C 49.608 11.027 50.516 9.206 51.1 7.112 C 51.137 6.973 51.206 6.871 51.308 6.806 C 51.41 6.741 51.531 6.728 51.67 6.765 L 52.698 7.015 C 52.828 7.052 52.923 7.119 52.983 7.216 C 53.044 7.313 53.037 7.492 52.962 7.751 C 52.814 8.354 52.536 9.058 52.128 9.864 C 52.101 9.92 52.087 9.985 52.087 10.059 L 52.087 11.046 C 52.087 11.287 52.126 11.407 52.205 11.407 C 52.284 11.407 52.365 11.314 52.448 11.129 C 52.958 10.156 53.366 9.035 53.671 7.765 C 53.699 7.626 53.764 7.522 53.866 7.453 C 53.968 7.383 54.088 7.367 54.227 7.404 L 55.395 7.668 C 55.608 7.705 55.696 7.84 55.659 8.071 C 55.65 8.127 55.64 8.183 55.631 8.238 C 55.622 8.293 55.608 8.349 55.59 8.405 L 55.506 8.752 C 55.478 8.854 55.487 8.935 55.534 8.995 C 55.58 9.056 55.654 9.086 55.756 9.086 L 55.784 9.086 C 55.895 9.086 55.986 9.051 56.055 8.982 C 56.124 8.912 56.159 8.822 56.159 8.711 L 56.159 7.237 C 56.159 7.098 56.201 6.987 56.285 6.904 C 56.368 6.82 56.479 6.778 56.618 6.778 L 57.814 6.778 C 57.953 6.778 58.064 6.82 58.147 6.904 C 58.23 6.987 58.272 7.098 58.272 7.237 L 58.272 8.627 C 58.272 8.766 58.314 8.878 58.397 8.961 C 58.48 9.044 58.592 9.086 58.731 9.086 L 60.621 9.086 C 60.76 9.086 60.872 9.128 60.955 9.211 C 61.038 9.294 61.08 9.406 61.08 9.545 L 61.08 10.545 C 61.08 10.684 61.038 10.796 60.955 10.879 C 60.872 10.962 60.76 11.004 60.621 11.004 L 58.731 11.004 C 58.592 11.004 58.48 11.046 58.397 11.129 C 58.314 11.212 58.272 11.324 58.272 11.463 L 58.272 12.505 C 58.272 12.644 58.314 12.756 58.397 12.839 C 58.48 12.922 58.592 12.964 58.731 12.964 L 60.997 12.964 C 61.136 12.964 61.247 13.006 61.33 13.089 C 61.413 13.172 61.455 13.284 61.455 13.423 L 61.455 14.451 C 61.455 14.59 61.413 14.702 61.33 14.785 C 61.247 14.868 61.136 14.91 60.997 14.91 L 58.731 14.91 C 58.592 14.91 58.48 14.952 58.397 15.035 C 58.314 15.118 58.272 15.23 58.272 15.369 L 58.272 18.913 C 58.272 19.052 58.23 19.164 58.147 19.247 C 58.064 19.33 57.953 19.372 57.814 19.372 L 56.618 19.372 C 56.479 19.372 56.368 19.33 56.285 19.247 C 56.201 19.164 56.159 19.052 56.159 18.913 L 56.159 15.369 C 56.159 15.23 56.117 15.118 56.034 15.035 C 55.951 14.952 55.84 14.91 55.701 14.91 L 53.004 14.91 C 52.865 14.91 52.754 14.868 52.671 14.785 C 52.587 14.702 52.545 14.59 52.545 14.451 L 52.545 13.423 C 52.545 13.284 52.587 13.172 52.671 13.089 C 52.754 13.006 52.865 12.964 53.004 12.964 L 55.701 12.964 C 55.84 12.964 55.951 12.922 56.034 12.839 C 56.117 12.756 56.159 12.644 56.159 12.505 L 56.159 11.463 C 56.159 11.324 56.117 11.212 56.034 11.129 C 55.951 11.046 55.84 11.004 55.701 11.004 L 55.047 11.004 C 54.844 11.004 54.705 11.097 54.63 11.282 C 54.482 11.653 54.306 12.005 54.102 12.338 C 54.009 12.487 53.907 12.561 53.796 12.561 C 53.685 12.561 53.588 12.54 53.505 12.498 C 53.421 12.457 53.337 12.417 53.254 12.38 C 53.171 12.343 53.071 12.297 52.956 12.241 C 52.84 12.186 52.71 12.137 52.566 12.095 C 52.423 12.054 52.307 12.065 52.219 12.13 C 52.131 12.195 52.087 12.301 52.087 12.45 L 52.087 18.927 C 52.087 19.066 52.045 19.177 51.962 19.261 C 51.879 19.344 51.767 19.386 51.628 19.386 L 50.599 19.386 C 50.46 19.386 50.349 19.344 50.266 19.261 C 50.183 19.177 50.141 19.066 50.141 18.927 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;" transform="matrix(1, 0, 0, 1, 0, 1.4210854715202004e-14)"/>
        </svg>
    }
}

/// 【ハーモニー】アイコン
#[component]
fn IconHarmony() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 76 26" style="vertical-align: middle; position: relative; top: -1px;" title="【ハーモニー】">
            <rect width="73.159" height="24" style="stroke: rgb(255, 255, 255); stroke-width: 1.115;" rx="12" ry="12" y="1" x="1.42"></rect>
            <path d="M 12.441 11.041 Q 12.441 10.816 12.691 10.641 L 13.441 10.141 Q 13.566 10.054 13.735 10.054 Q 13.904 10.054 14.041 10.179 Q 15.266 11.379 16.216 12.966 Q 16.804 13.941 16.804 14.241 Q 16.804 14.304 16.779 14.341 Q 16.729 14.516 16.541 14.616 L 16.016 14.879 Q 15.791 14.991 15.585 15.122 Q 15.379 15.254 15.191 15.254 Q 14.954 15.254 14.804 14.929 Q 13.829 12.741 12.604 11.391 Q 12.441 11.216 12.441 11.041 Z M 8.116 15.491 Q 7.966 15.604 7.785 15.604 Q 7.604 15.604 7.416 15.416 Q 6.991 14.991 6.741 14.816 Q 6.429 14.604 6.429 14.391 Q 6.429 14.179 6.641 14.016 Q 7.929 12.979 8.704 11.441 Q 8.941 10.966 9.104 10.429 Q 9.166 10.216 9.341 10.116 Q 9.441 10.054 9.541 10.054 Q 9.641 10.054 9.729 10.091 L 10.691 10.416 Q 10.891 10.479 10.979 10.629 Q 11.029 10.729 11.029 10.816 Q 11.029 10.904 11.004 10.979 Q 10.629 12.279 9.891 13.447 Q 9.154 14.616 8.116 15.491 Z M 28.816 13.341 Q 28.816 13.491 28.753 13.579 Q 28.666 13.704 28.478 13.704 L 27.903 13.679 Q 26.828 13.641 25.066 13.641 L 23.391 13.641 Q 20.616 13.641 19.741 13.716 Q 19.716 13.716 19.703 13.716 Q 19.528 13.716 19.441 13.591 Q 19.378 13.504 19.378 13.366 L 19.378 13.091 L 19.366 12.441 L 19.366 12.179 Q 19.366 12.154 19.366 12.141 Q 19.366 11.991 19.453 11.897 Q 19.541 11.804 19.691 11.804 L 20.153 11.816 Q 20.678 11.841 21.453 11.841 L 23.116 11.854 L 23.566 11.854 L 24.453 11.866 L 24.903 11.866 Q 26.803 11.866 27.941 11.829 L 28.491 11.816 Q 28.628 11.816 28.722 11.904 Q 28.816 11.991 28.816 12.141 Q 28.816 12.154 28.816 12.179 Z M 33.703 10.829 L 33.44 10.841 Q 33.278 10.841 33.14 10.71 Q 33.003 10.579 33.003 10.341 L 33.003 9.554 Q 33.003 9.316 33.134 9.191 Q 33.265 9.066 33.453 9.066 Q 33.49 9.066 33.54 9.066 Q 33.99 9.104 35.103 9.104 L 36.915 9.104 Q 38.153 9.104 39.615 9.054 Q 39.628 9.041 39.653 9.041 Q 39.815 9.041 39.928 9.154 Q 40.04 9.266 40.04 9.454 L 40.04 10.541 Q 40.04 10.666 39.99 10.741 Q 39.915 10.841 39.765 10.841 L 38.978 10.804 Q 38.815 10.791 38.615 10.791 L 37.29 10.791 Q 37.165 10.791 37.103 10.86 Q 37.04 10.929 37.04 11.054 L 37.04 11.554 Q 37.04 11.679 37.103 11.747 Q 37.165 11.816 37.29 11.816 Q 39.34 11.816 40.803 11.766 L 40.803 11.754 Q 41.015 11.754 41.159 11.891 Q 41.303 12.029 41.303 12.241 L 41.303 13.054 Q 41.303 13.291 41.171 13.416 Q 41.04 13.541 40.853 13.541 L 40.328 13.529 L 39.015 13.504 Q 38.665 13.491 38.24 13.491 L 37.29 13.491 Q 37.165 13.491 37.103 13.56 Q 37.04 13.629 37.04 13.754 L 37.04 14.641 Q 37.04 14.854 37.128 14.904 Q 37.24 14.991 37.703 14.991 Q 38.628 14.991 40.04 14.891 Q 40.065 14.879 40.103 14.879 Q 40.24 14.879 40.296 14.96 Q 40.353 15.041 40.353 15.141 Q 40.353 15.204 40.353 15.229 Q 40.278 15.516 40.253 15.822 Q 40.228 16.129 40.221 16.197 Q 40.215 16.266 40.215 16.316 Q 40.215 16.466 40.121 16.579 Q 40.028 16.691 39.853 16.716 Q 39.765 16.729 39.678 16.729 L 38.665 16.791 L 37.803 16.816 L 37.078 16.829 Q 36.165 16.829 35.796 16.641 Q 35.428 16.454 35.246 16.172 Q 35.065 15.891 35.065 15.416 L 35.065 13.766 Q 35.065 13.641 34.996 13.572 Q 34.928 13.504 34.803 13.504 Q 33.553 13.504 32.265 13.554 Q 32.253 13.554 32.228 13.554 Q 32.028 13.554 31.89 13.422 Q 31.753 13.291 31.753 13.066 L 31.753 12.254 Q 31.753 12.029 31.89 11.897 Q 32.028 11.766 32.228 11.766 Q 32.253 11.766 32.265 11.766 Q 33.553 11.816 34.803 11.816 Q 34.928 11.816 34.996 11.747 Q 35.065 11.679 35.065 11.554 L 35.065 11.066 Q 35.065 10.941 34.996 10.872 Q 34.928 10.804 34.803 10.804 L 33.94 10.816 Q 33.803 10.829 33.703 10.829 Z M 46.402 11.579 L 46.14 11.591 Q 45.965 11.591 45.833 11.46 Q 45.702 11.329 45.702 11.104 L 45.702 10.104 Q 45.702 9.904 45.79 9.779 Q 45.915 9.616 46.177 9.616 Q 46.202 9.616 46.227 9.616 Q 46.79 9.654 47.752 9.654 L 49.79 9.654 Q 50.577 9.654 50.852 9.641 L 50.865 9.641 Q 51.452 9.629 51.746 9.616 Q 52.04 9.604 52.052 9.604 Q 52.202 9.604 52.302 9.697 Q 52.402 9.791 52.402 9.966 L 52.402 11.229 Q 52.402 11.404 52.308 11.497 Q 52.215 11.591 52.077 11.591 L 51.377 11.554 Q 51.165 11.554 50.902 11.541 L 47.94 11.541 Q 47.565 11.554 47.24 11.554 L 46.415 11.579 Z M 48.027 15.479 Q 46.827 15.479 46.502 15.491 L 45.365 15.516 L 44.952 15.529 Q 44.777 15.529 44.646 15.404 Q 44.515 15.279 44.515 15.079 L 44.515 14.029 Q 44.515 13.804 44.652 13.672 Q 44.79 13.541 44.99 13.541 Q 45.015 13.541 45.027 13.541 Q 45.74 13.591 47.065 13.591 L 49.302 13.591 Q 50.952 13.591 51.977 13.554 L 53.115 13.529 Q 53.302 13.529 53.433 13.66 Q 53.565 13.791 53.565 14.004 L 53.565 15.029 Q 53.565 15.229 53.465 15.354 Q 53.34 15.516 53.09 15.516 Q 52.215 15.491 51.958 15.491 Q 51.702 15.491 51.302 15.479 Z M 66.314 13.341 Q 66.314 13.491 66.252 13.579 Q 66.164 13.704 65.977 13.704 L 65.402 13.679 Q 64.327 13.641 62.564 13.641 L 60.889 13.641 Q 58.114 13.641 57.239 13.716 Q 57.214 13.716 57.202 13.716 Q 57.027 13.716 56.939 13.591 Q 56.877 13.504 56.877 13.366 L 56.877 13.091 L 56.864 12.441 L 56.864 12.179 Q 56.864 12.154 56.864 12.141 Q 56.864 11.991 56.952 11.897 Q 57.039 11.804 57.189 11.804 L 57.652 11.816 Q 58.177 11.841 58.952 11.841 L 60.614 11.854 L 61.064 11.854 L 61.952 11.866 L 62.402 11.866 Q 64.302 11.866 65.439 11.829 L 65.989 11.816 Q 66.127 11.816 66.221 11.904 Q 66.314 11.991 66.314 12.141 Q 66.314 12.154 66.314 12.179 Z" transform="matrix(1.044216, 0, 0, 1.505497, -0.208577, -6.290022)" style="fill: rgb(255, 255, 255); stroke-width: 0.447px; text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【ライズ】アイコン
#[component]
fn IconRise() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 76 26" style="vertical-align: middle; position: relative; top: -1px;" title="【ライズ】">
            <rect width="65.615" height="24" style="stroke: rgb(255, 255, 255);" rx="12" ry="12" y="1" x="1.192"></rect>
            <path d="M 13.766 8.078 L 14.091 8.066 Q 14.266 8.066 14.404 8.191 Q 14.541 8.316 14.541 8.553 L 14.541 9.391 Q 14.541 9.628 14.391 9.766 Q 14.241 9.903 14.066 9.903 Q 14.054 9.903 14.041 9.891 Q 13.579 9.866 12.916 9.866 L 10.554 9.866 L 9.541 9.891 L 9.179 9.903 Q 8.966 9.903 8.866 9.766 Q 8.791 9.666 8.791 9.503 L 8.791 8.566 Q 8.791 8.328 8.935 8.203 Q 9.079 8.078 9.266 8.078 Q 9.279 8.078 9.304 8.078 Q 9.779 8.103 10.479 8.103 L 11.716 8.103 Z M 15.654 11.278 Q 15.654 11.353 15.629 11.441 Q 14.904 13.803 13.391 15.322 Q 11.879 16.841 9.554 17.666 Q 9.479 17.691 9.391 17.691 Q 9.166 17.691 9.054 17.466 L 8.954 17.228 L 8.791 16.953 Q 8.616 16.628 8.479 16.466 Q 8.391 16.341 8.391 16.241 Q 8.391 16.053 8.641 15.991 Q 11.704 15.028 13.166 12.666 Q 13.241 12.553 13.241 12.466 Q 13.241 12.428 13.229 12.403 Q 13.179 12.328 13.016 12.328 Q 13.004 12.328 9.441 12.491 Q 8.816 12.528 8.535 12.553 Q 8.254 12.578 8.185 12.578 Q 8.116 12.578 8.06 12.585 Q 8.004 12.591 7.979 12.591 Q 7.854 12.591 7.741 12.491 Q 7.629 12.391 7.604 12.216 Q 7.541 11.116 7.541 11.116 Q 7.541 10.928 7.66 10.803 Q 7.779 10.678 7.991 10.678 Q 8.004 10.678 8.029 10.678 L 8.491 10.678 L 8.491 10.678 Q 8.754 10.691 9.054 10.691 Q 9.229 10.691 11.066 10.641 Q 13.504 10.578 14.529 10.466 Q 14.716 10.466 14.829 10.541 L 15.416 10.891 Q 15.654 11.028 15.654 11.278 Z M 23.577 16.841 L 23.577 13.328 Q 23.577 13.166 23.539 13.091 Q 23.502 13.016 23.414 13.016 Q 23.327 13.016 23.177 13.116 Q 21.939 13.891 20.764 14.403 Q 20.664 14.453 20.577 14.453 Q 20.352 14.453 20.227 14.228 Q 19.802 13.603 19.658 13.46 Q 19.514 13.316 19.464 13.253 Q 19.364 13.128 19.364 13.016 Q 19.364 12.853 19.577 12.766 Q 21.352 12.116 23.164 10.853 Q 25.102 9.516 26.189 8.103 Q 26.352 7.903 26.539 7.903 Q 26.727 7.903 26.864 7.991 L 27.677 8.553 Q 27.902 8.691 27.902 8.928 Q 27.902 9.091 27.789 9.228 Q 26.927 10.303 25.652 11.353 Q 25.552 11.428 25.552 11.541 L 25.552 16.841 Q 25.552 17.066 25.414 17.197 Q 25.277 17.328 25.064 17.328 L 24.064 17.328 Q 23.852 17.328 23.714 17.197 Q 23.577 17.066 23.577 16.841 Z M 40.701 7.241 L 40.901 7.103 Q 41.013 7.003 41.176 7.003 Q 41.338 7.003 41.438 7.128 Q 41.563 7.266 41.638 7.341 L 42.063 7.853 Q 42.326 8.153 42.326 8.316 Q 42.326 8.353 42.313 8.378 Q 42.288 8.541 42.151 8.641 L 41.938 8.816 Q 41.776 8.916 41.576 8.916 Q 41.376 8.916 41.213 8.678 Q 40.988 8.341 40.651 7.978 Q 40.488 7.803 40.488 7.61 Q 40.488 7.416 40.701 7.241 Z M 40.826 9.653 Q 40.676 9.766 40.488 9.766 Q 40.288 9.766 40.151 9.578 Q 39.876 9.191 39.751 9.053 L 39.551 8.816 Q 39.401 8.641 39.401 8.466 Q 39.401 8.253 39.613 8.091 L 39.801 7.953 Q 39.926 7.853 40.082 7.853 Q 40.238 7.853 40.351 7.991 L 40.551 8.191 Q 40.613 8.266 40.651 8.303 L 40.851 8.566 Q 40.976 8.666 41.101 8.866 Q 41.201 9.028 41.201 9.191 Q 41.201 9.353 41.063 9.478 Z M 37.263 10.841 Q 37.263 10.716 37.063 10.716 Q 37.038 10.716 35.32 10.841 Q 33.601 10.966 33.576 10.966 Q 33.401 10.966 33.27 10.853 Q 33.138 10.741 33.113 10.541 Q 33.001 9.516 33.001 9.466 Q 33.001 9.228 33.163 9.103 Q 33.288 9.016 33.488 9.003 L 33.488 9.003 Q 35.063 9.003 36.032 8.935 Q 37.001 8.866 37.313 8.847 Q 37.626 8.828 38.032 8.797 Q 38.438 8.766 38.545 8.747 Q 38.651 8.728 38.701 8.728 Q 38.851 8.728 38.963 8.803 L 39.726 9.291 Q 39.851 9.378 39.913 9.528 Q 39.938 9.603 39.938 9.685 Q 39.938 9.766 39.913 9.853 Q 39.351 11.291 38.588 12.341 Q 38.526 12.466 38.513 12.516 Q 38.513 12.616 38.626 12.703 Q 39.751 13.603 40.863 14.728 L 41.038 14.916 Q 41.126 15.003 41.226 15.122 Q 41.326 15.241 41.326 15.391 Q 41.326 15.616 41.126 15.766 Q 40.788 16.028 40.613 16.203 Q 40.613 16.203 40.426 16.366 Q 40.363 16.453 40.232 16.541 Q 40.101 16.628 39.926 16.628 Q 39.751 16.628 39.601 16.441 Q 39.263 16.053 39.113 15.853 Q 38.713 15.403 38.301 14.966 Q 37.888 14.528 37.413 14.141 Q 37.351 14.078 37.251 14.078 Q 37.151 14.078 37.076 14.153 Q 35.451 15.778 33.388 16.953 Q 33.288 17.016 33.101 17.016 Q 32.913 17.016 32.751 16.791 L 32.451 16.341 Q 32.376 16.241 32.307 16.153 Q 32.238 16.066 32.163 15.978 Q 32.013 15.816 32.013 15.653 Q 32.013 15.441 32.288 15.303 Q 33.726 14.603 35.007 13.491 Q 36.288 12.378 37.188 11.028 Q 37.263 10.903 37.263 10.841 Z" transform="matrix(1.344133, 0, 0, 1.605011, 1.619876, -7.389834)" style="fill: rgb(255, 255, 255); stroke-width: 0.447px; text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《ライズアイコン》
#[component]
fn RiseIcon() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 64 24" style="vertical-align: middle; position: relative; top: -1px;" title="《ライズアイコン》">
          <defs>
                <filter id="outline-filter-rise0" color-interpolation-filters="sRGB" x="-50%" y="-50%" width="200%" height="200%">
                    <feMorphology in="SourceAlpha" result="dilated" operator="dilate" radius="1"></feMorphology>
                    <feFlood flood-color="#fff" result="flood"></feFlood>
                    <feComposite in="flood" in2="dilated" operator="in" result="outline"></feComposite>
                    <feMerge>
                        <feMergeNode in="outline"></feMergeNode>
                        <feMergeNode in="SourceGraphic"></feMergeNode>
                    </feMerge>
                </filter>
                <filter id="inner-shadow-filter-rise0" color-interpolation-filters="sRGB" x="-50%" y="-50%" width="200%" height="200%">
                    <feOffset dx="0" dy="0"></feOffset>
                    <feGaussianBlur stdDeviation="3"></feGaussianBlur>
                    <feComposite operator="out" in="SourceGraphic"></feComposite>
                    <feComponentTransfer result="choke">
                        <feFuncA type="linear" slope="0.58"></feFuncA>
                    </feComponentTransfer>
                    <feFlood flood-color="#f00" result="color"></feFlood>
                    <feComposite operator="in" in="color" in2="choke" result="shadow"></feComposite>
                    <feComposite operator="over" in="shadow" in2="SourceGraphic"></feComposite>
                </filter>
            </defs>
            <path d="M 3.526 21.707 L 3.526 12.317 L 8.639 12.317 L 8.639 6.907 L 14.653 6.907 L 14.653 2.292 L 60.469 2.292 L 48.945 11.997 L 60.474 21.707 L 3.526 21.707 Z" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0); filter: url(#outline-filter-rise0) url(#inner-shadow-filter-rise0);"></path>
            <path d="M 23.226 7.117 L 23.598 7.102 C 23.732 7.102 23.851 7.15 23.955 7.245 C 24.061 7.34 24.113 7.479 24.113 7.66 L 24.113 8.618 C 24.113 8.799 24.056 8.942 23.941 9.047 C 23.827 9.152 23.703 9.205 23.569 9.205 C 23.56 9.205 23.551 9.2 23.541 9.19 C 23.189 9.171 22.76 9.162 22.254 9.162 L 19.551 9.162 L 18.393 9.19 L 17.978 9.205 C 17.816 9.205 17.697 9.152 17.621 9.047 C 17.564 8.971 17.535 8.871 17.535 8.747 L 17.535 7.674 C 17.535 7.493 17.59 7.355 17.699 7.26 C 17.809 7.165 17.936 7.117 18.078 7.117 C 18.088 7.117 18.102 7.117 18.121 7.117 C 18.483 7.136 18.931 7.145 19.465 7.145 L 20.881 7.145 L 23.226 7.117 Z M 25.385 10.778 C 25.385 10.835 25.376 10.896 25.357 10.963 C 24.804 12.765 23.951 14.245 22.797 15.404 C 21.644 16.562 20.181 17.456 18.407 18.085 C 18.35 18.104 18.288 18.113 18.221 18.113 C 18.05 18.113 17.921 18.027 17.835 17.856 L 17.721 17.584 L 17.535 17.27 C 17.402 17.022 17.283 16.836 17.177 16.712 C 17.111 16.617 17.077 16.531 17.077 16.455 C 17.077 16.312 17.173 16.216 17.363 16.169 C 19.699 15.435 21.425 14.167 22.54 12.365 C 22.598 12.279 22.626 12.203 22.626 12.136 C 22.626 12.107 22.621 12.084 22.611 12.065 C 22.573 12.008 22.492 11.979 22.368 11.979 C 22.359 11.979 20.996 12.041 18.278 12.165 C 17.802 12.194 17.456 12.217 17.242 12.236 C 17.028 12.255 16.894 12.265 16.841 12.265 C 16.789 12.265 16.742 12.267 16.698 12.272 C 16.656 12.277 16.625 12.279 16.605 12.279 C 16.51 12.279 16.42 12.241 16.334 12.165 C 16.248 12.088 16.196 11.983 16.176 11.85 C 16.129 11.011 16.105 10.592 16.105 10.592 C 16.105 10.449 16.151 10.329 16.241 10.234 C 16.331 10.139 16.458 10.091 16.62 10.091 C 16.63 10.091 16.644 10.091 16.662 10.091 L 17.192 10.091 C 17.392 10.1 17.607 10.105 17.835 10.105 C 17.969 10.105 18.736 10.086 20.137 10.048 C 21.997 10.001 23.317 9.934 24.098 9.848 C 24.242 9.848 24.356 9.877 24.442 9.934 L 25.114 10.334 C 25.295 10.439 25.385 10.587 25.385 10.778 Z M 30.446 17.141 L 30.446 13.123 C 30.446 12.999 30.432 12.908 30.403 12.851 C 30.375 12.794 30.327 12.765 30.26 12.765 C 30.194 12.765 30.103 12.803 29.989 12.88 C 29.045 13.471 28.125 13.962 27.229 14.353 C 27.153 14.391 27.081 14.41 27.014 14.41 C 26.843 14.41 26.71 14.324 26.614 14.152 C 26.29 13.675 26.073 13.382 25.963 13.273 C 25.854 13.163 25.78 13.084 25.741 13.037 C 25.665 12.942 25.627 12.851 25.627 12.765 C 25.627 12.641 25.708 12.546 25.87 12.479 C 27.224 11.984 28.592 11.254 29.974 10.291 C 31.452 9.271 32.606 8.222 33.435 7.145 C 33.559 6.993 33.693 6.917 33.835 6.917 C 33.979 6.917 34.103 6.95 34.207 7.017 L 35.137 7.66 C 35.309 7.765 35.394 7.908 35.394 8.089 C 35.394 8.213 35.351 8.327 35.265 8.432 C 34.608 9.252 33.793 10.062 32.82 10.863 C 32.744 10.92 32.706 10.992 32.706 11.078 L 32.706 17.141 C 32.706 17.312 32.654 17.448 32.548 17.549 C 32.444 17.649 32.31 17.699 32.148 17.699 L 31.004 17.699 C 30.842 17.699 30.709 17.649 30.603 17.549 C 30.499 17.448 30.446 17.312 30.446 17.141 Z M 46.035 6.159 L 46.264 6.001 C 46.35 5.925 46.455 5.887 46.578 5.887 C 46.702 5.887 46.803 5.935 46.879 6.03 C 46.975 6.135 47.051 6.216 47.108 6.273 L 47.594 6.859 C 47.794 7.088 47.894 7.265 47.894 7.388 C 47.894 7.417 47.89 7.441 47.88 7.46 C 47.861 7.584 47.799 7.684 47.694 7.76 L 47.451 7.96 C 47.327 8.037 47.189 8.075 47.036 8.075 C 46.884 8.075 46.745 7.984 46.621 7.803 C 46.45 7.546 46.236 7.279 45.978 7.002 C 45.854 6.869 45.792 6.728 45.792 6.58 C 45.792 6.433 45.873 6.292 46.035 6.159 Z M 46.178 8.919 C 46.064 9.004 45.935 9.047 45.792 9.047 C 45.64 9.047 45.511 8.976 45.406 8.833 C 45.196 8.537 45.044 8.337 44.948 8.232 L 44.719 7.96 C 44.605 7.827 44.548 7.693 44.548 7.56 C 44.548 7.398 44.629 7.255 44.791 7.131 L 45.005 6.974 C 45.101 6.897 45.208 6.859 45.327 6.859 C 45.447 6.859 45.549 6.912 45.635 7.017 L 45.863 7.245 C 45.911 7.302 45.95 7.345 45.978 7.374 L 46.207 7.674 C 46.303 7.751 46.398 7.865 46.493 8.018 C 46.569 8.142 46.607 8.266 46.607 8.389 C 46.607 8.513 46.555 8.623 46.45 8.718 L 46.178 8.919 Z M 42.103 10.277 C 42.103 10.182 42.027 10.134 41.874 10.134 C 41.855 10.134 41.19 10.182 39.879 10.277 C 38.569 10.372 37.904 10.42 37.884 10.42 C 37.751 10.42 37.634 10.377 37.534 10.291 C 37.434 10.206 37.375 10.087 37.355 9.934 C 37.269 9.152 37.226 8.742 37.226 8.704 C 37.226 8.523 37.288 8.384 37.412 8.289 C 37.508 8.222 37.632 8.184 37.784 8.175 C 38.986 8.175 39.956 8.149 40.694 8.096 C 41.433 8.044 41.922 8.011 42.16 7.996 C 42.398 7.982 42.672 7.963 42.982 7.939 C 43.292 7.915 43.488 7.896 43.568 7.882 C 43.65 7.867 43.709 7.86 43.747 7.86 C 43.862 7.86 43.962 7.889 44.047 7.946 L 44.92 8.504 C 45.016 8.571 45.087 8.661 45.134 8.776 C 45.154 8.833 45.163 8.892 45.163 8.954 C 45.163 9.016 45.154 9.08 45.134 9.147 C 44.706 10.244 44.2 11.192 43.618 11.993 C 43.571 12.088 43.543 12.155 43.533 12.193 C 43.533 12.27 43.576 12.341 43.661 12.408 C 44.519 13.094 45.373 13.866 46.221 14.724 L 46.421 14.939 C 46.488 15.006 46.56 15.084 46.636 15.175 C 46.712 15.266 46.75 15.368 46.75 15.482 C 46.75 15.654 46.674 15.797 46.521 15.911 C 46.264 16.112 46.069 16.279 45.935 16.412 C 45.935 16.412 45.864 16.474 45.72 16.598 C 45.673 16.665 45.599 16.731 45.499 16.798 C 45.399 16.865 45.282 16.898 45.148 16.898 C 45.015 16.898 44.891 16.826 44.777 16.683 C 44.52 16.388 44.334 16.164 44.219 16.011 C 43.914 15.668 43.604 15.33 43.289 14.996 C 42.975 14.663 42.637 14.348 42.274 14.052 C 42.227 14.005 42.165 13.981 42.088 13.981 C 42.012 13.981 41.946 14.01 41.888 14.067 C 40.649 15.306 39.243 16.374 37.67 17.27 C 37.594 17.317 37.484 17.341 37.341 17.341 C 37.198 17.341 37.064 17.255 36.94 17.084 L 36.597 16.569 C 36.54 16.493 36.485 16.422 36.433 16.355 C 36.381 16.288 36.326 16.221 36.268 16.154 C 36.154 16.03 36.097 15.906 36.097 15.783 C 36.097 15.62 36.202 15.487 36.411 15.382 C 37.508 14.848 38.545 14.157 39.521 13.309 C 40.499 12.46 41.331 11.521 42.017 10.492 C 42.075 10.397 42.103 10.325 42.103 10.277 Z" style="text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【】アイコン
#[component]
fn IconDuty() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 76 26" style="vertical-align: middle; position: relative; top: -1px;" title="【】">
            <rect width="65.615" height="24" style="stroke: rgb(255, 255, 255);" rx="12" ry="12" y="1" x="1.192"></rect>
        </svg>
    }
}

/// 《白》アイコン
#[component]
fn InlineWhite() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《白》">
            <g class="icon_white" transform="matrix(1, 0, 0, 1, -21.594004, 46.167001)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="37.594" cy="-30.167" rx="11.995" ry="11.995"></ellipse>
                <path d="M 37.594 -20.207 L 33.534 -22.154 L 31.838 -36.905 L 37.594 -40.128 L 43.54 -36.799 L 41.868 -22.256 L 37.594 -20.207 Z M 30.039 -23.829 L 28.944 -35.285 L 30.302 -36.045 L 31.624 -23.069 L 30.039 -23.829 Z M 46.243 -35.285 L 45.148 -23.829 L 43.776 -23.171 L 45.077 -35.938 L 46.243 -35.285 Z" style="fill: url(#gradient-1); stroke: rgb(254, 255, 252); stroke-width: 0.2px;"></path>
            </g>
        </svg>
    }
}

#[component]
fn WhiteZero() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《白×0》">
            <g class="icon_white" transform="matrix(1, 0, 0, 1, -21.594004, 46.167001)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="37.594" cy="-30.167" rx="11.995" ry="11.995"></ellipse>
                <path d="M 37.594 -20.207 L 33.534 -22.154 L 31.838 -36.905 L 37.594 -40.128 L 43.54 -36.799 L 41.868 -22.256 L 37.594 -20.207 Z M 30.039 -23.829 L 28.944 -35.285 L 30.302 -36.045 L 31.624 -23.069 L 30.039 -23.829 Z M 46.243 -35.285 L 45.148 -23.829 L 43.776 -23.171 L 45.077 -35.938 L 46.243 -35.285 Z" style="fill: url(#gradient-1); stroke: rgb(254, 255, 252); stroke-width: 0.2px;"></path>
            </g>
            <path d="M 26.315 28.541 Q 25.083 31.509 21.443 31.509 Q 19.147 31.509 17.887 30.347 Q 16.627 29.185 16.123 26.959 Q 15.619 24.733 15.619 21.429 Q 15.619 18.573 15.899 16.977 Q 16.487 13.701 17.859 12.511 Q 19.231 11.321 21.541 11.321 Q 23.851 11.321 25.083 12.483 Q 26.315 13.645 26.833 15.857 Q 27.351 18.069 27.351 21.429 Q 27.351 24.313 27.071 25.867 Q 26.791 27.421 26.315 28.541 Z M 21.499 28.317 Q 23.095 28.317 23.571 26.637 Q 24.019 25.041 24.019 21.429 Q 24.019 16.557 23.207 15.325 Q 22.647 14.513 21.499 14.513 Q 19.847 14.513 19.427 16.221 Q 19.287 16.697 19.119 17.719 Q 18.951 18.741 18.951 21.429 Q 18.951 26.189 19.819 27.477 Q 20.379 28.317 21.499 28.317 Z" transform="matrix(1, 0, 0, 0.700219, 1.55639, 7.806056)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《青》アイコン
#[component]
fn InlineBlue() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《青》">
            <g class="icon_blue" transform="matrix(1, 0, 0, 1, -51.335995, 46.160001)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="67.336" cy="-30.16" rx="11.995" ry="11.995"></ellipse>
                <path d="M 77.115 -30.185 C 77.115 -26.274 74.819 -22.899 71.501 -21.335 L 70.135 -27.115 C 70.94 -27.865 71.443 -28.935 71.444 -30.122 C 71.443 -32.045 70.122 -33.661 68.337 -34.108 L 68.336 -39.913 C 73.267 -39.413 77.115 -35.248 77.115 -30.185 Z M 67.336 -20.406 C 66.456 -20.406 65.602 -20.522 64.791 -20.741 L 66.084 -26.208 C 66.479 -26.082 66.899 -26.014 67.336 -26.014 C 67.773 -26.013 68.193 -26.081 68.587 -26.208 L 69.881 -20.74 C 69.069 -20.522 68.216 -20.406 67.336 -20.406 Z M 57.557 -30.185 C 57.557 -35.248 61.405 -39.413 66.336 -39.914 L 66.336 -34.108 C 64.55 -33.661 63.228 -32.046 63.228 -30.122 C 63.228 -28.935 63.732 -27.865 64.537 -27.115 L 63.17 -21.335 C 59.853 -22.9 57.557 -26.274 57.557 -30.185 Z" style="fill: url(#gradient-0); stroke: rgb(19, 235, 247); stroke-width: 0.2px;"></path>
            </g>
        </svg>
    }
}
#[component]
fn BlueZero() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《青×0》">
            <g class="icon_blue" transform="matrix(1, 0, 0, 1, -51.335995, 46.160001)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="67.336" cy="-30.16" rx="11.995" ry="11.995"></ellipse>
                <path d="M 77.115 -30.185 C 77.115 -26.274 74.819 -22.899 71.501 -21.335 L 70.135 -27.115 C 70.94 -27.865 71.443 -28.935 71.444 -30.122 C 71.443 -32.045 70.122 -33.661 68.337 -34.108 L 68.336 -39.913 C 73.267 -39.413 77.115 -35.248 77.115 -30.185 Z M 67.336 -20.406 C 66.456 -20.406 65.602 -20.522 64.791 -20.741 L 66.084 -26.208 C 66.479 -26.082 66.899 -26.014 67.336 -26.014 C 67.773 -26.013 68.193 -26.081 68.587 -26.208 L 69.881 -20.74 C 69.069 -20.522 68.216 -20.406 67.336 -20.406 Z M 57.557 -30.185 C 57.557 -35.248 61.405 -39.413 66.336 -39.914 L 66.336 -34.108 C 64.55 -33.661 63.228 -32.046 63.228 -30.122 C 63.228 -28.935 63.732 -27.865 64.537 -27.115 L 63.17 -21.335 C 59.853 -22.9 57.557 -26.274 57.557 -30.185 Z" style="fill: url(#gradient-0); stroke: rgb(19, 235, 247); stroke-width: 0.2px;"></path>
            </g>
            <path d="M 26.315 28.541 Q 25.083 31.509 21.443 31.509 Q 19.147 31.509 17.887 30.347 Q 16.627 29.185 16.123 26.959 Q 15.619 24.733 15.619 21.429 Q 15.619 18.573 15.899 16.977 Q 16.487 13.701 17.859 12.511 Q 19.231 11.321 21.541 11.321 Q 23.851 11.321 25.083 12.483 Q 26.315 13.645 26.833 15.857 Q 27.351 18.069 27.351 21.429 Q 27.351 24.313 27.071 25.867 Q 26.791 27.421 26.315 28.541 Z M 21.499 28.317 Q 23.095 28.317 23.571 26.637 Q 24.019 25.041 24.019 21.429 Q 24.019 16.557 23.207 15.325 Q 22.647 14.513 21.499 14.513 Q 19.847 14.513 19.427 16.221 Q 19.287 16.697 19.119 17.719 Q 18.951 18.741 18.951 21.429 Q 18.951 26.189 19.819 27.477 Q 20.379 28.317 21.499 28.317 Z" transform="matrix(1, 0, 0, 0.700219, 1.55639, 7.806056)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《黒》アイコン
#[component]
fn InlineBlack() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《黒》">
            <g class="icon_black" transform="matrix(1, 0, 0, 1, -112.031999, 46.393002)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="128.032" cy="-30.393" rx="11.995" ry="11.995"></ellipse>
                <path d="M 128.702 -41.112 L 132.287 -34.762 L 138.775 -31.032 L 128.702 -31.032 L 128.702 -41.112 Z M 127.34 -31.042 L 117.267 -31.042 L 123.755 -34.762 L 127.34 -41.102 L 127.34 -31.042 Z M 128.724 -29.752 L 138.797 -29.752 L 132.309 -26.022 L 128.724 -19.672 L 128.724 -29.752 Z M 127.362 -19.682 L 123.777 -26.022 L 117.289 -29.742 L 127.362 -29.742 L 127.362 -19.682 Z" style="stroke-width: 0.2; fill: url(#gradient-6); stroke: url(#gradient-7);"></path>
            </g>
        </svg>
    }
}

#[component]
fn BlackZero() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《黒×0》">
            <g class="icon_black" transform="matrix(1, 0, 0, 1, -112.031999, 46.393002)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="128.032" cy="-30.393" rx="11.995" ry="11.995"></ellipse>
                <path d="M 128.702 -41.112 L 132.287 -34.762 L 138.775 -31.032 L 128.702 -31.032 L 128.702 -41.112 Z M 127.34 -31.042 L 117.267 -31.042 L 123.755 -34.762 L 127.34 -41.102 L 127.34 -31.042 Z M 128.724 -29.752 L 138.797 -29.752 L 132.309 -26.022 L 128.724 -19.672 L 128.724 -29.752 Z M 127.362 -19.682 L 123.777 -26.022 L 117.289 -29.742 L 127.362 -29.742 L 127.362 -19.682 Z" style="stroke-width: 0.2; fill: url(#gradient-6); stroke: url(#gradient-7);"></path>
            </g>
            <path d="M 26.315 28.541 Q 25.083 31.509 21.443 31.509 Q 19.147 31.509 17.887 30.347 Q 16.627 29.185 16.123 26.959 Q 15.619 24.733 15.619 21.429 Q 15.619 18.573 15.899 16.977 Q 16.487 13.701 17.859 12.511 Q 19.231 11.321 21.541 11.321 Q 23.851 11.321 25.083 12.483 Q 26.315 13.645 26.833 15.857 Q 27.351 18.069 27.351 21.429 Q 27.351 24.313 27.071 25.867 Q 26.791 27.421 26.315 28.541 Z M 21.499 28.317 Q 23.095 28.317 23.571 26.637 Q 24.019 25.041 24.019 21.429 Q 24.019 16.557 23.207 15.325 Q 22.647 14.513 21.499 14.513 Q 19.847 14.513 19.427 16.221 Q 19.287 16.697 19.119 17.719 Q 18.951 18.741 18.951 21.429 Q 18.951 26.189 19.819 27.477 Q 20.379 28.317 21.499 28.317 Z" transform="matrix(1, 0, 0, 0.700219, 1.55639, 7.806056)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}
/// 《赤》アイコン
#[component]
fn InlineRed() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《赤》">
            <g transform="matrix(1, 0, 0, 1, 5.113, 46.505002)" class="icon_red">
                <g>
                    <ellipse style="stroke: rgb(255, 255, 255);" cx="10.887" cy="-30.505" rx="11.995" ry="11.995"></ellipse>
                    <g transform="matrix(1, 0, 0, 1, 45.403001, -43.773873)">
                        <path d="M -35.211 2.922 L -35.211 23.677 L -44.49 9.792 L -37.69 11.634 Z M -30.921 11.634 L -24.125 9.792 L -33.4 23.677 L -33.4 2.922 Z" style="fill: url(#gradient-2); stroke-width: 0.2px; stroke: rgb(252, 224, 224);"></path>
                    </g>
                </g>
            </g>
        </svg>
    }
}

#[component]
fn RedZero() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《赤×0》">
            <g transform="matrix(1, 0, 0, 1, 5.113, 46.505002)" class="icon_red">
                <g>
                    <ellipse style="stroke: rgb(255, 255, 255);" cx="10.887" cy="-30.505" rx="11.995" ry="11.995"></ellipse>
                    <g transform="matrix(1, 0, 0, 1, 45.403001, -43.773873)">
                        <path d="M -35.211 2.922 L -35.211 23.677 L -44.49 9.792 L -37.69 11.634 Z M -30.921 11.634 L -24.125 9.792 L -33.4 23.677 L -33.4 2.922 Z" style="fill: url(#gradient-2); stroke-width: 0.2px; stroke: rgb(252, 224, 224);"></path>
                    </g>
                </g>
            </g>
            <path d="M 26.315 28.541 Q 25.083 31.509 21.443 31.509 Q 19.147 31.509 17.887 30.347 Q 16.627 29.185 16.123 26.959 Q 15.619 24.733 15.619 21.429 Q 15.619 18.573 15.899 16.977 Q 16.487 13.701 17.859 12.511 Q 19.231 11.321 21.541 11.321 Q 23.851 11.321 25.083 12.483 Q 26.315 13.645 26.833 15.857 Q 27.351 18.069 27.351 21.429 Q 27.351 24.313 27.071 25.867 Q 26.791 27.421 26.315 28.541 Z M 21.499 28.317 Q 23.095 28.317 23.571 26.637 Q 24.019 25.041 24.019 21.429 Q 24.019 16.557 23.207 15.325 Q 22.647 14.513 21.499 14.513 Q 19.847 14.513 19.427 16.221 Q 19.287 16.697 19.119 17.719 Q 18.951 18.741 18.951 21.429 Q 18.951 26.189 19.819 27.477 Q 20.379 28.317 21.499 28.317 Z" transform="matrix(1, 0, 0, 0.700219, 1.55639, 7.806056)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}
/// 《緑》アイコン
#[component]
fn InlineGreen() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《緑》】">
            <g class="icon_green" transform="matrix(1, 0, 0, 1, -80.701997, 45.929002)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="96.702" cy="-29.929" rx="11.995" ry="11.995"></ellipse>
                <path d="M 91.933 -37.634 L 93.657 -38.704 L 93.657 -22.806 L 88.247 -22.806 L 91.933 -37.634 Z M 96.701 -40.593 L 98.26 -39.626 L 98.26 -22.805 L 95.142 -22.806 L 95.142 -39.625 L 96.701 -40.593 Z M 101.471 -37.633 L 105.157 -22.805 L 99.745 -22.805 L 99.745 -38.704 L 101.471 -37.633 Z" style="fill: url(#gradient-3); stroke: rgb(186, 218, 85); stroke-width: 0.2px;"></path>
            </g>
        </svg>
    }
}

#[component]
fn GreenZero() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《緑×0》】">
            <g class="icon_green" transform="matrix(1, 0, 0, 1, -80.701997, 45.929002)">
                <ellipse style="stroke-width: 1; stroke: rgb(255, 255, 255);" cx="96.702" cy="-29.929" rx="11.995" ry="11.995"></ellipse>
                <path d="M 91.933 -37.634 L 93.657 -38.704 L 93.657 -22.806 L 88.247 -22.806 L 91.933 -37.634 Z M 96.701 -40.593 L 98.26 -39.626 L 98.26 -22.805 L 95.142 -22.806 L 95.142 -39.625 L 96.701 -40.593 Z M 101.471 -37.633 L 105.157 -22.805 L 99.745 -22.805 L 99.745 -38.704 L 101.471 -37.633 Z" style="fill: url(#gradient-3); stroke: rgb(186, 218, 85); stroke-width: 0.2px;"></path>
            </g>
            <path d="M 26.315 28.541 Q 25.083 31.509 21.443 31.509 Q 19.147 31.509 17.887 30.347 Q 16.627 29.185 16.123 26.959 Q 15.619 24.733 15.619 21.429 Q 15.619 18.573 15.899 16.977 Q 16.487 13.701 17.859 12.511 Q 19.231 11.321 21.541 11.321 Q 23.851 11.321 25.083 12.483 Q 26.315 13.645 26.833 15.857 Q 27.351 18.069 27.351 21.429 Q 27.351 24.313 27.071 25.867 Q 26.791 27.421 26.315 28.541 Z M 21.499 28.317 Q 23.095 28.317 23.571 26.637 Q 24.019 25.041 24.019 21.429 Q 24.019 16.557 23.207 15.325 Q 22.647 14.513 21.499 14.513 Q 19.847 14.513 19.427 16.221 Q 19.287 16.697 19.119 17.719 Q 18.951 18.741 18.951 21.429 Q 18.951 26.189 19.819 27.477 Q 20.379 28.317 21.499 28.317 Z" transform="matrix(1, 0, 0, 0.700219, 1.55639, 7.806056)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}
/// 《無》アイコン
#[component]
fn InlineColorless() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《無》">
            <ellipse style="stroke-width: 1; fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);" cx="16" cy="16" rx="11.995" ry="11.995"></ellipse>
            <rect x="0.755" y="46.135" width="12.816" height="12.816" style="stroke-width: 0.8; stroke: rgb(0, 0, 0); fill: rgb(210, 210, 210); transform-box: fill-box; transform-origin: 50% 50%;" transform="matrix(0.707107, 0.707107, -0.707107, 0.707107, 8.836999, -36.543032)"></rect>
        </svg>
    }
}
/// 《コインアイコン》アイコン
#[component]
fn InlineCoin() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 24 24" style="vertical-align: middle; position: relative; top: -1px;" title="《コインアイコン》">
            <circle style="fill: rgb(255, 255, 255);" cx="12" cy="12" r="11.571"></circle>
            <circle style="stroke-width: 1; stroke: rgb(0, 0, 0); fill: rgb(238, 202, 70);" cx="12" cy="12" r="8.614"></circle>
            <circle style="stroke-width: 1; stroke: rgb(0, 0, 0); fill: rgb(255, 226, 120);" cx="12" cy="12" r="6.004"></circle>
        </svg>
    }
}

#[component]
fn ColorlessZero() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="《無×0》">
            <ellipse style="stroke-width: 1; fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);" cx="16" cy="16" rx="11.995" ry="11.995"></ellipse>
            <rect x="0.755" y="46.135" width="12.816" height="12.816" style="stroke-width: 0.8; stroke: rgb(0, 0, 0); fill: rgb(210, 210, 210); transform-box: fill-box; transform-origin: 50% 50%;" transform="matrix(0.707107, 0.707107, -0.707107, 0.707107, 8.836999, -36.543032)"></rect>
            <path d="M 26.315 28.541 Q 25.083 31.509 21.443 31.509 Q 19.147 31.509 17.887 30.347 Q 16.627 29.185 16.123 26.959 Q 15.619 24.733 15.619 21.429 Q 15.619 18.573 15.899 16.977 Q 16.487 13.701 17.859 12.511 Q 19.231 11.321 21.541 11.321 Q 23.851 11.321 25.083 12.483 Q 26.315 13.645 26.833 15.857 Q 27.351 18.069 27.351 21.429 Q 27.351 24.313 27.071 25.867 Q 26.791 27.421 26.315 28.541 Z M 21.499 28.317 Q 23.095 28.317 23.571 26.637 Q 24.019 25.041 24.019 21.429 Q 24.019 16.557 23.207 15.325 Q 22.647 14.513 21.499 14.513 Q 19.847 14.513 19.427 16.221 Q 19.287 16.697 19.119 17.719 Q 18.951 18.741 18.951 21.429 Q 18.951 26.189 19.819 27.477 Q 20.379 28.317 21.499 28.317 Z" transform="matrix(1, 0, 0, 0.700219, 1.55639, 7.806056)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《ターン1》アイコン
#[component]
fn IconOnceTurn() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 50 24" style="vertical-align: middle; position: relative; top: -1px;" title="《ターン1回》">
            <path d="M 8.115 3.181 H 41.886 A 4.087 4.087 0 0 1 45.973 7.268 V 16.732 A 4.087 4.087 0 0 1 41.886 20.819 H 8.115 A 4.087 4.087 0 0 1 4.028 16.732 V 7.268 A 4.087 4.087 0 0 1 8.115 3.181 Z" style="stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255);"></path>
            <path d="M 11.208 11.077 Q 11.208 11.019 11.093 11.019 Q 11.082 11.019 11.059 11.019 Q 11.059 11.019 10.553 11.042 L 9.702 11.088 L 9.23 11.111 Q 9.092 11.134 9.046 11.215 Q 8.23 12.388 7.16 13.319 Q 7.011 13.423 6.85 13.423 Q 6.689 13.423 6.562 13.285 Q 6.16 12.848 5.941 12.687 L 5.941 12.687 Q 5.769 12.537 5.769 12.376 Q 5.769 12.215 5.941 12.077 Q 6.769 11.399 7.522 10.37 Q 8.276 9.34 8.644 8.305 Q 8.701 8.121 8.862 8.041 Q 8.943 7.995 9.035 7.995 Q 9.127 7.995 9.207 8.029 L 10.047 8.294 Q 10.219 8.351 10.288 8.501 Q 10.323 8.57 10.323 8.65 Q 10.323 8.731 10.3 8.823 Q 10.173 9.168 10.047 9.409 Q 10.024 9.513 10.035 9.536 Q 10.058 9.57 10.139 9.559 Q 10.921 9.524 11.191 9.519 Q 11.461 9.513 11.657 9.496 Q 11.852 9.478 11.99 9.473 Q 12.128 9.467 12.186 9.461 Q 12.243 9.455 12.289 9.455 Q 12.404 9.455 12.496 9.501 L 13.152 9.846 Q 13.405 9.973 13.405 10.203 Q 13.405 10.283 13.37 10.375 Q 12.922 11.721 12.243 12.813 Q 12.186 12.905 12.186 12.98 Q 12.186 13.055 12.278 13.135 Q 12.726 13.492 13.129 13.883 Q 13.232 13.998 13.232 14.13 Q 13.232 14.262 13.094 14.4 Q 13.037 14.446 12.991 14.492 Q 12.841 14.619 12.715 14.774 Q 12.588 14.929 12.513 15.01 Q 12.439 15.09 12.398 15.148 Q 12.358 15.205 12.301 15.286 Q 12.209 15.401 12.076 15.401 Q 11.944 15.401 11.841 15.263 Q 11.668 15.079 11.455 14.883 Q 11.243 14.688 11.162 14.607 Q 11.082 14.527 10.99 14.527 Q 10.898 14.527 10.817 14.607 Q 9.299 16.16 7.057 17.114 Q 6.965 17.16 6.873 17.16 Q 6.631 17.16 6.482 16.907 L 6.482 16.896 Q 6.298 16.493 6.022 16.137 Q 5.907 15.999 5.907 15.884 Q 5.907 15.677 6.16 15.585 Q 8.011 14.849 9.449 13.469 Q 9.518 13.411 9.518 13.354 Q 9.483 13.25 9.173 13.101 L 8.908 12.951 Q 8.701 12.848 8.701 12.675 Q 8.701 12.56 8.793 12.445 L 9.357 11.721 Q 9.495 11.548 9.69 11.548 Q 9.782 11.548 9.874 11.583 L 10.024 11.652 L 10.196 11.744 Q 10.242 11.778 10.334 11.813 L 10.495 11.905 Q 10.553 11.939 10.639 11.939 Q 10.725 11.939 10.771 11.87 Q 10.84 11.755 10.898 11.663 Q 11.001 11.514 11.185 11.134 Q 11.208 11.1 11.208 11.077 Z M 25.579 13.147 Q 25.579 13.285 25.522 13.365 Q 25.441 13.48 25.269 13.48 L 24.74 13.457 Q 23.751 13.423 22.129 13.423 L 20.588 13.423 Q 18.035 13.423 17.23 13.492 Q 17.207 13.492 17.196 13.492 Q 17.035 13.492 16.954 13.377 Q 16.897 13.296 16.897 13.17 L 16.897 12.917 L 16.885 12.319 L 16.885 12.077 Q 16.885 12.054 16.885 12.043 Q 16.885 11.905 16.966 11.819 Q 17.046 11.732 17.184 11.732 L 17.61 11.744 Q 18.093 11.767 18.806 11.767 L 20.335 11.778 L 20.749 11.778 L 21.566 11.79 L 21.98 11.79 Q 23.728 11.79 24.774 11.755 L 25.28 11.744 Q 25.407 11.744 25.493 11.824 Q 25.579 11.905 25.579 12.043 Q 25.579 12.054 25.579 12.077 Z M 31.164 11.663 Q 31.061 11.778 30.911 11.778 Q 30.762 11.778 30.532 11.583 Q 30.049 11.157 29.623 10.893 Q 29.324 10.697 29.083 10.559 Q 28.887 10.433 28.887 10.272 Q 28.887 10.157 28.979 10.03 L 29.646 9.191 Q 29.773 9.018 29.934 9.018 Q 30.106 9.018 30.336 9.168 Q 30.957 9.547 31.36 9.841 Q 31.762 10.134 31.854 10.226 Q 32.004 10.341 32.004 10.508 Q 32.004 10.674 31.889 10.812 Z M 29.198 15.205 Q 29.117 15.056 29.117 14.952 Q 29.117 14.63 29.485 14.527 Q 31.107 14.101 33.004 12.848 Q 35.178 11.422 35.96 10.26 Q 36.052 10.122 36.167 10.122 Q 36.305 10.122 36.385 10.318 L 36.477 10.594 Q 36.65 11.088 36.776 11.33 Q 36.903 11.571 36.903 11.698 Q 36.903 11.847 36.799 11.962 Q 35.695 13.331 33.821 14.55 Q 32.061 15.688 30.233 16.321 Q 30.152 16.355 30.072 16.355 Q 29.842 16.355 29.715 16.125 Z" transform="matrix(0.837012, 0, 0, 1, 2.871699, 0)" style="paint-order: stroke; stroke: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <path d="M 38.47 20.412 L 38.47 7.882 Q 38.47 6.833 37.808 6.833 Q 37.532 6.833 37.062 7.137 L 36.014 7.827 Q 35.738 8.02 35.393 8.02 Q 35.048 8.02 34.744 7.551 L 33.971 6.309 Q 33.502 5.536 34.275 5.067 L 39.022 2.113 Q 39.243 1.975 39.491 1.975 L 40.844 1.975 Q 41.258 1.975 41.506 2.224 Q 41.754 2.472 41.754 2.886 L 41.754 20.412 Q 41.754 20.826 41.506 21.075 Q 41.258 21.323 40.844 21.323 L 39.381 21.323 Q 38.967 21.323 38.718 21.075 Q 38.47 20.826 38.47 20.412 Z" style="fill: rgb(51, 51, 51); paint-order: stroke; stroke: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《ターン2》アイコン
#[component]
fn IconTwiceTurn() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 50 24" style="vertical-align: middle; position: relative; top: -1px;" title="《ターン2回》">
            <defs>
                <filter id="outline-filter-0" bx:preset="outline 1 1 #fff" color-interpolation-filters="sRGB" x="-50%" y="-50%" width="200%" height="200%">
                    <feMorphology in="SourceAlpha" result="dilated" operator="dilate" radius="1"></feMorphology>
                    <feFlood flood-color="#fff" result="flood"></feFlood>
                    <feComposite in="flood" in2="dilated" operator="in" result="outline"></feComposite>
                    <feMerge>
                        <feMergeNode in="outline"></feMergeNode>
                        <feMergeNode in="SourceGraphic"></feMergeNode>
                    </feMerge>
                </filter>
            </defs>
            <rect width="42.845" height="20.566" style="stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255); filter: url(#outline-filter-0);" rx="6.071" ry="6.071" x="3.577" y="1.717"></rect>
            <path d="M 11.947 10.145 Q 11.947 10.089 11.835 10.089 Q 11.823 10.089 11.801 10.089 Q 11.801 10.089 11.308 10.111 L 10.479 10.156 L 10.02 10.179 Q 9.886 10.201 9.841 10.279 Q 9.046 11.422 8.004 12.329 Q 7.859 12.43 7.702 12.43 Q 7.545 12.43 7.422 12.295 Q 7.03 11.87 6.817 11.713 L 6.817 11.713 Q 6.649 11.567 6.649 11.411 Q 6.649 11.254 6.817 11.119 Q 7.623 10.459 8.357 9.456 Q 9.091 8.454 9.449 7.446 Q 9.505 7.267 9.662 7.188 Q 9.74 7.143 9.83 7.143 Q 9.919 7.143 9.998 7.177 L 10.815 7.435 Q 10.983 7.491 11.051 7.636 Q 11.084 7.703 11.084 7.782 Q 11.084 7.86 11.062 7.95 Q 10.939 8.286 10.815 8.521 Q 10.793 8.622 10.804 8.644 Q 10.827 8.678 10.905 8.667 Q 11.667 8.633 11.93 8.627 Q 12.193 8.622 12.383 8.605 Q 12.574 8.588 12.708 8.583 Q 12.843 8.577 12.899 8.571 Q 12.955 8.566 12.999 8.566 Q 13.111 8.566 13.201 8.611 L 13.839 8.947 Q 14.086 9.07 14.086 9.294 Q 14.086 9.372 14.052 9.462 Q 13.615 10.772 12.955 11.836 Q 12.899 11.926 12.899 11.999 Q 12.899 12.071 12.988 12.15 Q 13.425 12.497 13.817 12.878 Q 13.918 12.99 13.918 13.119 Q 13.918 13.247 13.783 13.382 Q 13.727 13.427 13.683 13.471 Q 13.537 13.595 13.414 13.746 Q 13.291 13.897 13.218 13.975 Q 13.145 14.054 13.106 14.11 Q 13.067 14.166 13.011 14.244 Q 12.921 14.356 12.792 14.356 Q 12.663 14.356 12.563 14.222 Q 12.395 14.043 12.187 13.852 Q 11.98 13.662 11.902 13.583 Q 11.823 13.505 11.734 13.505 Q 11.644 13.505 11.566 13.583 Q 10.087 15.095 7.903 16.025 Q 7.814 16.07 7.724 16.07 Q 7.489 16.07 7.343 15.823 L 7.343 15.812 Q 7.164 15.42 6.895 15.073 Q 6.783 14.939 6.783 14.827 Q 6.783 14.625 7.03 14.535 Q 8.833 13.819 10.233 12.475 Q 10.3 12.419 10.3 12.363 Q 10.267 12.262 9.964 12.116 L 9.707 11.971 Q 9.505 11.87 9.505 11.702 Q 9.505 11.59 9.595 11.478 L 10.143 10.772 Q 10.278 10.604 10.468 10.604 Q 10.558 10.604 10.647 10.638 L 10.793 10.705 L 10.961 10.795 Q 11.006 10.828 11.095 10.862 L 11.252 10.951 Q 11.308 10.985 11.392 10.985 Q 11.476 10.985 11.521 10.918 Q 11.588 10.806 11.644 10.716 Q 11.745 10.571 11.924 10.201 Q 11.947 10.167 11.947 10.145 Z M 23.044 12.161 Q 23.044 12.295 22.988 12.374 Q 22.91 12.486 22.742 12.486 L 22.227 12.463 Q 21.263 12.43 19.684 12.43 L 18.183 12.43 Q 15.697 12.43 14.913 12.497 Q 14.891 12.497 14.879 12.497 Q 14.723 12.497 14.644 12.385 Q 14.588 12.307 14.588 12.183 L 14.588 11.937 L 14.577 11.355 L 14.577 11.119 Q 14.577 11.097 14.577 11.086 Q 14.577 10.951 14.655 10.867 Q 14.734 10.783 14.868 10.783 L 15.283 10.795 Q 15.753 10.817 16.447 10.817 L 17.937 10.828 L 18.34 10.828 L 19.135 10.839 L 19.539 10.839 Q 21.241 10.839 22.26 10.806 L 22.753 10.795 Q 22.876 10.795 22.96 10.873 Q 23.044 10.951 23.044 11.086 Q 23.044 11.097 23.044 11.119 Z M 25.586 10.716 Q 25.486 10.828 25.34 10.828 Q 25.194 10.828 24.97 10.638 Q 24.5 10.223 24.086 9.966 Q 23.794 9.775 23.559 9.641 Q 23.369 9.518 23.369 9.361 Q 23.369 9.249 23.458 9.126 L 24.108 8.308 Q 24.231 8.14 24.388 8.14 Q 24.556 8.14 24.78 8.286 Q 25.385 8.655 25.777 8.941 Q 26.169 9.227 26.258 9.316 Q 26.404 9.428 26.404 9.591 Q 26.404 9.753 26.292 9.887 Z M 23.671 14.166 Q 23.593 14.02 23.593 13.919 Q 23.593 13.606 23.951 13.505 Q 25.53 13.091 27.378 11.87 Q 29.495 10.481 30.257 9.35 Q 30.346 9.215 30.458 9.215 Q 30.593 9.215 30.671 9.406 L 30.761 9.675 Q 30.929 10.156 31.052 10.391 Q 31.175 10.627 31.175 10.75 Q 31.175 10.895 31.074 11.007 Q 29.999 12.34 28.174 13.527 Q 26.46 14.636 24.679 15.252 Q 24.601 15.286 24.522 15.286 Q 24.298 15.286 24.175 15.062 Z" transform="matrix(1.06891, 0, 0, 1.303272, -0.338554, -3.14505)" style="text-wrap-mode: nowrap;"></path>
            <path d="M 32.514 21.941 L 32.514 21.745 Q 32.514 18.833 33.998 16.733 Q 35.314 14.857 38.114 12.561 Q 40.046 10.909 41.082 9.901 Q 42.118 8.893 42.118 7.689 Q 42.118 6.541 41.166 5.925 Q 40.354 5.421 39.15 5.421 Q 36.714 5.421 36.294 7.857 Q 36.238 8.249 35.986 8.501 Q 35.734 8.753 35.314 8.753 L 33.55 8.753 Q 33.13 8.753 32.878 8.501 Q 32.626 8.249 32.654 7.857 Q 32.934 5.057 34.656 3.587 Q 36.378 2.117 39.178 2.117 Q 40.942 2.117 42.51 2.775 Q 44.078 3.433 45.03 5.029 Q 45.786 6.401 45.716 8.039 Q 45.646 9.677 44.918 10.797 Q 44.19 11.917 43.322 12.673 Q 41.334 14.409 40.438 15.109 Q 38.338 16.789 37.848 17.321 Q 37.358 17.853 37.148 18.105 Q 36.938 18.357 37.092 18.595 Q 37.246 18.833 37.694 18.833 L 44.526 18.833 Q 44.946 18.833 45.198 19.085 Q 45.45 19.337 45.45 19.757 L 45.45 21.241 Q 45.45 21.661 45.198 21.913 Q 44.946 22.165 44.526 22.165 L 32.738 22.165 Q 32.514 22.165 32.514 21.941 Z" transform="matrix(0.790493, 0, 0, 1, 8.007174, -0.605432)" style="paint-order: stroke; stroke: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《ゲーム1》アイコン
#[component]
fn IconOnceGame() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 50 24" style="vertical-align: middle; position: relative; top: -1px;" title="《ゲーム1回》">
            <path d="M 8.115 3.181 H 41.886 A 4.087 4.087 0 0 1 45.973 7.268 V 16.732 A 4.087 4.087 0 0 1 41.886 20.819 H 8.115 A 4.087 4.087 0 0 1 4.028 16.732 V 7.268 A 4.087 4.087 0 0 1 8.115 3.181 Z" style="fill: rgb(255, 255, 255); stroke: rgb(255, 0, 0);"></path>
            <path d="M 14.451 9.271 Q 14.313 9.375 14.129 9.375 Q 13.934 9.375 13.796 9.145 Q 13.566 8.777 13.301 8.478 Q 13.163 8.317 13.163 8.156 Q 13.163 7.972 13.37 7.822 L 13.543 7.684 Q 13.646 7.604 13.796 7.604 Q 13.945 7.604 14.026 7.707 Q 14.083 7.776 14.123 7.822 Q 14.164 7.868 14.238 7.949 Q 14.313 8.029 14.411 8.156 Q 14.509 8.282 14.572 8.374 Q 14.635 8.466 14.675 8.518 Q 14.716 8.57 14.767 8.645 Q 14.819 8.719 14.819 8.823 Q 14.819 9.018 14.658 9.122 Z M 8.736 16.988 Q 8.621 17.068 8.442 17.068 Q 8.264 17.068 8.103 16.861 Q 7.85 16.539 7.482 16.194 Q 7.31 16.045 7.31 15.878 Q 7.31 15.711 7.528 15.573 Q 8.448 14.987 9.023 14.211 Q 9.598 13.434 9.782 12.342 L 9.782 12.342 Q 9.794 12.307 9.794 12.261 Q 9.794 12.215 9.742 12.152 Q 9.69 12.089 9.564 12.089 L 8.322 12.089 Q 8.207 12.089 8.149 12.158 Q 8.057 12.273 7.856 12.491 Q 7.655 12.71 7.425 12.94 Q 7.08 13.25 6.884 13.388 Q 6.689 13.526 6.585 13.526 Q 6.378 13.526 6.206 13.342 Q 5.976 13.101 5.585 12.779 Q 5.401 12.629 5.401 12.468 Q 5.401 12.296 5.596 12.146 Q 6.907 11.169 7.735 9.501 Q 8 8.984 8.161 8.455 Q 8.276 8.133 8.575 8.133 Q 8.655 8.133 8.724 8.156 L 9.621 8.42 Q 9.817 8.478 9.897 8.627 Q 9.932 8.708 9.932 8.806 Q 9.932 8.903 9.897 9.03 Q 9.702 9.57 9.541 9.915 Q 9.449 10.122 9.449 10.237 Q 9.449 10.283 9.46 10.295 Q 9.506 10.387 9.713 10.387 L 13.635 10.387 Q 13.83 10.387 13.957 10.508 Q 14.083 10.628 14.083 10.835 L 14.083 11.652 Q 14.083 11.847 13.957 11.968 Q 13.83 12.089 13.635 12.089 L 11.852 12.089 Q 11.737 12.089 11.685 12.146 Q 11.634 12.204 11.611 12.307 Q 11.45 13.837 10.714 14.975 Q 9.978 16.114 8.736 16.988 Z M 13.117 10.111 Q 12.91 10.111 12.715 9.8 Q 12.554 9.547 12.289 9.237 Q 12.14 9.064 12.14 8.886 Q 12.14 8.708 12.335 8.57 L 12.519 8.443 Q 12.623 8.351 12.772 8.351 Q 12.922 8.351 13.002 8.455 Q 13.06 8.524 13.094 8.57 Q 13.106 8.581 13.186 8.673 L 13.577 9.156 Q 13.623 9.237 13.709 9.346 Q 13.796 9.455 13.796 9.582 Q 13.796 9.766 13.635 9.869 L 13.428 10.019 Q 13.29 10.111 13.117 10.111 Z M 25.581 13.147 Q 25.581 13.285 25.523 13.365 Q 25.443 13.48 25.27 13.48 L 24.741 13.457 Q 23.752 13.423 22.131 13.423 L 20.59 13.423 Q 18.037 13.423 17.232 13.492 Q 17.209 13.492 17.197 13.492 Q 17.036 13.492 16.956 13.377 Q 16.898 13.296 16.898 13.17 L 16.898 12.917 L 16.887 12.319 L 16.887 12.077 Q 16.887 12.054 16.887 12.043 Q 16.887 11.905 16.967 11.819 Q 17.048 11.732 17.186 11.732 L 17.611 11.744 Q 18.094 11.767 18.807 11.767 L 20.337 11.778 L 20.751 11.778 L 21.567 11.79 L 21.981 11.79 Q 23.729 11.79 24.776 11.755 L 25.282 11.744 Q 25.408 11.744 25.495 11.824 Q 25.581 11.905 25.581 12.043 Q 25.581 12.054 25.581 12.077 Z M 31.754 13.791 Q 31.754 13.929 31.95 13.929 Q 32.019 13.929 32.369 13.889 Q 32.72 13.848 32.95 13.825 Q 33.18 13.802 33.393 13.774 Q 33.606 13.745 33.772 13.728 Q 33.939 13.71 33.962 13.653 Q 33.962 13.641 33.962 13.618 Q 33.962 13.572 33.905 13.48 Q 33.617 13.112 33.456 12.94 Q 33.295 12.767 33.295 12.601 Q 33.295 12.434 33.491 12.307 L 34.146 11.882 Q 34.238 11.813 34.399 11.813 Q 34.56 11.813 34.675 11.916 Q 35.802 12.928 37.067 14.895 Q 37.148 15.021 37.148 15.148 Q 37.148 15.205 37.125 15.263 Q 37.067 15.447 36.883 15.539 Q 36.515 15.734 36.159 16.033 Q 36.021 16.137 35.819 16.137 Q 35.618 16.137 35.48 15.884 Q 35.4 15.746 35.319 15.602 Q 35.239 15.458 35.124 15.297 Q 35.066 15.194 34.963 15.194 Q 34.94 15.194 30.558 15.792 Q 29.04 16.022 28.994 16.028 Q 28.948 16.033 28.914 16.033 Q 28.787 16.033 28.684 15.964 Q 28.546 15.884 28.5 15.7 L 28.224 14.676 Q 28.212 14.619 28.212 14.561 Q 28.212 14.4 28.327 14.308 Q 28.408 14.251 28.557 14.239 Q 28.661 14.239 28.856 14.216 L 29.592 14.159 Q 29.719 14.159 29.776 14.044 Q 30.386 12.825 31.214 10.651 Q 31.57 9.72 31.674 9.398 Q 31.777 9.076 31.823 8.961 Q 31.927 8.639 32.226 8.639 Q 32.295 8.639 32.364 8.65 L 33.433 8.949 Q 33.64 9.007 33.709 9.156 Q 33.744 9.237 33.744 9.312 Q 33.744 9.386 33.698 9.478 Q 33.652 9.57 33.611 9.657 Q 33.571 9.743 33.456 9.984 Q 33.341 10.226 33.088 10.778 L 31.8 13.607 Q 31.754 13.71 31.754 13.791 Z" transform="matrix(0.837012, 0, 0, 1, 2.871699, 0)" style="fill: rgb(255, 0, 0); paint-order: stroke; stroke: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
            <path d="M 38.47 20.412 L 38.47 7.882 Q 38.47 6.833 37.808 6.833 Q 37.532 6.833 37.062 7.137 L 36.014 7.827 Q 35.738 8.02 35.393 8.02 Q 35.048 8.02 34.744 7.551 L 33.971 6.309 Q 33.502 5.536 34.275 5.067 L 39.022 2.113 Q 39.243 1.975 39.491 1.975 L 40.844 1.975 Q 41.258 1.975 41.506 2.224 Q 41.754 2.472 41.754 2.886 L 41.754 20.412 Q 41.754 20.826 41.506 21.075 Q 41.258 21.323 40.844 21.323 L 39.381 21.323 Q 38.967 21.323 38.718 21.075 Q 38.47 20.826 38.47 20.412 Z" style="fill: rgb(255, 0, 0); paint-order: stroke; stroke: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《クロスアイコン》アイコン
#[component]
fn IconCross() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 106 30" style="vertical-align: middle; position: relative; top: -1px;" title="《クロスアイコン》">
            <path d="M 10.976 15.001 L 0.849 0.983 L 105.142 0.983 L 94.878 14.996 L 105.15 29.018 L 0.851 29.018 L 10.976 15.001 Z" style="stroke-width: 1; fill: rgb(255, 255, 255);"></path>
            <path d="M 3.557 27.851 L 12.727 15.001 L 3.556 2.15 L 102.294 2.15 L 93.126 14.995 L 102.301 27.851 L 3.557 27.851 Z" style="fill: rgb(67, 67, 67); stroke: rgb(0, 0, 0); stroke-width: 1;"></path>
            <path d="M 128.659 100.751 Q 128.659 100.633 128.462 100.633 L 125.507 100.791 Q 125.329 100.791 125.211 100.929 Q 123.674 102.82 121.764 104.238 Q 121.606 104.376 121.36 104.376 Q 121.113 104.376 120.976 104.218 Q 120.956 104.179 120.916 104.14 Q 120.877 104.12 120.857 104.1 L 120.719 103.943 Q 119.991 103.214 119.616 102.938 Q 119.34 102.741 119.34 102.524 Q 119.34 102.308 119.597 102.15 Q 121.192 101.126 122.65 99.392 Q 124.088 97.639 124.837 95.905 Q 125.053 95.413 125.487 95.413 Q 125.644 95.413 125.802 95.472 L 127.319 96.023 Q 127.614 96.122 127.713 96.358 Q 127.752 96.476 127.752 96.595 Q 127.752 96.772 127.624 97.048 Q 127.496 97.323 127.368 97.58 Q 127.24 97.836 127.24 97.914 Q 127.26 97.934 127.299 97.934 Q 127.299 97.934 127.378 97.934 Q 129.486 97.934 130.786 97.717 L 130.806 97.717 Q 131.082 97.717 131.259 97.816 L 132.342 98.407 Q 132.756 98.643 132.756 99.037 Q 132.756 99.156 132.717 99.293 Q 131.417 102.997 128.501 106.011 Q 125.96 108.612 122 110.582 Q 121.862 110.641 121.626 110.641 Q 121.33 110.641 121.113 110.286 Q 120.818 109.774 119.971 108.73 Q 119.794 108.552 119.794 108.355 Q 119.794 108.08 120.128 107.961 Q 124.147 106.385 126.945 103.233 Q 127.89 102.189 128.58 100.988 Q 128.659 100.83 128.659 100.751 Z M 140.042 107.567 L 140.042 98.663 Q 140.042 98.328 140.249 98.111 Q 140.456 97.895 140.811 97.895 L 150.976 97.895 Q 151.331 97.895 151.537 98.111 Q 151.744 98.328 151.744 98.663 L 151.744 107.567 Q 151.744 107.902 151.537 108.119 Q 151.331 108.336 150.976 108.336 L 140.811 108.336 Q 140.456 108.336 140.249 108.119 Q 140.042 107.902 140.042 107.567 Z M 143.51 105.499 L 148.277 105.499 Q 148.454 105.499 148.563 105.391 Q 148.671 105.282 148.671 105.085 L 148.671 101.165 Q 148.671 100.968 148.563 100.86 Q 148.454 100.751 148.277 100.751 L 143.51 100.751 Q 143.332 100.751 143.224 100.86 Q 143.116 100.968 143.116 101.165 L 143.116 105.085 Q 143.116 105.282 143.224 105.391 Q 143.332 105.499 143.51 105.499 Z M 166.655 100.062 Q 166.655 99.884 166.339 99.884 Q 165.985 99.884 163.414 100.072 Q 160.843 100.259 160.804 100.259 Q 160.548 100.259 160.341 100.081 Q 160.134 99.904 160.094 99.589 L 159.917 98.013 Q 159.917 97.974 159.917 97.914 Q 159.917 97.54 160.173 97.343 Q 160.351 97.186 160.685 97.166 L 160.685 97.166 Q 164.428 97.166 168.29 96.792 Q 168.565 96.772 168.703 96.742 Q 168.841 96.713 168.9 96.713 Q 169.117 96.713 169.314 96.851 L 170.516 97.619 Q 170.732 97.757 170.831 98.013 Q 170.87 98.111 170.87 98.239 Q 170.87 98.368 170.811 98.525 Q 170.004 100.613 168.703 102.426 Q 168.625 102.583 168.625 102.721 Q 168.625 102.859 168.802 103.017 Q 171.186 104.908 172.821 106.74 Q 173.037 106.976 173.037 107.233 Q 173.037 107.607 172.683 107.863 Q 172.368 108.08 172.141 108.306 Q 171.914 108.533 171.777 108.661 Q 171.639 108.789 171.461 108.966 Q 171.225 109.203 170.9 109.203 Q 170.575 109.203 170.299 108.868 Q 168.25 106.504 166.871 105.243 Q 166.753 105.144 166.595 105.144 Q 166.438 105.144 166.32 105.282 Q 163.7 107.961 160.488 109.675 Q 160.331 109.774 160.045 109.774 Q 159.76 109.774 159.523 109.439 Q 159.129 108.769 158.656 108.237 Q 158.381 107.922 158.381 107.666 Q 158.381 107.311 158.794 107.095 Q 162.261 105.4 164.96 102.386 Q 165.827 101.401 166.517 100.377 Q 166.655 100.18 166.655 100.062 Z" transform="matrix(1.121962, 0, 0, 1.269534, -111.351166, -116.281868)" style="fill: rgb(255, 255, 255); paint-order: fill; stroke: rgb(0, 0, 0); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《相手ターン》
#[component]
fn IconOpponentTurn() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 74 24" style="vertical-align: middle; position: relative; top: -1px;" title="《相手ターン》">
            <rect x="2.016" y="2.103" width="69.968" height="19.793" style="stroke-width: 1.06; stroke: rgb(255, 0, 0); fill: rgb(255, 0, 0);" rx="1.357" ry="1.357"></rect>
            <rect x="2.983" y="3.07" width="68.033" height="17.858" style="fill: rgb(255, 0, 0); stroke: rgb(255, 255, 255); stroke-width: 1.06;" rx="1.086" ry="1.086"></rect>
            <path d="M 6.982 17.445 L 6.982 14.442 Q 6.982 14.208 6.911 14.208 Q 6.839 14.208 6.722 14.39 Q 6.605 14.572 6.501 14.709 Q 6.397 14.845 6.345 14.936 Q 6.163 15.235 5.988 15.235 Q 5.812 15.235 5.643 15.092 Q 5.253 14.741 4.869 14.488 Q 4.486 14.234 4.772 13.909 Q 5.63 12.973 6.527 11.205 Q 6.592 11.062 6.657 10.932 Q 6.722 10.802 6.8 10.614 Q 6.878 10.425 6.768 10.269 Q 6.657 10.113 6.397 10.113 L 5.435 10.1 Q 5.253 10.1 5.136 9.983 Q 5.019 9.866 5.019 9.684 L 5.019 8.878 Q 5.019 8.683 5.136 8.566 Q 5.253 8.449 5.448 8.449 L 6.553 8.449 Q 6.748 8.449 6.865 8.332 Q 6.982 8.215 6.982 8.02 L 6.982 6.499 Q 6.982 6.304 7.099 6.187 Q 7.216 6.07 7.411 6.07 L 8.386 6.07 Q 8.581 6.07 8.698 6.187 Q 8.815 6.304 8.815 6.499 L 8.815 8.02 Q 8.815 8.215 8.932 8.332 Q 9.049 8.449 9.244 8.449 L 9.855 8.449 Q 10.05 8.449 10.167 8.566 Q 10.284 8.683 10.284 8.878 L 10.284 9.671 Q 10.284 9.866 10.167 9.983 Q 10.05 10.1 9.855 10.1 L 9.218 10.1 Q 8.815 10.1 8.815 10.503 L 8.815 10.75 Q 8.815 10.919 8.919 11.03 Q 9.023 11.14 9.134 11.264 Q 9.244 11.387 9.387 11.53 Q 9.777 11.946 9.933 12.083 Q 10.089 12.219 10.239 12.369 Q 10.388 12.518 10.499 12.518 Q 10.609 12.518 10.609 12.297 L 10.609 6.941 Q 10.609 6.746 10.726 6.629 Q 10.843 6.512 11.038 6.512 L 15.887 6.512 Q 16.082 6.512 16.199 6.629 Q 16.316 6.746 16.316 6.941 L 16.316 17.055 Q 16.316 17.25 16.199 17.367 Q 16.082 17.484 15.887 17.484 L 11.038 17.484 Q 10.843 17.484 10.726 17.367 Q 10.609 17.25 10.609 17.055 L 10.609 13.402 Q 10.609 13.181 10.492 13.181 Q 10.336 13.181 10.063 13.584 Q 9.972 13.688 9.907 13.773 Q 9.842 13.857 9.771 13.942 Q 9.699 14.026 9.608 14.026 Q 9.517 14.026 9.439 13.948 L 9.036 13.519 Q 8.815 13.298 8.815 13.61 L 8.815 17.445 Q 8.815 17.64 8.698 17.757 Q 8.581 17.874 8.386 17.874 L 7.411 17.874 Q 7.216 17.874 7.099 17.757 Q 6.982 17.64 6.982 17.445 Z M 12.871 9.58 L 14.054 9.58 Q 14.249 9.58 14.366 9.463 Q 14.483 9.346 14.483 9.151 L 14.483 8.592 Q 14.483 8.397 14.366 8.28 Q 14.249 8.163 14.054 8.163 L 12.871 8.163 Q 12.676 8.163 12.559 8.28 Q 12.442 8.397 12.442 8.592 L 12.442 9.151 Q 12.442 9.346 12.559 9.463 Q 12.676 9.58 12.871 9.58 Z M 12.871 12.674 L 14.054 12.674 Q 14.249 12.674 14.366 12.557 Q 14.483 12.44 14.483 12.245 L 14.483 11.595 Q 14.483 11.4 14.366 11.283 Q 14.249 11.166 14.054 11.166 L 12.871 11.166 Q 12.676 11.166 12.559 11.283 Q 12.442 11.4 12.442 11.595 L 12.442 12.245 Q 12.442 12.44 12.559 12.557 Q 12.676 12.674 12.871 12.674 Z M 12.871 15.833 L 14.054 15.833 Q 14.249 15.833 14.366 15.716 Q 14.483 15.599 14.483 15.404 L 14.483 14.689 Q 14.483 14.494 14.366 14.377 Q 14.249 14.26 14.054 14.26 L 12.871 14.26 Q 12.676 14.26 12.559 14.377 Q 12.442 14.494 12.442 14.689 L 12.442 15.404 Q 12.442 15.599 12.559 15.716 Q 12.676 15.833 12.871 15.833 Z M 21.722 17.614 Q 21.605 16.769 21.449 16.275 Q 21.371 15.989 21.644 15.989 L 22.476 15.989 Q 22.749 15.989 22.879 15.911 Q 22.996 15.833 22.996 15.56 L 22.996 14.442 Q 22.996 14.247 22.879 14.13 Q 22.762 14.013 22.567 14.013 L 18.303 14.013 Q 18.108 14.013 17.991 13.896 Q 17.874 13.779 17.874 13.584 L 17.874 12.622 Q 17.874 12.427 17.991 12.31 Q 18.108 12.193 18.303 12.193 L 22.567 12.193 Q 22.762 12.193 22.879 12.076 Q 22.996 11.959 22.996 11.764 Q 22.996 11.569 22.879 11.452 Q 22.762 11.335 22.567 11.335 L 19.304 11.335 Q 19.109 11.335 18.992 11.218 Q 18.875 11.101 18.875 10.906 L 18.875 9.983 Q 18.875 9.788 18.992 9.671 Q 19.109 9.554 19.304 9.554 L 22.567 9.554 Q 22.762 9.554 22.879 9.437 Q 22.996 9.32 22.996 9.125 L 22.996 9.06 Q 22.996 8.852 22.872 8.735 Q 22.749 8.618 22.541 8.644 Q 20.981 8.735 19.421 8.761 Q 19.057 8.761 18.992 8.397 Q 18.927 8.137 18.875 7.897 Q 18.823 7.656 18.745 7.396 Q 18.615 6.98 19.044 6.98 Q 19.356 6.993 19.681 6.993 Q 19.681 6.993 20.37 6.993 Q 24.803 6.915 27.26 6.031 Q 27.585 5.927 27.767 6.174 L 28.43 7.071 Q 28.586 7.279 28.527 7.455 Q 28.469 7.63 28.222 7.708 Q 27.26 8.02 25.44 8.319 Q 25.076 8.371 25.076 8.735 L 25.076 9.125 Q 25.076 9.32 25.193 9.437 Q 25.31 9.554 25.505 9.554 L 28.508 9.554 Q 28.703 9.554 28.82 9.671 Q 28.937 9.788 28.937 9.983 L 28.937 10.906 Q 28.937 11.101 28.82 11.218 Q 28.703 11.335 28.508 11.335 L 25.505 11.335 Q 25.31 11.335 25.193 11.452 Q 25.076 11.569 25.076 11.764 Q 25.076 11.959 25.193 12.076 Q 25.31 12.193 25.505 12.193 L 29.522 12.193 Q 29.717 12.193 29.834 12.31 Q 29.951 12.427 29.951 12.622 L 29.951 13.584 Q 29.951 13.779 29.834 13.896 Q 29.717 14.013 29.522 14.013 L 25.505 14.013 Q 25.31 14.013 25.193 14.13 Q 25.076 14.247 25.076 14.442 L 25.076 16.392 Q 25.076 17.666 23.932 17.874 Q 23.581 17.939 23.165 17.939 L 22.086 17.939 Q 21.761 17.939 21.722 17.614 Z M 38.554 10.282 Q 38.554 10.217 38.424 10.217 Q 38.411 10.217 38.385 10.217 Q 38.385 10.217 37.813 10.243 L 36.851 10.295 L 36.318 10.321 Q 36.162 10.347 36.11 10.438 Q 35.187 11.764 33.978 12.817 Q 33.809 12.934 33.627 12.934 Q 33.445 12.934 33.302 12.778 Q 32.847 12.284 32.6 12.102 L 32.6 12.102 Q 32.405 11.933 32.405 11.751 Q 32.405 11.569 32.6 11.413 Q 33.536 10.646 34.388 9.483 Q 35.239 8.319 35.655 7.149 Q 35.72 6.941 35.902 6.85 Q 35.993 6.798 36.097 6.798 Q 36.201 6.798 36.292 6.837 L 37.241 7.136 Q 37.436 7.201 37.514 7.37 Q 37.553 7.448 37.553 7.539 Q 37.553 7.63 37.527 7.734 Q 37.384 8.124 37.241 8.397 Q 37.215 8.514 37.228 8.54 Q 37.254 8.579 37.345 8.566 Q 38.229 8.527 38.535 8.521 Q 38.84 8.514 39.061 8.495 Q 39.282 8.475 39.438 8.469 Q 39.594 8.462 39.659 8.456 Q 39.724 8.449 39.776 8.449 Q 39.906 8.449 40.01 8.501 L 40.751 8.891 Q 41.037 9.034 41.037 9.294 Q 41.037 9.385 40.998 9.489 Q 40.491 11.01 39.724 12.245 Q 39.659 12.349 39.659 12.434 Q 39.659 12.518 39.763 12.609 Q 40.27 13.012 40.725 13.454 Q 40.842 13.584 40.842 13.734 Q 40.842 13.883 40.686 14.039 Q 40.621 14.091 40.569 14.143 Q 40.4 14.286 40.257 14.462 Q 40.114 14.637 40.03 14.728 Q 39.945 14.819 39.9 14.884 Q 39.854 14.949 39.789 15.04 Q 39.685 15.17 39.536 15.17 Q 39.386 15.17 39.269 15.014 Q 39.074 14.806 38.834 14.585 Q 38.593 14.364 38.502 14.273 Q 38.411 14.182 38.307 14.182 Q 38.203 14.182 38.112 14.273 Q 36.396 16.028 33.861 17.107 Q 33.757 17.159 33.653 17.159 Q 33.38 17.159 33.211 16.873 L 33.211 16.86 Q 33.003 16.405 32.691 16.002 Q 32.561 15.846 32.561 15.716 Q 32.561 15.482 32.847 15.378 Q 34.94 14.546 36.565 12.986 Q 36.643 12.921 36.643 12.856 Q 36.604 12.739 36.253 12.57 L 35.954 12.401 Q 35.72 12.284 35.72 12.089 Q 35.72 11.959 35.824 11.829 L 36.461 11.01 Q 36.617 10.815 36.838 10.815 Q 36.942 10.815 37.046 10.854 L 37.215 10.932 L 37.41 11.036 Q 37.462 11.075 37.566 11.114 L 37.748 11.218 Q 37.813 11.257 37.911 11.257 Q 38.008 11.257 38.06 11.179 Q 38.138 11.049 38.203 10.945 Q 38.32 10.776 38.528 10.347 Q 38.554 10.308 38.554 10.282 Z M 54.802 12.622 Q 54.802 12.778 54.737 12.869 Q 54.646 12.999 54.451 12.999 L 53.853 12.973 Q 52.735 12.934 50.902 12.934 L 49.16 12.934 Q 46.274 12.934 45.364 13.012 Q 45.338 13.012 45.325 13.012 Q 45.143 13.012 45.052 12.882 Q 44.987 12.791 44.987 12.648 L 44.987 12.362 L 44.974 11.686 L 44.974 11.413 Q 44.974 11.387 44.974 11.374 Q 44.974 11.218 45.065 11.121 Q 45.156 11.023 45.312 11.023 L 45.793 11.036 Q 46.339 11.062 47.145 11.062 L 48.874 11.075 L 49.342 11.075 L 50.265 11.088 L 50.733 11.088 Q 52.709 11.088 53.892 11.049 L 54.464 11.036 Q 54.607 11.036 54.704 11.127 Q 54.802 11.218 54.802 11.374 Q 54.802 11.387 54.802 11.413 Z M 61.117 10.945 Q 61 11.075 60.831 11.075 Q 60.662 11.075 60.402 10.854 Q 59.856 10.373 59.375 10.074 Q 59.037 9.853 58.764 9.697 Q 58.543 9.554 58.543 9.372 Q 58.543 9.242 58.647 9.099 L 59.401 8.15 Q 59.544 7.955 59.726 7.955 Q 59.921 7.955 60.181 8.124 Q 60.883 8.553 61.338 8.885 Q 61.793 9.216 61.897 9.32 Q 62.066 9.45 62.066 9.639 Q 62.066 9.827 61.936 9.983 Z M 58.894 14.949 Q 58.803 14.78 58.803 14.663 Q 58.803 14.299 59.219 14.182 Q 61.052 13.701 63.197 12.284 Q 65.654 10.672 66.538 9.359 Q 66.642 9.203 66.772 9.203 Q 66.928 9.203 67.019 9.424 L 67.123 9.736 Q 67.318 10.295 67.461 10.568 Q 67.604 10.841 67.604 10.984 Q 67.604 11.153 67.487 11.283 Q 66.239 12.83 64.12 14.208 Q 62.131 15.495 60.064 16.21 Q 59.973 16.249 59.882 16.249 Q 59.622 16.249 59.479 15.989 Z" style="fill: rgb(255, 255, 255); stroke-width: 1.06px; text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《自分ターン》
#[component]
fn IconMyTurn() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 74 24" style="vertical-align: middle; position: relative; top: -1px;" title="《自分ターン》">
            <rect x="2.016" y="2.103" width="69.968" height="19.793" style="stroke-width: 1.06; stroke: rgb(3, 101, 165); fill: rgb(3, 101, 165);" rx="1.046" ry="1.046"></rect>
            <rect x="2.983" y="3.07" width="68.033" height="17.858" style="stroke: rgb(255, 255, 255); stroke-width: 1.06; fill: rgb(3, 101, 165);" rx="1.165" ry="1.165"></rect>
            <path d="M 6.384 17.055 L 6.384 8.007 Q 6.384 7.812 6.501 7.695 Q 6.618 7.578 6.813 7.578 L 8.672 7.578 Q 8.997 7.578 9.075 7.279 L 9.192 6.928 L 9.426 6.096 Q 9.465 5.914 9.66 5.914 L 11.48 6.07 Q 11.636 6.083 11.695 6.174 Q 11.753 6.265 11.708 6.369 Q 11.662 6.473 11.63 6.551 Q 11.597 6.629 11.558 6.72 L 11.35 7.149 Q 11.259 7.344 11.331 7.461 Q 11.402 7.578 11.623 7.578 L 14.977 7.578 Q 15.172 7.578 15.289 7.695 Q 15.406 7.812 15.406 8.007 L 15.406 17.055 Q 15.406 17.25 15.289 17.367 Q 15.172 17.484 14.977 17.484 L 6.813 17.484 Q 6.618 17.484 6.501 17.367 Q 6.384 17.25 6.384 17.055 Z M 8.828 10.36 L 12.962 10.36 Q 13.157 10.36 13.274 10.243 Q 13.391 10.126 13.391 9.931 L 13.391 9.684 Q 13.391 9.489 13.274 9.372 Q 13.157 9.255 12.962 9.255 L 8.828 9.255 Q 8.633 9.255 8.516 9.372 Q 8.399 9.489 8.399 9.684 L 8.399 9.931 Q 8.399 10.126 8.516 10.243 Q 8.633 10.36 8.828 10.36 Z M 8.828 13.09 L 12.962 13.09 Q 13.157 13.09 13.274 12.973 Q 13.391 12.856 13.391 12.661 L 13.391 12.427 Q 13.391 12.232 13.274 12.115 Q 13.157 11.998 12.962 11.998 L 8.828 11.998 Q 8.633 11.998 8.516 12.115 Q 8.399 12.232 8.399 12.427 L 8.399 12.661 Q 8.399 12.856 8.516 12.973 Q 8.633 13.09 8.828 13.09 Z M 8.828 15.807 L 12.962 15.807 Q 13.157 15.807 13.274 15.69 Q 13.391 15.573 13.391 15.378 L 13.391 15.157 Q 13.391 14.962 13.274 14.845 Q 13.157 14.728 12.962 14.728 L 8.828 14.728 Q 8.633 14.728 8.516 14.845 Q 8.399 14.962 8.399 15.157 L 8.399 15.378 Q 8.399 15.573 8.516 15.69 Q 8.633 15.807 8.828 15.807 Z M 19.889 17.796 Q 19.525 17.926 19.317 17.523 Q 19.031 16.951 18.81 16.665 Q 18.524 16.262 18.966 16.132 Q 20.097 15.755 20.909 14.982 Q 21.722 14.208 22.021 13.038 Q 22.086 12.817 21.969 12.687 Q 21.852 12.557 21.631 12.557 L 20.76 12.557 Q 20.565 12.557 20.448 12.44 Q 20.331 12.323 20.331 12.128 L 20.331 12.037 Q 20.331 11.751 20.175 11.751 Q 20.084 11.751 19.921 11.894 Q 19.759 12.037 19.57 12.18 Q 19.382 12.323 19.226 12.44 Q 19.07 12.557 18.901 12.557 Q 18.732 12.557 18.563 12.349 Q 18.173 11.842 17.815 11.524 Q 17.458 11.205 17.906 10.913 Q 18.355 10.62 18.797 10.23 Q 19.239 9.84 19.629 9.398 Q 20.526 8.41 20.955 7.5 Q 21.085 7.227 21.345 7.227 Q 21.449 7.227 21.553 7.279 L 22.593 7.812 Q 22.762 7.89 22.814 8.046 Q 22.866 8.202 22.697 8.501 Q 22.268 9.307 21.683 10.035 Q 21.462 10.334 21.533 10.503 Q 21.605 10.672 21.982 10.672 L 25.752 10.672 Q 26.116 10.672 26.187 10.51 Q 26.259 10.347 25.999 9.996 Q 25.427 9.229 25.076 8.293 Q 24.959 7.981 24.66 7.981 L 23.464 7.981 Q 23.269 7.981 23.152 7.864 Q 23.035 7.747 23.035 7.552 L 23.035 6.603 Q 23.035 6.408 23.152 6.291 Q 23.269 6.174 23.464 6.174 L 26.168 6.174 Q 26.35 6.174 26.467 6.278 Q 26.584 6.382 26.61 6.551 Q 26.831 7.799 27.793 8.878 Q 28.586 9.788 29.873 10.503 Q 30.328 10.763 29.951 11.212 Q 29.574 11.66 29.21 12.245 Q 29.106 12.427 28.956 12.427 Q 28.807 12.427 28.703 12.362 Q 28.599 12.297 28.482 12.226 Q 28.365 12.154 28.287 12.109 Q 28.209 12.063 28.118 12.005 Q 28.027 11.946 27.962 11.946 Q 27.845 11.946 27.819 12.167 Q 27.741 15.053 27.377 16.249 Q 27.065 17.341 26.077 17.666 Q 25.57 17.835 24.803 17.835 L 24.088 17.835 Q 23.763 17.835 23.724 17.51 Q 23.711 17.432 23.704 17.354 Q 23.698 17.276 23.659 17.094 Q 23.542 16.444 23.451 16.145 Q 23.36 15.846 23.659 15.846 L 24.478 15.846 Q 24.985 15.846 25.219 15.69 Q 25.583 15.482 25.739 14.468 Q 25.83 13.896 25.83 12.986 Q 25.843 12.791 25.726 12.674 Q 25.609 12.557 25.414 12.557 L 24.439 12.557 Q 24.27 12.557 24.153 12.661 Q 24.036 12.765 24.01 12.934 Q 23.737 14.754 22.671 15.97 Q 21.605 17.185 19.889 17.796 Z M 38.554 10.282 Q 38.554 10.217 38.424 10.217 Q 38.411 10.217 38.385 10.217 Q 38.385 10.217 37.813 10.243 L 36.851 10.295 L 36.318 10.321 Q 36.162 10.347 36.11 10.438 Q 35.187 11.764 33.978 12.817 Q 33.809 12.934 33.627 12.934 Q 33.445 12.934 33.302 12.778 Q 32.847 12.284 32.6 12.102 L 32.6 12.102 Q 32.405 11.933 32.405 11.751 Q 32.405 11.569 32.6 11.413 Q 33.536 10.646 34.388 9.483 Q 35.239 8.319 35.655 7.149 Q 35.72 6.941 35.902 6.85 Q 35.993 6.798 36.097 6.798 Q 36.201 6.798 36.292 6.837 L 37.241 7.136 Q 37.436 7.201 37.514 7.37 Q 37.553 7.448 37.553 7.539 Q 37.553 7.63 37.527 7.734 Q 37.384 8.124 37.241 8.397 Q 37.215 8.514 37.228 8.54 Q 37.254 8.579 37.345 8.566 Q 38.229 8.527 38.535 8.521 Q 38.84 8.514 39.061 8.495 Q 39.282 8.475 39.438 8.469 Q 39.594 8.462 39.659 8.456 Q 39.724 8.449 39.776 8.449 Q 39.906 8.449 40.01 8.501 L 40.751 8.891 Q 41.037 9.034 41.037 9.294 Q 41.037 9.385 40.998 9.489 Q 40.491 11.01 39.724 12.245 Q 39.659 12.349 39.659 12.434 Q 39.659 12.518 39.763 12.609 Q 40.27 13.012 40.725 13.454 Q 40.842 13.584 40.842 13.734 Q 40.842 13.883 40.686 14.039 Q 40.621 14.091 40.569 14.143 Q 40.4 14.286 40.257 14.462 Q 40.114 14.637 40.03 14.728 Q 39.945 14.819 39.9 14.884 Q 39.854 14.949 39.789 15.04 Q 39.685 15.17 39.536 15.17 Q 39.386 15.17 39.269 15.014 Q 39.074 14.806 38.834 14.585 Q 38.593 14.364 38.502 14.273 Q 38.411 14.182 38.307 14.182 Q 38.203 14.182 38.112 14.273 Q 36.396 16.028 33.861 17.107 Q 33.757 17.159 33.653 17.159 Q 33.38 17.159 33.211 16.873 L 33.211 16.86 Q 33.003 16.405 32.691 16.002 Q 32.561 15.846 32.561 15.716 Q 32.561 15.482 32.847 15.378 Q 34.94 14.546 36.565 12.986 Q 36.643 12.921 36.643 12.856 Q 36.604 12.739 36.253 12.57 L 35.954 12.401 Q 35.72 12.284 35.72 12.089 Q 35.72 11.959 35.824 11.829 L 36.461 11.01 Q 36.617 10.815 36.838 10.815 Q 36.942 10.815 37.046 10.854 L 37.215 10.932 L 37.41 11.036 Q 37.462 11.075 37.566 11.114 L 37.748 11.218 Q 37.813 11.257 37.911 11.257 Q 38.008 11.257 38.06 11.179 Q 38.138 11.049 38.203 10.945 Q 38.32 10.776 38.528 10.347 Q 38.554 10.308 38.554 10.282 Z M 54.802 12.622 Q 54.802 12.778 54.737 12.869 Q 54.646 12.999 54.451 12.999 L 53.853 12.973 Q 52.735 12.934 50.902 12.934 L 49.16 12.934 Q 46.274 12.934 45.364 13.012 Q 45.338 13.012 45.325 13.012 Q 45.143 13.012 45.052 12.882 Q 44.987 12.791 44.987 12.648 L 44.987 12.362 L 44.974 11.686 L 44.974 11.413 Q 44.974 11.387 44.974 11.374 Q 44.974 11.218 45.065 11.121 Q 45.156 11.023 45.312 11.023 L 45.793 11.036 Q 46.339 11.062 47.145 11.062 L 48.874 11.075 L 49.342 11.075 L 50.265 11.088 L 50.733 11.088 Q 52.709 11.088 53.892 11.049 L 54.464 11.036 Q 54.607 11.036 54.704 11.127 Q 54.802 11.218 54.802 11.374 Q 54.802 11.387 54.802 11.413 Z M 61.117 10.945 Q 61 11.075 60.831 11.075 Q 60.662 11.075 60.402 10.854 Q 59.856 10.373 59.375 10.074 Q 59.037 9.853 58.764 9.697 Q 58.543 9.554 58.543 9.372 Q 58.543 9.242 58.647 9.099 L 59.401 8.15 Q 59.544 7.955 59.726 7.955 Q 59.921 7.955 60.181 8.124 Q 60.883 8.553 61.338 8.885 Q 61.793 9.216 61.897 9.32 Q 62.066 9.45 62.066 9.639 Q 62.066 9.827 61.936 9.983 Z M 58.894 14.949 Q 58.803 14.78 58.803 14.663 Q 58.803 14.299 59.219 14.182 Q 61.052 13.701 63.197 12.284 Q 65.654 10.672 66.538 9.359 Q 66.642 9.203 66.772 9.203 Q 66.928 9.203 67.019 9.424 L 67.123 9.736 Q 67.318 10.295 67.461 10.568 Q 67.604 10.841 67.604 10.984 Q 67.604 11.153 67.487 11.283 Q 66.239 12.83 64.12 14.208 Q 62.131 15.495 60.064 16.21 Q 59.973 16.249 59.882 16.249 Q 59.622 16.249 59.479 15.989 Z" style="fill: rgb(255, 255, 255); stroke-width: 1.06px; text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 《ダウン》アイコン
#[component]
fn IconDown() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 24 24" style="vertical-align: middle; position: relative; top: -1px;" title="《ダウン》">
            <rect x="1.821" y="7.977" width="20.357" height="14.567" style="stroke-width: 1; fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0); filter: url(#outline-filter-0);" rx="2.154" ry="2.154"></rect>
            <path d="M 3.344 3.456 L 3.987 3.456 C 8.978 3.456 13.376 5.893 13.376 12.736 C 13.376 13.406 13.454 14.118 13.454 14.88" style="fill: none; stroke-width: 4;"></path>
            <path d="M 4.66 1.55 L 5.303 1.55 C 8.05 1.582 11.109 2.353 13.164 4.1 C 15.201 5.831 16.692 8.98 16.692 12.83 C 16.692 13.022 16.701 13.333 16.713 13.66 L 20.336 13.66 L 14.958 18.156 L 9.579 13.66 L 12.71 13.66 C 12.699 13.366 12.692 13.07 12.692 12.83 C 12.692 9.837 11.984 8.346 10.574 7.148 C 9.182 5.965 7.547 5.518 5.303 5.55 L 4.66 5.55 L 4.66 1.55 Z" style="stroke: rgb(255, 255, 255); paint-order: stroke; stroke-width: 2px;"></path>
        </svg>
    }
}

/// 【ガードアイコン】アイコン（【】形式）
#[component]
fn IconGuard() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 24 24" style="vertical-align: middle; position: relative; top: -1px;" title="【ガード】">
            <path style="stroke-width: 5px; stroke: rgb(0, 0, 0);" d="M 5.332 4.682 L 12 3.079 L 18.668 4.682 L 18.668 7.716 L 20.934 9.104 C 20.99 12.702 16.448 19.578 12.554 20.784 C 12.554 20.784 12.187 20.949 12 20.917 C 11.813 20.949 11.446 20.784 11.446 20.784 C 7.552 19.578 3.01 12.702 3.066 9.104 L 5.332 7.716 L 5.332 4.682 Z"></path>
            <path style="stroke: rgb(255, 255, 255); stroke-width: 2px;" d="M 5.332 4.682 L 12 3.079 L 18.668 4.682 L 18.668 7.716 L 20.934 9.104 C 20.99 12.702 16.448 19.578 12.554 20.784 C 12.554 20.784 12.187 20.949 12 20.917 C 11.813 20.949 11.446 20.784 11.446 20.784 C 7.552 19.578 3.01 12.702 3.066 9.104 L 5.332 7.716 L 5.332 4.682 Z"></path>
            <path d="M 7.733 7.595 Q 7.733 7.299 7.845 7.036 Q 7.958 6.772 8.155 6.579 Q 8.352 6.385 8.615 6.269 Q 8.879 6.153 9.174 6.153 L 14.644 6.153 Q 14.94 6.153 15.203 6.269 Q 15.467 6.385 15.664 6.579 Q 15.861 6.772 15.973 7.036 Q 16.086 7.299 16.086 7.595 L 16.086 8.895 L 14.644 8.895 L 14.644 7.595 L 9.174 7.595 L 9.174 14.795 L 14.644 14.795 L 14.644 12.348 L 11.909 12.348 L 11.909 10.906 L 16.086 10.906 L 16.086 14.795 Q 16.086 15.09 15.973 15.354 Q 15.861 15.617 15.664 15.814 Q 15.467 16.011 15.203 16.124 Q 14.94 16.236 14.644 16.236 L 9.174 16.236 Q 8.879 16.236 8.615 16.124 Q 8.352 16.011 8.155 15.814 Q 7.958 15.617 7.845 15.354 Q 7.733 15.09 7.733 14.795 Z" style="fill: rgb(255, 255, 255); text-wrap-mode: nowrap;"></path>
        </svg>
    }
}

/// 【ライフバースト】アイコン（【】形式）
#[component]
fn IconLifeBurst2() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="【ライフバースト】">
            <path d="M 20.173 6.827 L 31.609 6.827 L 25.89 16.122 L 31.609 25.418 L 20.173 25.418 L 15.939 32.297 L 11.707 25.418 L 0.269 25.418 L 5.988 16.122 L 0.269 6.827 L 11.707 6.827 L 15.939 -0.053 L 20.173 6.827 Z" fill="white" stroke-width="1.363" stroke="transparent"></path>
            <path d="M 19.844 7.794 L 16 1.546 L 12.156 7.794 C 12.156 7.794 2.063 7.794 2.063 7.794 L 7.11 15.997 C 7.11 15.997 2.063 24.201 2.063 24.201 L 12.156 24.201 C 12.156 24.201 16 30.45 16 30.45 L 19.844 24.201 C 19.844 24.201 29.939 24.201 29.939 24.201 L 24.891 15.997 C 24.891 15.997 29.939 7.794 29.939 7.794 L 19.844 7.794 Z M 18.655 22.132 L 16 17.953 L 13.347 22.132 L 16 26.447 L 18.655 22.132 Z M 10.88 9.891 L 14.759 15.997 L 10.88 22.104 L 5.816 22.104 C 5.816 22.104 9.572 15.997 9.572 15.997 L 5.816 9.891 L 10.88 9.891 Z M 21.122 9.891 L 26.185 9.891 C 26.185 9.891 22.428 15.997 22.428 15.997 L 26.185 22.104 L 21.122 22.104 L 17.243 15.997 L 21.122 9.891 Z M 13.347 9.863 L 16 5.548 L 18.655 9.863 L 16 14.041 L 13.347 9.863 Z" stroke-width="1.049" fill="black" stroke="transparent" fill-rule="evenodd"></path>
        </svg>
    }
}

/// 《ライフバースト》アイコン（《》形式）
#[component]
fn IconLifeBurst() -> impl IntoView {
    view! {
        <span class="inline-block text-center w-6 h-5 leading-5 bg-gray-900 text-white text-xs font-bold rounded border border-white" title="《ライフバースト》">
            "LB"
        </span>
    }
}

/// 《ディソナアイコン》
#[component]
fn IconDissona() -> impl IntoView {
    view! {
        <svg class="inline-block" height="1rem" viewBox="0 0 32 32" style="vertical-align: middle; position: relative; top: -1px;" title="【ディソナアイコン】">
            <path d="M 18.435 8 L 18.435 2.931 L 13.565 2.931 L 13.565 8 L 8.198 8 L 8.198 13.565 L 2.931 13.565 L 2.931 18.435 L 8.198 18.435 L 8.198 23.95 L 13.565 23.95 L 13.565 29.069 L 18.435 29.069 L 18.435 23.95 L 24.149 23.95 L 24.149 18.435 L 29.069 18.435 L 29.069 13.565 L 24.149 13.565 L 24.149 8 L 18.435 8 Z" style="stroke: rgb(3, 0, 0); stroke-width: 5.552;"></path>
            <path d="M 18.435 8 L 18.435 2.931 L 13.565 2.931 L 13.565 8 L 8.198 8 L 8.198 13.565 L 2.931 13.565 L 2.931 18.435 L 8.198 18.435 L 8.198 23.95 L 13.565 23.95 L 13.565 29.069 L 18.435 29.069 L 18.435 23.95 L 24.149 23.95 L 24.149 18.435 L 29.069 18.435 L 29.069 13.565 L 24.149 13.565 L 24.149 8 L 18.435 8 Z" style="stroke: rgb(255, 164, 164); stroke-width: 2.06; stroke-linejoin: miter; stroke-miterlimit: 1;"></path>
            <path d="M 19.758 12.477 C 20.532 12.157 21.275 12.101 21.867 12.289 C 21.446 13.243 20.658 14.166 19.657 14.769 C 18.699 15.347 17.742 15.518 16.994 15.322 C 16.978 15.33 16.961 15.337 16.944 15.345 C 16.94 15.332 16.936 15.318 16.932 15.304 C 16.918 15.3 16.905 15.297 16.891 15.292 C 16.899 15.275 16.906 15.258 16.913 15.241 C 16.718 14.494 16.888 13.537 17.466 12.579 C 18.07 11.578 18.993 10.79 19.947 10.368 C 20.135 10.961 20.079 11.704 19.758 12.477 Z" style="fill: rgb(255, 173, 173); stroke-width: 0.324; transform-origin: 82.914px 293.35px;"></path>
            <path d="M 12.242 12.477 C 11.467 12.156 10.725 12.101 10.132 12.289 C 10.554 13.243 11.341 14.165 12.343 14.769 C 13.3 15.347 14.258 15.518 15.004 15.322 C 15.022 15.33 15.039 15.337 15.056 15.345 C 15.06 15.332 15.064 15.318 15.068 15.304 C 15.082 15.3 15.095 15.297 15.109 15.292 C 15.101 15.275 15.094 15.258 15.085 15.241 C 15.282 14.494 15.111 13.536 14.534 12.579 C 13.928 11.577 13.007 10.79 12.053 10.369 C 11.865 10.962 11.92 11.704 12.242 12.477 Z" style="fill: rgb(255, 173, 173); stroke-width: 0.324; transform-origin: 76.753px 293.35px;"></path>
            <path d="M 19.758 19.524 C 20.532 19.844 21.275 19.9 21.867 19.711 C 21.446 18.758 20.658 17.835 19.657 17.232 C 18.699 16.654 17.742 16.483 16.994 16.679 C 16.978 16.671 16.961 16.663 16.944 16.656 C 16.94 16.669 16.936 16.682 16.932 16.697 C 16.918 16.7 16.905 16.705 16.891 16.709 C 16.899 16.726 16.906 16.743 16.913 16.76 C 16.718 17.506 16.888 18.464 17.466 19.422 C 18.07 20.424 18.993 21.211 19.947 21.632 C 20.135 21.039 20.079 20.297 19.758 19.524 Z" style="fill: rgb(255, 173, 173); stroke-width: 0.324; transform-origin: 82.914px 300.048px;"></path>
            <path d="M 12.241 19.524 C 11.467 19.845 10.725 19.9 10.132 19.711 C 10.554 18.758 11.341 17.836 12.343 17.232 C 13.3 16.654 14.258 16.483 15.004 16.679 C 15.022 16.671 15.039 16.663 15.056 16.656 C 15.06 16.67 15.064 16.682 15.068 16.697 C 15.082 16.7 15.095 16.705 15.109 16.709 C 15.101 16.726 15.094 16.743 15.085 16.76 C 15.282 17.506 15.111 18.465 14.534 19.422 C 13.928 20.424 13.007 21.211 12.053 21.632 C 11.865 21.039 11.92 20.298 12.241 19.524 Z" style="fill: rgb(255, 173, 173); stroke-width: 0.324; transform-origin: 76.753px 300.048px;"></path>
        </svg>
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_icon_component_rendering() {
        // アイコンコンポーネントが正常に作成されることを確認
        let cip = IconCip();
        let auto = IconAuto();

        // コンポーネントが作成されることを確認（実際の描画テストは統合テストで）
        assert!(true); // 基本的なコンパイル確認
    }
}
